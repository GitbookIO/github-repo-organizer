{"version":3,"sources":["features/UserLogin/useLogin.tsx","features/UserLogin/LoginStateSwitch.tsx","features/UserLogin/LoginButton.tsx","pages/LogIn.tsx","features/RepositoryTable/DataTypeProviders/DateTypeProvider.tsx","features/RepositoryTable/DataTypeProviders/LinkTypeProvider.tsx","features/RepositoryTable/DataTypeProviders/ChipListProvider.tsx","features/RepositoryTable/DataTypeProviders/ArrayLengthProvider.tsx","features/RepositoryTable/DataTypeProviders/BooleanTypeProvider.tsx","features/RepositoryTable/DataTypeProviders/CheckBoxProvider.tsx","features/RepositoryTable/DataTypeProviders/NumberProvider.tsx","features/RepositoryTable/repositoriesSlice.ts","features/RepositoryTable/index.tsx","pages/Repos.tsx","pages/Topics.tsx","pages/Licenses.tsx","pages/Languages.tsx","features/Routes/index.tsx","features/DrawerMenu/index.tsx","features/TopNav/index.tsx","App.tsx","types/gitHubGraphQlQueryResponseType.ts","api/gitHubGraphQlQuery.tsx","sagas/index.tsx","index.tsx"],"names":["startLoginResult","Octokit","startLogin","query","redirect_uri","window","location","origin","pathname","scope","authProxyUrl","URLSearchParams","assign","useLoginDetails","createLocalStorageStateHook","useLogin","storedLoginDetails","setStoredLoginDetails","useEffect","accessToken","search","get","cancelled","a","octokit","auth","users","getAuthenticated","user","invalidateStoredLogin","LoginStateSwitch","children","selectedLoginState","hasOwnProperty","LoginButton","props","useLoginResult","Button","onClick","LogIn","Fragment","Typography","variant","paragraph","Component","DateTypeProvider","formatterComponent","value","d","Date","toLocaleDateString","availableFilterOperations","LinkTypeProvider","href","title","ChipListProvider","map","v","Chip","style","margin","label","ArrayLengthProvider","length","BooleanTypeProvider","CheckBoxProvider","type","NumberProvider","repositoriesSlice","createSlice","name","initialState","repositories","reducers","setRepositories","state","payload","deleteRepositories","actions","refresh","createAction","loadReposWithAccessToken","tableColumnExtensions","columnName","wordWrapEnabled","defaultVisibleColumns","RepositoryTable","useState","filteringState","setFilteringState","sortingState","setSortingState","searchState","setSearchState","columnVisibilityState","setColumnVisibilityState","useSelector","repositoriesReducer","dispatch","useAppDispatch","login","Paper","columns","getCellValue","row","url","rows","for","defaultFilters","filters","onFiltersChange","defaultSorting","sorting","onSortingChange","defaultCurrentPage","pageSize","onValueChange","columnExtensions","predicate","_","filter","operation","topics","reduce","acc","el","includes","collaborators","showSortingControls","showFilterSelector","hiddenColumnNames","onHiddenColumnNamesChange","columnVisibility","ReposPage","tags","flatMap","repo","prepareTags","data","Object","entries","topicName","topicCount","direction","licenseNickname","license","licenseCount","languages","language","prepareLanguages","languageCount","Router","exact","path","process","component","TopicsPage","LicensesPage","LanguagesPage","DrawerMenuContext","createContext","drawerOpen","toggleDrawer","DrawerMenuWrapper","setDrawerOpen","Provider","newState","DrawerMenuToggleButton","useContext","IconButton","DrawerMenu","Drawer","open","onClose","onKeyDown","List","ListItem","button","to","ListItemText","primary","withStyles","grow","flexGrow","menuButton","marginLeft","marginRight","classes","AppBar","Toolbar","className","color","aria-label","Type","theme","root","appBarSpacer","mixins","toolbar","content","padding","spacing","height","overflow","CssBaseline","endCursor","Convert","json","val","JSON","parse","typ","r","transform","jsonToJSProps","stringify","jsToJSONProps","invalidValue","key","Error","undefined","jsonToJS","forEach","p","js","jsToJSON","getProps","transformPrimitive","transformUnion","typs","l","i","transformEnum","cases","indexOf","transformArray","Array","isArray","transformDate","isNaN","valueOf","transformObject","additional","result","getOwnPropertyNames","prop","prototype","call","ref","typeMap","unionMembers","arrayItems","u","o","GitHubRepoQueryResponseType","Data","Viewer","Repositories","RepositoriesNode","Collaborators","CollaboratorsNode","Issues","LicenseInfo","Owner","Age","RepositoryTopics","RepositoryTopicsNode","Topic","VulnerabilityAlerts","VulnerabilityAlertsNode","SecurityVulnerability","Advisory","PageInfo","Location","Name","Login","Message","PathEnum","startLoadRepos","watchLoadRepositories","watchLoadReposWithAccessToken","watchRefresh","rootSaga","action","graphql","headers","authorization","accept","toGitHubRepoQueryResponseType","console","log","repos","viewer","nodes","id","nameWithOwner","description","createdAt","repositoryTopics","node","topic","stars","stargazers","totalCount","primaryLanguage","isPrivate","isArchived","owner","isFork","licenseInfo","nickname","vulnerabilityAlerts","collaborator","issueCount","issues","pullRequestCount","pullRequests","put","select","repoCount","pageInfo","takeEvery","all","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","middleware","useDispatch","run","sagas","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60697ba7.chunk.js","sourcesContent":["import { Octokit } from \"@octokit/rest\";\nimport { useEffect } from \"react\";\nimport { createLocalStorageStateHook } from \"use-local-storage-state\";\n\nconst authURL = \"https://github-auth-backend-hugh.glitch.me/start_auth\";\n\nexport type UnauthorizedUseLogin = {\n  startLogin: () => any;\n};\n\n// function isUnauthorizedUseLogin(login: unknown): login is UnauthorizedUseLogin {\n//   return (login as UnauthorizedUseLogin).startLogin !== undefined;\n// }\n\nconst octokit_outside = new Octokit();\n\n// type Await<T> = T extends {\n//   then(onfulfilled?: (value: infer U) => unknown): unknown;\n// }\n//   ? U\n//   : T;\n\ntype LoginDetails = {\n  accessToken: string;\n  // user: Await<ReturnType<typeof octokit_outside.users.getAuthenticated>>;\n  user: any;\n};\n\nexport type AuthorizedUseLogin = LoginDetails & {\n  invalidateStoredLogin: () => any;\n};\n\n// function isAuthorizedUseLogin(login: unknown): login is AuthorizedUseLogin {\n//   return typeof (login as AuthorizedUseLogin).accessToken === \"string\";\n// }\n\nexport type UseLogin = UnauthorizedUseLogin | AuthorizedUseLogin;\n\nconst startLoginResult = {\n  startLogin: function startLogin() {\n    const query = {\n      redirect_uri: window.location.origin + window.location.pathname,\n      scope: \"repo\",\n    };\n\n    const authProxyUrl = `${authURL}?${new URLSearchParams(query)}`;\n\n    window.location.assign(authProxyUrl);\n  },\n};\n\nconst useLoginDetails = createLocalStorageStateHook<LoginDetails | null>(\n  \"LoginDetails\",\n  null\n);\n\nexport function useLogin(): UseLogin {\n  const [storedLoginDetails, setStoredLoginDetails] = useLoginDetails();\n\n  useEffect(() => {\n    if (!storedLoginDetails) {\n      const query = new URLSearchParams(window.location.search);\n      const accessToken = query.get(\"access_token\");\n      if (accessToken) {\n        let cancelled = false;\n        (async () => {\n          const octokit = new Octokit({\n            auth: `token ${accessToken}`,\n          });\n          const user = await octokit.users.getAuthenticated();\n          if (!cancelled) {\n            setStoredLoginDetails({\n              accessToken,\n              user,\n            });\n          }\n        })();\n        return () => {\n          cancelled = true;\n        };\n      }\n    }\n  }, [setStoredLoginDetails, Octokit]);\n\n  if (storedLoginDetails) {\n    return {\n      ...storedLoginDetails,\n      invalidateStoredLogin: function () {\n        setStoredLoginDetails(null);\n      },\n    };\n  }\n\n  return startLoginResult;\n}\n\n// export { isUnauthorizedUseLogin, isAuthorizedUseLogin };\n","import { ReactNode } from \"react\";\nimport { useLogin } from \"./useLogin\";\n\ntype LoginStateSwitchProps = {\n  children: ReactNode;\n  selectedLoginState: boolean;\n};\n\nexport default function LoginStateSwitch({\n  children,\n  selectedLoginState,\n}: LoginStateSwitchProps) {\n  const login: any = useLogin();\n\n  // const loggedIn = isAuthorizedUseLogin(login);\n  const loggedIn = login.hasOwnProperty(\"accessToken\");\n\n  if (loggedIn === selectedLoginState) {\n    return <>{children}</>;\n  }\n\n  return null;\n}\n","import { Button } from \"@material-ui/core\";\nimport { ComponentProps } from \"react\";\nimport LoginStateSwitch from \"./LoginStateSwitch\";\nimport { useLogin } from \"./useLogin\";\n\nexport default function LoginButton(props: ComponentProps<typeof Button>) {\n  const useLoginResult: any = useLogin();\n  // if (isAuthorizedUseLogin(useLoginResult)) {\n  //   return null;\n  // }\n  if (useLoginResult.hasOwnProperty(\"accessToken\")) {\n    return null;\n  }\n  return (\n    <LoginStateSwitch selectedLoginState={false}>\n      <Button onClick={() => useLoginResult.startLogin()} {...props}>\n        Login\n      </Button>\n    </LoginStateSwitch>\n  );\n}\n","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nclass LogIn extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Typography variant=\"h1\">Log in!</Typography>\n        <Typography paragraph={true}>\n          Please log in with GitHub to start organizing your repositories.\n        </Typography>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default LogIn;\n","import { DataTypeProvider } from \"@devexpress/dx-react-grid\";\n\nexport default function DateTypeProvider(\n  props: React.ComponentProps<typeof DataTypeProvider>\n) {\n  return (\n    <DataTypeProvider\n      formatterComponent={({ value }) => {\n        // TODO: the type from quicktype should handle this, not sure why it's like this.\n        const d = new Date(value);\n        return <>{d.toLocaleDateString()}</>;\n      }}\n      availableFilterOperations={[\n        \"contains\",\n        \"greaterThan\",\n        \"lessThan\",\n        \"greaterThanOrEqual\",\n        \"lessThanOrEqual\",\n      ]}\n      {...props}\n    />\n  );\n}\n","import { DataTypeProvider } from \"@devexpress/dx-react-grid\";\n\nexport default function LinkTypeProvider(\n  props: React.ComponentProps<typeof DataTypeProvider>\n) {\n  return (\n    <DataTypeProvider\n      formatterComponent={({ value: { href, title } }) => (\n        <a href={href}>{title}</a>\n      )}\n      {...props}\n    />\n  );\n}\n","import { DataTypeProvider } from \"@devexpress/dx-react-grid\";\nimport { Chip } from \"@material-ui/core\";\n\nexport default function ChipListProvider(\n  props: React.ComponentProps<typeof DataTypeProvider>\n) {\n  return (\n    <DataTypeProvider\n      formatterComponent={({ value }: { value: string[] }) =>\n        value ? (\n          <>\n            {value.map((v) => (\n              <Chip style={{ margin: \"3px\" }} key={v} label={v} />\n            ))}\n          </>\n        ) : null\n      }\n      availableFilterOperations={['search', 'empty']}\n      {...props}\n    />\n  );\n}\n","import { DataTypeProvider } from \"@devexpress/dx-react-grid\";\n\nexport default function ArrayLengthProvider(\n  props: React.ComponentProps<typeof DataTypeProvider>\n) {\n  return (\n    <DataTypeProvider\n      formatterComponent={({ value }) => value.length}\n      {...props}\n    />\n  );\n}\n","import { DataTypeProvider } from \"@devexpress/dx-react-grid\";\nimport { Chip } from \"@material-ui/core\";\n\nexport default function BooleanTypeProvider(\n  props: React.ComponentProps<typeof DataTypeProvider>\n) {\n  return (\n    <DataTypeProvider\n      formatterComponent={({ value }) => (\n        <Chip label={value ? \"True\" : \"False\"} />\n      )}\n      {...props}\n    />\n  );\n}\n","import { DataTypeProvider } from \"@devexpress/dx-react-grid\";\n\nexport default function CheckBoxProvider(\n  props: React.ComponentProps<typeof DataTypeProvider>\n) {\n  return (\n    <DataTypeProvider\n      formatterComponent={({ value }) => (\n        <input type=\"checkbox\" value={value} />\n      )}\n      {...props}\n    />\n  );\n}\n","import { DataTypeProvider } from \"@devexpress/dx-react-grid\";\n\nexport default function NumberProvider(\n  props: React.ComponentProps<typeof DataTypeProvider>\n) {\n  return (\n    <DataTypeProvider\n      availableFilterOperations={[\n        \"equal\",\n        \"greaterThan\",\n        \"lessThan\",\n        \"greaterThanOrEqual\",\n        \"lessThanOrEqual\",\n      ]}\n      {...props}\n    />\n  );\n}\n","import { createAction, createSlice } from \"@reduxjs/toolkit\";\nimport { Repository } from \".\";\n\ntype StateType = {\n  repositories: Repository[];\n};\n\nconst initialState: StateType = {\n  repositories: [],\n};\n\nconst repositoriesSlice = createSlice({\n  name: \"repositories\",\n  initialState: initialState,\n  reducers: {\n    setRepositories: (state, { payload }) => ({\n      ...state,\n      repositories: [...(state.repositories || []), ...payload.repositories],\n    }),\n    deleteRepositories: (state) => ({\n      ...state,\n      repositories: [],\n    }),\n  },\n});\n\nexport const {\n  setRepositories,\n  deleteRepositories,\n} = repositoriesSlice.actions;\n\nexport const refresh = createAction(\"REFRESH_REPOSITORIES\");\nexport const loadReposWithAccessToken = createAction<{\n  accessToken: string;\n  login: string;\n}>(\"LOAD_REPOS_WITH_ACCESS_TOKEN\");\n\nexport default repositoriesSlice.reducer;\n","import { useSelector } from \"react-redux\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n  Grid,\n  Table,\n  TableHeaderRow,\n  TableFilterRow,\n  Toolbar,\n  SearchPanel,\n  ColumnChooser,\n  TableColumnVisibility,\n  PagingPanel,\n} from \"@devexpress/dx-react-grid-material-ui\";\nimport {\n  FilteringState,\n  IntegratedFiltering,\n  SearchState,\n  SortingState,\n  IntegratedSorting,\n  PagingState,\n  IntegratedPaging,\n  Filter,\n  Sorting,\n} from \"@devexpress/dx-react-grid\";\nimport { RootState, useAppDispatch } from \"../../index\";\nimport {\n  ChipListProvider,\n  DateTypeProvider,\n  LinkTypeProvider,\n  ArrayLengthProvider,\n  BooleanTypeProvider,\n  CheckBoxProvider,\n} from \"./DataTypeProviders\";\nimport NumberProvider from \"./DataTypeProviders/NumberProvider\";\nimport { useState } from \"react\";\nimport { useLogin } from \"../UserLogin\";\nimport { loadReposWithAccessToken, refresh } from \"./repositoriesSlice\";\n\nconst tableColumnExtensions = [\n  { columnName: \"topics\", wordWrapEnabled: true },\n  { columnName: \"description\", wordWrapEnabled: true },\n];\n\nexport type Repository = {\n  id: string;\n  name: string;\n  nameWithOwner: string;\n  description: string | null;\n  createdAt: Date;\n  topics: string[];\n  stars: number;\n  language: string | null;\n  isPrivate: boolean;\n  isArchived: boolean;\n  url: string;\n  owner: string;\n  isFork: boolean;\n  licenseNickname: string | null;\n  vulnerabilityAlerts: unknown[];\n  collaborators: string[] | null;\n  issueCount: number;\n  pullRequestCount: number;\n};\n\nconst defaultVisibleColumns = [\n  \"isPrivate\",\n  \"isArchived\",\n  \"isFork\",\n  \"owner\",\n  \"licenseNickname\",\n  \"vulnerabilityAlerts\",\n  \"collaborators\",\n  \"issueCount\",\n];\n\nexport default function RepositoryTable() {\n  const [filteringState, setFilteringState] = useState<Filter[]>([]);\n  const [sortingState, setSortingState] = useState<Sorting[]>([]);\n  const [searchState, setSearchState] = useState<string>(\"\");\n  const [columnVisibilityState, setColumnVisibilityState] = useState<string[]>(\n    defaultVisibleColumns\n  );\n  const repositories = useSelector(\n    (state: RootState) => state.repositoriesReducer.repositories\n  );\n  const dispatch = useAppDispatch();\n  const login: any = useLogin();\n  if (login.hasOwnProperty(\"accessToken\") && repositories.length === 0) {\n    dispatch(\n      loadReposWithAccessToken({\n        accessToken: login.accessToken,\n        login: login.user.login,\n      })\n    );\n  }\n\n  return (\n    <Paper>\n      <Grid\n        columns={[\n          {\n            name: \"selected\",\n            title: \"Selected\",\n            getCellValue: (row) => false,\n          },\n          {\n            name: \"name\",\n            title: \"Name\",\n            getCellValue: (row) => ({\n              href: row.url,\n              title: row.name,\n            }),\n          },\n          {\n            name: \"description\",\n            title: \"Description\",\n          },\n          {\n            name: \"createdAt\",\n            title: \"Created At\",\n          },\n          {\n            name: \"topics\",\n            title: \"Topics\",\n          },\n          {\n            name: \"stars\",\n            title: \"Stars\",\n          },\n          {\n            name: \"language\",\n            title: \"Language\",\n          },\n          {\n            name: \"owner\",\n            title: \"Owner\",\n          },\n          {\n            name: \"isPrivate\",\n            title: \"Private\",\n          },\n          {\n            name: \"isArchived\",\n            title: \"Archived\",\n          },\n          {\n            name: \"isFork\",\n            title: \"Fork\",\n          },\n          {\n            name: \"licenseNickname\",\n            title: \"License\",\n          },\n          {\n            name: \"vulnerabilityAlerts\",\n            title: \"Vulnerability Alerts\",\n          },\n          {\n            name: \"collaborators\",\n            title: \"Collaborators\",\n          },\n          {\n            name: \"issueCount\",\n            title: \"Open Issue Count\",\n          },\n          {\n            name: \"pullRequestCount\",\n            title: \"Open Pull Request Count\",\n          },\n        ]}\n        rows={repositories}\n      >\n        <DateTypeProvider for={[\"createdAt\"]} />\n        <LinkTypeProvider for={[\"name\"]} />\n        <ChipListProvider for={[\"topics\", \"collaborators\"]} />\n        <BooleanTypeProvider for={[\"isPrivate\", \"isArchived\", \"isFork\"]} />\n        <ArrayLengthProvider for={[\"vulnerabilityAlerts\"]} />\n        <CheckBoxProvider for={[\"selected\"]} />\n        <NumberProvider for={[\"stars\", \"pullRequestCount\", \"issueCount\"]} />\n        <FilteringState\n          defaultFilters={[]}\n          filters={filteringState}\n          onFiltersChange={(filters) => setFilteringState(filters)}\n        />\n        <SortingState\n          defaultSorting={[]}\n          sorting={sortingState}\n          onSortingChange={(sorting) => setSortingState(sorting)}\n        />\n        <PagingState defaultCurrentPage={0} pageSize={40} />\n        <SearchState\n          value={searchState}\n          onValueChange={(search) => setSearchState(search)}\n        />\n        <IntegratedFiltering\n          columnExtensions={[\n            {\n              columnName: \"topics\",\n              predicate: (_, filter, row) =>\n                filter.operation === \"empty\"\n                  ? row.topics.length === 0\n                  : row.topics.reduce(\n                      (acc: boolean, el: string) =>\n                        (filter.value && el.includes(filter.value)) || acc,\n                      false\n                    ),\n            },\n            {\n              columnName: \"collaborators\",\n              predicate: (_, filter, row) =>\n                filter.operation === \"empty\"\n                  ? row.collaborators.length === 0\n                  : row.collaborators?.reduce(\n                      (acc: boolean, el: string) =>\n                        (filter.value && el.includes(filter.value)) || acc,\n                      false\n                    ),\n            },\n          ]}\n        />\n        <IntegratedSorting />\n        <IntegratedPaging />\n        <Table columnExtensions={tableColumnExtensions} />\n        <TableHeaderRow showSortingControls />\n        <TableFilterRow showFilterSelector />\n        <TableColumnVisibility\n          hiddenColumnNames={columnVisibilityState}\n          onHiddenColumnNamesChange={(columnVisibility) =>\n            setColumnVisibilityState(columnVisibility)\n          }\n        />\n        <Toolbar />\n        <SearchPanel />\n        <ColumnChooser />\n        <PagingPanel />\n      </Grid>\n    </Paper>\n  );\n}\n","import RepositoryTable from \"../features/RepositoryTable\";\n\nexport default function ReposPage() {\n  return (\n    <>\n      <RepositoryTable />\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  Grid,\n  Table,\n  TableHeaderRow,\n} from \"@devexpress/dx-react-grid-material-ui\";\nimport { SortingState, IntegratedSorting } from \"@devexpress/dx-react-grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { RootState } from \"..\";\nimport { useSelector } from \"react-redux\";\n\ninterface Repository {\n  topics: string[];\n}\n\nconst prepareTags = (repositories: Repository[]) => {\n  const emptyAccumulator: { [key: string]: number } = {};\n  return repositories\n    .flatMap((repo) => repo.topics)\n    .reduce(\n      (acc, el) => ({\n        ...acc,\n        [el]: acc[el] ? acc[el] + 1 : 1,\n      }),\n      emptyAccumulator\n    );\n};\n\nexport default () => {\n  const repositories = useSelector(\n    (state: RootState) => state.repositoriesReducer.repositories\n  );\n  if (!repositories) {\n    return <p>Loading</p>;\n  }\n  const tags = prepareTags(repositories);\n  const data = Object.entries(tags).map(([key, value]) => ({\n    topicName: key,\n    topicCount: value,\n  }));\n  return (\n    <Paper>\n      <Grid\n        columns={[\n          {\n            name: \"topicName\",\n            title: \"Topic Name\",\n          },\n          {\n            name: \"topicCount\",\n            title: \"Topic Count\",\n          },\n        ]}\n        rows={data}\n      >\n        <SortingState\n          defaultSorting={[{ columnName: \"topicCount\", direction: \"desc\" }]}\n        />\n        <IntegratedSorting />\n        <Table />\n        <TableHeaderRow showSortingControls />\n      </Grid>\n    </Paper>\n  );\n};\n","import {\n  Grid,\n  Table,\n  TableHeaderRow,\n} from \"@devexpress/dx-react-grid-material-ui\";\nimport { SortingState, IntegratedSorting } from \"@devexpress/dx-react-grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"..\";\n\ninterface Repository {\n  licenseNickname: string | null;\n}\n\nconst prepareTags = (repositories: Repository[]) => {\n  const emptyAccumulator: { [key: string]: number } = {};\n  return repositories\n    .map((repo) => repo.licenseNickname)\n    .reduce(\n      (acc, el) => ({\n        ...acc,\n        [el || \"null\"]: acc[el || \"null\"] ? acc[el || \"null\"] + 1 : 1,\n      }),\n      emptyAccumulator\n    );\n};\n\ntype LicensesProps = {\n  repositories?: Repository[];\n};\n\nexport default () => {\n  const repositories = useSelector(\n    (state: RootState) => state.repositoriesReducer.repositories\n  );\n  const tags = prepareTags(repositories);\n  const data = Object.entries(tags).map(([key, value]) => ({\n    license: key,\n    licenseCount: value,\n  }));\n  return (\n    <Paper>\n      <Grid\n        columns={[\n          {\n            name: \"license\",\n            title: \"License\",\n          },\n          {\n            name: \"licenseCount\",\n            title: \"License Count\",\n          },\n        ]}\n        rows={data}\n      >\n        <SortingState\n          defaultSorting={[{ columnName: \"licenseCount\", direction: \"desc\" }]}\n        />\n        <IntegratedSorting />\n        <Table />\n        <TableHeaderRow showSortingControls />\n      </Grid>\n    </Paper>\n  );\n};\n","import {\n  Grid,\n  Table,\n  TableHeaderRow,\n} from \"@devexpress/dx-react-grid-material-ui\";\nimport { SortingState, IntegratedSorting } from \"@devexpress/dx-react-grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"..\";\n\ninterface Repository {\n  language: string | null;\n}\n\nconst prepareLanguages = (repositories: Repository[]) => {\n  const emptyAccumulator: { [key: string]: number } = {};\n  return repositories\n    .map((repo) => repo.language)\n    .reduce(\n      (acc, el) => ({\n        ...acc,\n        [el || \"null\"]: acc[el || \"null\"] ? acc[el || \"null\"] + 1 : 1,\n      }),\n      emptyAccumulator\n    );\n};\n\nexport default () => {\n  const repositories = useSelector(\n    (state: RootState) => state.repositoriesReducer.repositories\n  );\n  if (!repositories) {\n    return <p>Loading</p>;\n  }\n  const languages = prepareLanguages(repositories);\n  const data = Object.entries(languages).map(([key, value]) => ({\n    language: key,\n    languageCount: value,\n  }));\n  return (\n    <Paper>\n      <Grid\n        columns={[\n          {\n            name: \"language\",\n            title: \"Language\",\n          },\n          {\n            name: \"languageCount\",\n            title: \"Count\",\n          },\n        ]}\n        rows={data}\n      >\n        <SortingState\n          defaultSorting={[{ columnName: \"languageCount\", direction: \"desc\" }]}\n        />\n        <IntegratedSorting />\n        <Table />\n        <TableHeaderRow showSortingControls />\n      </Grid>\n    </Paper>\n  );\n};\n","import { Route, Switch } from \"react-router-dom\";\nimport { LoginStateSwitch } from \"../UserLogin\";\nimport LogInPage from \"../../pages/LogIn\";\nimport ReposPage from \"../../pages/Repos\";\nimport TopicsPage from \"../../pages/Topics\";\nimport LicensesPage from \"../../pages/Licenses\";\nimport LanguagesPage from \"../../pages/Languages\";\n\nexport default function Router() {\n  return (\n    <>\n      <LoginStateSwitch selectedLoginState={false}>\n        <LogInPage />\n      </LoginStateSwitch>\n      <LoginStateSwitch selectedLoginState={true}>\n        <Switch>\n          <Route\n            exact\n            path={process.env.PUBLIC_URL + \"/\"}\n            component={ReposPage}\n          />\n          <Route\n            exact\n            path={process.env.PUBLIC_URL + \"/topics\"}\n            component={TopicsPage}\n          />\n          <Route\n            exact\n            path={process.env.PUBLIC_URL + \"/licenses\"}\n            component={LicensesPage}\n          />\n          <Route\n            exact\n            path={process.env.PUBLIC_URL + \"/languages\"}\n            component={LanguagesPage}\n          />\n        </Switch>\n      </LoginStateSwitch>\n    </>\n  );\n}\n","import {\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { createContext, ReactNode, useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst DrawerMenuContext = createContext({\n  drawerOpen: false,\n  toggleDrawer: (_?: boolean) => {},\n});\n\ntype DrawerMenuWrapperProps = {\n  children: ReactNode;\n};\n\nexport function DrawerMenuWrapper({ children }: DrawerMenuWrapperProps) {\n  const [drawerOpen, setDrawerOpen] = useState(false);\n\n  function toggleDrawer(newState?: boolean) {\n    if (typeof newState === \"undefined\") {\n      setDrawerOpen(!drawerOpen);\n      return;\n    } else {\n      setDrawerOpen(newState);\n    }\n  }\n\n  return (\n    <DrawerMenuContext.Provider value={{ drawerOpen, toggleDrawer }}>\n      {children}\n    </DrawerMenuContext.Provider>\n  );\n}\n\nexport function DrawerMenuToggleButton(\n  props: React.ComponentProps<typeof IconButton>\n) {\n  const { toggleDrawer } = useContext(DrawerMenuContext);\n  return (\n    <IconButton onClick={() => toggleDrawer()} {...props}>\n      <MenuIcon />\n    </IconButton>\n  );\n}\n\nexport function DrawerMenu() {\n  const { drawerOpen, toggleDrawer } = useContext(DrawerMenuContext);\n  return (\n    <Drawer open={drawerOpen} onClose={() => toggleDrawer(false)}>\n      <div\n        onClick={() => toggleDrawer(false)}\n        onKeyDown={() => toggleDrawer(false)}\n      >\n        <List>\n          <ListItem button>\n            <Link to={process.env.PUBLIC_URL + \"/\"}>\n              <ListItemText primary=\"Repositories\" />\n            </Link>\n          </ListItem>\n          <ListItem button>\n            <Link to={process.env.PUBLIC_URL + \"/topics\"}>\n              <ListItemText primary=\"Topics\" />\n            </Link>\n          </ListItem>\n          <ListItem button>\n            <Link to={process.env.PUBLIC_URL + \"/licenses\"}>\n              <ListItemText primary=\"Licenses\" />\n            </Link>\n          </ListItem>\n          <ListItem button>\n            <Link to={process.env.PUBLIC_URL + \"/languages\"}>\n              <ListItemText primary=\"Languages\" />\n            </Link>\n          </ListItem>\n        </List>\n      </div>\n    </Drawer>\n  );\n}\n","import { refresh } from \"../RepositoryTable/repositoriesSlice\";\n\nimport { LoginButton, LoginStateSwitch } from \"../UserLogin\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  withStyles,\n  WithStyles,\n} from \"@material-ui/core\";\nimport { useAppDispatch } from \"../..\";\nimport { DrawerMenuToggleButton } from \"../DrawerMenu\";\n\nconst styles = () => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n});\n\nfunction TopNav({ classes }: WithStyles<typeof styles>) {\n  const dispatch = useAppDispatch();\n  return (\n    <AppBar>\n      <Toolbar>\n        <LoginStateSwitch selectedLoginState={true}>\n          <DrawerMenuToggleButton\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"Menu\"\n          />\n        </LoginStateSwitch>\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n          GitHub Repo Organizer\n        </Typography>\n        <LoginButton color=\"inherit\" />\n        <LoginStateSwitch selectedLoginState={true}>\n          <Button onClick={() => dispatch(refresh())} color=\"inherit\">\n            Refresh\n          </Button>\n        </LoginStateSwitch>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default withStyles(styles)(TopNav);\n","import { Theme, WithStyles, withStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport Routes from \"./features/Routes\";\nimport { DrawerMenuWrapper, DrawerMenu } from \"./features/DrawerMenu\";\nimport TopNav from \"./features/TopNav\";\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n});\n\nfunction App({ classes }: WithStyles<typeof styles>) {\n  return (\n    <DrawerMenuWrapper>\n      <CssBaseline />\n      <Router>\n        <div className=\"App\">\n          <TopNav />\n          <DrawerMenu />\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <Routes />\n          </main>\n        </div>\n      </Router>\n    </DrawerMenuWrapper>\n  );\n}\n\nexport default withStyles(styles)(App);\n","// To parse this data:\n//\n//   import { Convert, GitHubRepoQueryResponseType } from \"./file\";\n//\n//   const gitHubRepoQueryResponseType = Convert.toGitHubRepoQueryResponseType(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nexport interface GitHubRepoQueryResponseType {\n  data: Data;\n  errors: Error[];\n}\n\nexport interface Data {\n  viewer: Viewer;\n}\n\nexport interface Viewer {\n  repositories: Repositories;\n}\n\nexport interface Repositories {\n  pageInfo: PageInfo;\n  totalCount: number;\n  nodes: RepositoriesNode[];\n}\n\nexport interface RepositoriesNode {\n  id: string;\n  description: null | string;\n  name: string;\n  createdAt: Date;\n  repositoryTopics: RepositoryTopics;\n  stargazers: Issues;\n  primaryLanguage: Age | null;\n  isPrivate: boolean;\n  isArchived: boolean;\n  issues: Issues;\n  pullRequests: Issues;\n  owner: Owner;\n  nameWithOwner: string;\n  url: string;\n  isFork: boolean;\n  licenseInfo: LicenseInfo | null;\n  vulnerabilityAlerts: VulnerabilityAlerts;\n  collaborators: Collaborators | null;\n}\n\nexport interface Collaborators {\n  nodes: CollaboratorsNode[];\n}\n\nexport interface CollaboratorsNode {\n  name: string | null;\n  login: string;\n}\n\nexport interface Issues {\n  totalCount: number;\n}\n\nexport interface LicenseInfo {\n  name: string;\n  nickname: null | string;\n}\n\nexport interface Owner {\n  login: string;\n}\n\nexport interface Age {\n  name: string;\n}\n\nexport interface RepositoryTopics {\n  nodes: RepositoryTopicsNode[];\n}\n\nexport interface RepositoryTopicsNode {\n  topic: Topic;\n}\n\nexport interface Topic {\n  id: string;\n  name: string;\n}\n\nexport interface VulnerabilityAlerts {\n  nodes: VulnerabilityAlertsNode[];\n}\n\nexport interface VulnerabilityAlertsNode {\n  securityVulnerability: SecurityVulnerability;\n}\n\nexport interface SecurityVulnerability {\n  package: Age;\n  advisory: Advisory;\n}\n\nexport interface Advisory {\n  description: string;\n  summary: string;\n}\n\nexport interface PageInfo {\n  endCursor: string;\n}\n\nexport interface Error {\n  type: Type;\n  path: Array<string | number>;\n  locations: Location[];\n  message: ErrorMessage;\n}\n\nexport interface Location {\n  line: number;\n  column: number;\n}\n\nexport type ErrorMessage = string;\n\nexport enum Type {\n  Forbidden = \"FORBIDDEN\",\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n  static toGitHubRepoQueryResponseType(\n    json: string\n  ): GitHubRepoQueryResponseType {\n    return cast(JSON.parse(json), r(\"GitHubRepoQueryResponseType\"));\n  }\n\n  static gitHubRepoQueryResponseTypeToJson(\n    value: GitHubRepoQueryResponseType\n  ): string {\n    return JSON.stringify(\n      uncast(value, r(\"GitHubRepoQueryResponseType\")),\n      null,\n      2\n    );\n  }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = \"\"): never {\n  if (key) {\n    throw Error(\n      `Invalid value for key \"${key}\". Expected type ${JSON.stringify(\n        typ\n      )} but got ${JSON.stringify(val)}`\n    );\n  }\n  throw Error(\n    `Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`\n  );\n}\n\nfunction jsonToJSProps(typ: any): any {\n  if (typ.jsonToJS === undefined) {\n    const map: any = {};\n    typ.props.forEach((p: any) => (map[p.json] = { key: p.js, typ: p.typ }));\n    typ.jsonToJS = map;\n  }\n  return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n  if (typ.jsToJSON === undefined) {\n    const map: any = {};\n    typ.props.forEach((p: any) => (map[p.js] = { key: p.json, typ: p.typ }));\n    typ.jsToJSON = map;\n  }\n  return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = \"\"): any {\n  function transformPrimitive(typ: string, val: any): any {\n    if (typeof typ === typeof val) return val;\n    return invalidValue(typ, val, key);\n  }\n\n  function transformUnion(typs: any[], val: any): any {\n    // val must validate against one typ in typs\n    const l = typs.length;\n    for (let i = 0; i < l; i++) {\n      const typ = typs[i];\n      try {\n        return transform(val, typ, getProps);\n      } catch (_) {}\n    }\n    return invalidValue(typs, val);\n  }\n\n  function transformEnum(cases: string[], val: any): any {\n    if (cases.indexOf(val) !== -1) return val;\n    return invalidValue(cases, val);\n  }\n\n  function transformArray(typ: any, val: any): any {\n    // val must be an array with no invalid elements\n    if (!Array.isArray(val)) return invalidValue(\"array\", val);\n    return val.map((el) => transform(el, typ, getProps));\n  }\n\n  function transformDate(val: any): any {\n    if (val === null) {\n      return null;\n    }\n    const d = new Date(val);\n    if (isNaN(d.valueOf())) {\n      return invalidValue(\"Date\", val);\n    }\n    return d;\n  }\n\n  function transformObject(\n    props: { [k: string]: any },\n    additional: any,\n    val: any\n  ): any {\n    if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n      return invalidValue(\"object\", val);\n    }\n    const result: any = {};\n    Object.getOwnPropertyNames(props).forEach((key) => {\n      const prop = props[key];\n      const v = Object.prototype.hasOwnProperty.call(val, key)\n        ? val[key]\n        : undefined;\n      result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n    });\n    Object.getOwnPropertyNames(val).forEach((key) => {\n      if (!Object.prototype.hasOwnProperty.call(props, key)) {\n        result[key] = transform(val[key], additional, getProps, key);\n      }\n    });\n    return result;\n  }\n\n  if (typ === \"any\") return val;\n  if (typ === null) {\n    if (val === null) return val;\n    return invalidValue(typ, val);\n  }\n  if (typ === false) return invalidValue(typ, val);\n  while (typeof typ === \"object\" && typ.ref !== undefined) {\n    typ = typeMap[typ.ref];\n  }\n  if (Array.isArray(typ)) return transformEnum(typ, val);\n  if (typeof typ === \"object\") {\n    return typ.hasOwnProperty(\"unionMembers\")\n      ? transformUnion(typ.unionMembers, val)\n      : typ.hasOwnProperty(\"arrayItems\")\n      ? transformArray(typ.arrayItems, val)\n      : typ.hasOwnProperty(\"props\")\n      ? transformObject(getProps(typ), typ.additional, val)\n      : invalidValue(typ, val);\n  }\n  // Numbers can be parsed by Date but shouldn't be.\n  if (typ === Date && typeof val !== \"number\") return transformDate(val);\n  return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n  return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n  return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n  return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n  return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n  return { props, additional };\n}\n\nfunction m(additional: any) {\n  return { props: [], additional };\n}\n\nfunction r(name: string) {\n  return { ref: name };\n}\n\nconst typeMap: any = {\n  GitHubRepoQueryResponseType: o(\n    [\n      { json: \"data\", js: \"data\", typ: r(\"Data\") },\n      { json: \"errors\", js: \"errors\", typ: a(r(\"Error\")) },\n    ],\n    false\n  ),\n  Data: o([{ json: \"viewer\", js: \"viewer\", typ: r(\"Viewer\") }], false),\n  Viewer: o(\n    [{ json: \"repositories\", js: \"repositories\", typ: r(\"Repositories\") }],\n    false\n  ),\n  Repositories: o(\n    [\n      { json: \"pageInfo\", js: \"pageInfo\", typ: r(\"PageInfo\") },\n      { json: \"totalCount\", js: \"totalCount\", typ: 0 },\n      { json: \"nodes\", js: \"nodes\", typ: a(r(\"RepositoriesNode\")) },\n    ],\n    false\n  ),\n  RepositoriesNode: o(\n    [\n      { json: \"id\", js: \"id\", typ: \"\" },\n      { json: \"description\", js: \"description\", typ: u(null, \"\") },\n      { json: \"name\", js: \"name\", typ: \"\" },\n      { json: \"createdAt\", js: \"createdAt\", typ: Date },\n      {\n        json: \"repositoryTopics\",\n        js: \"repositoryTopics\",\n        typ: r(\"RepositoryTopics\"),\n      },\n      { json: \"stargazers\", js: \"stargazers\", typ: r(\"Issues\") },\n      {\n        json: \"primaryLanguage\",\n        js: \"primaryLanguage\",\n        typ: u(r(\"Age\"), null),\n      },\n      { json: \"isPrivate\", js: \"isPrivate\", typ: true },\n      { json: \"isArchived\", js: \"isArchived\", typ: true },\n      { json: \"issues\", js: \"issues\", typ: r(\"Issues\") },\n      { json: \"pullRequests\", js: \"pullRequests\", typ: r(\"Issues\") },\n      { json: \"owner\", js: \"owner\", typ: r(\"Owner\") },\n      { json: \"nameWithOwner\", js: \"nameWithOwner\", typ: \"\" },\n      { json: \"url\", js: \"url\", typ: \"\" },\n      { json: \"isFork\", js: \"isFork\", typ: true },\n      {\n        json: \"licenseInfo\",\n        js: \"licenseInfo\",\n        typ: u(r(\"LicenseInfo\"), null),\n      },\n      {\n        json: \"vulnerabilityAlerts\",\n        js: \"vulnerabilityAlerts\",\n        typ: r(\"VulnerabilityAlerts\"),\n      },\n      {\n        json: \"collaborators\",\n        js: \"collaborators\",\n        typ: u(r(\"Collaborators\"), null),\n      },\n    ],\n    false\n  ),\n  Collaborators: o(\n    [{ json: \"nodes\", js: \"nodes\", typ: a(r(\"CollaboratorsNode\")) }],\n    false\n  ),\n  CollaboratorsNode: o(\n    [\n      { json: \"name\", js: \"name\", typ: u(r(\"Name\"), null) },\n      { json: \"login\", js: \"login\", typ: \"\" },\n    ],\n    false\n  ),\n  Issues: o([{ json: \"totalCount\", js: \"totalCount\", typ: 0 }], false),\n  LicenseInfo: o(\n    [\n      { json: \"name\", js: \"name\", typ: \"\" },\n      { json: \"nickname\", js: \"nickname\", typ: u(null, \"\") },\n    ],\n    false\n  ),\n  Owner: o([{ json: \"login\", js: \"login\", typ: r(\"Login\") }], false),\n  Age: o([{ json: \"name\", js: \"name\", typ: \"\" }], false),\n  RepositoryTopics: o(\n    [{ json: \"nodes\", js: \"nodes\", typ: a(r(\"RepositoryTopicsNode\")) }],\n    false\n  ),\n  RepositoryTopicsNode: o(\n    [{ json: \"topic\", js: \"topic\", typ: r(\"Topic\") }],\n    false\n  ),\n  Topic: o(\n    [\n      { json: \"id\", js: \"id\", typ: \"\" },\n      { json: \"name\", js: \"name\", typ: \"\" },\n    ],\n    false\n  ),\n  VulnerabilityAlerts: o(\n    [{ json: \"nodes\", js: \"nodes\", typ: a(r(\"VulnerabilityAlertsNode\")) }],\n    false\n  ),\n  VulnerabilityAlertsNode: o(\n    [\n      {\n        json: \"securityVulnerability\",\n        js: \"securityVulnerability\",\n        typ: r(\"SecurityVulnerability\"),\n      },\n    ],\n    false\n  ),\n  SecurityVulnerability: o(\n    [\n      { json: \"package\", js: \"package\", typ: r(\"Age\") },\n      { json: \"advisory\", js: \"advisory\", typ: r(\"Advisory\") },\n    ],\n    false\n  ),\n  Advisory: o(\n    [\n      { json: \"description\", js: \"description\", typ: \"\" },\n      { json: \"summary\", js: \"summary\", typ: \"\" },\n    ],\n    false\n  ),\n  PageInfo: o([{ json: \"endCursor\", js: \"endCursor\", typ: \"\" }], false),\n  Error: o(\n    [\n      { json: \"type\", js: \"type\", typ: r(\"Type\") },\n      { json: \"path\", js: \"path\", typ: a(u(r(\"PathEnum\"), 0)) },\n      { json: \"locations\", js: \"locations\", typ: a(r(\"Location\")) },\n      { json: \"message\", js: \"message\", typ: r(\"Message\") },\n    ],\n    false\n  ),\n  Location: o(\n    [\n      { json: \"line\", js: \"line\", typ: 0 },\n      { json: \"column\", js: \"column\", typ: 0 },\n    ],\n    false\n  ),\n  Name: [\n    \"Axel Samuelsson\",\n    \"Edward Knapp\",\n    \"Hugh Rawlinson\",\n    \"Joe \",\n    \"Lonney\",\n    \"Maria Katsourani\",\n    \"Max Sandelin\",\n    \"Naomi Pentrel\",\n    \"Nevo Segal\",\n  ],\n  Login: [\n    \"hughrawlinson\",\n    \"joenash\",\n    \"limbero\",\n    \"meyda\",\n    \"nevosegal\",\n    \"spotify\",\n    \"themaxsandelin\",\n  ],\n  Message: [\"Must have push access to view repository collaborators.\"],\n  PathEnum: [\"collaborators\", \"nodes\", \"repositories\", \"viewer\"],\n  Type: [\"FORBIDDEN\"],\n};\n","const query = (endCursor: string) => `query {\n    viewer {\n      repositories (first:40${endCursor ? ', after:\"' + endCursor + '\"' : \"\"}) {\n        pageInfo {\n          endCursor\n        }\n        totalCount\n        nodes {\n          id\n          name\n          description\n          createdAt\n          stargazers {\n            totalCount\n          }\n          primaryLanguage {\n            name\n          }\n          isPrivate\n          isArchived\n          issues (states: OPEN) {\n            totalCount\n          }\n          pullRequests (states: OPEN) {\n            totalCount\n          }\n          owner {\n            login\n          }\n          nameWithOwner\n          url\n          isFork\n          licenseInfo {\n            name\n            nickname\n          }\n          vulnerabilityAlerts (first:50){\n            nodes {\n              securityVulnerability {\n                package {\n                  name\n                }\n                advisory {\n                  description\n                  summary\n                }\n              }\n            }\n          }\n          collaborators (first: 50){\n            nodes {\n              name\n              login\n            }\n          }\n        repositoryTopics(first:100) {\n          nodes {\n            topic {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nexport default query;\n","import { put, takeEvery, all, select, call } from \"redux-saga/effects\";\nimport { graphql } from \"@octokit/graphql\";\nimport query from \"../api/gitHubGraphQlQuery\";\nimport { Convert, Data } from \"../types/gitHubGraphQlQueryResponseType\";\nimport {\n  deleteRepositories,\n  setRepositories,\n} from \"../features/RepositoryTable/repositoriesSlice\";\nimport { RootState } from \"..\";\nimport { Repository } from \"../features/RepositoryTable\";\n\nexport function* startLoadRepos(endCursor: string | null, action: any): any {\n  const { accessToken, login } = action.payload;\n  let data: Data;\n\n  try {\n    const result = yield call(() =>\n      graphql<Data>({\n        query: query(endCursor ?? \"\"),\n        headers: {\n          authorization: `token ${accessToken}`,\n          accept: \"application/vnd.github.vixen-preview+json\",\n        },\n      })\n    );\n    data = Convert.toGitHubRepoQueryResponseType(`{ data: ${result} }`).data;\n  } catch (error) {\n    console.log(error);\n    data = error.data;\n  }\n\n  const repos: Repository[] = data.viewer.repositories.nodes.map((repo) => ({\n    id: repo.id,\n    name: repo.name,\n    nameWithOwner: repo.nameWithOwner,\n    description: repo.description,\n    createdAt: repo.createdAt,\n    topics: repo.repositoryTopics.nodes.map((node) => node.topic.name),\n    stars: repo.stargazers.totalCount,\n    language: ((l) => l && l.name)(repo.primaryLanguage),\n    isPrivate: repo.isPrivate,\n    isArchived: repo.isArchived,\n    url: repo.url,\n    owner: repo.owner.login,\n    isFork: repo.isFork,\n    licenseNickname:\n      repo.licenseInfo && (repo.licenseInfo.nickname || repo.licenseInfo.name),\n    vulnerabilityAlerts: repo.vulnerabilityAlerts.nodes,\n    collaborators:\n      repo.collaborators &&\n      repo.collaborators.nodes\n        .filter((a) => a.login !== login)\n        .map((collaborator) => collaborator.login),\n    issueCount: repo.issues.totalCount,\n    pullRequestCount: repo.pullRequests.totalCount,\n  }));\n\n  yield put(setRepositories({ repositories: repos }));\n\n  const repoCount = yield select(\n    (state: RootState) => state.repositoriesReducer.repositories?.length\n  );\n  console.log(repoCount);\n  if (repoCount < data.viewer.repositories.totalCount) {\n    yield startLoadRepos(data.viewer.repositories.pageInfo.endCursor, action);\n  }\n}\n\nexport function* watchLoadRepositories() {\n  yield takeEvery(\"START_LOAD_REPOSITORIES\", startLoadRepos, null);\n}\n\nexport function* watchLoadReposWithAccessToken() {\n  yield takeEvery(\"LOAD_REPOS_WITH_ACCESS_TOKEN\", startLoadRepos, null);\n}\n\nfunction* refresh() {\n  yield put(deleteRepositories());\n  yield startLoadRepos(null, null);\n}\n\nexport function* watchRefresh() {\n  yield takeEvery(\"REFRESH_REPOSITORIES\", refresh);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    watchLoadRepositories(),\n    watchRefresh(),\n    watchLoadReposWithAccessToken(),\n  ]);\n}\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport createSagaMiddleware from \"redux-saga\";\nimport sagas from \"./sagas\";\nimport { Provider, useDispatch } from \"react-redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport repositoriesReducer from \"./features/RepositoryTable/repositoriesSlice\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = configureStore({\n  reducer: {\n    repositoriesReducer,\n  },\n  middleware: [sagaMiddleware],\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n\nsagaMiddleware.run(sagas);\nstore.dispatch({ type: \"INIT\" });\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}