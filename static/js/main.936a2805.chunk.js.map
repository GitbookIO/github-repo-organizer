{"version":3,"sources":["components/LogIn.js","components/RepositoryTable.js","components/Repos.js","components/Topics.js","components/Licenses.js","components/Languages.js","App.js","columns/index.js","columns/description.js","columns/name.js","sagas/gitHubGraphQlQuery.js","sagas/index.js","reducers/index.js","index.js"],"names":["LogIn","react_default","a","createElement","Fragment","Typography","variant","paragraph","Component","DateTypeProvider","props","dx_react_grid_es","Object","assign","formatterComponent","_ref","value","toLocaleDateString","LinkTypeProvider","_ref2","_ref2$value","href","title","ChipListProvider","_ref3","map","v","Chip","style","margin","key","label","BooleanTypeProvider","_ref4","ArrayLengthProvider","_ref5","length","tableColumnExtensions","columnName","wordWrapEnabled","connect","state","gridState","dispatch","setGridState","type","withStyles","theme","_ref6","repositories","Paper","dx_react_grid_material_ui_es","columns","name","getCellValue","row","url","Date","createdAt","collaborators","collaborator","login","rows","RepositoryTable_DateTypeProvider","for","RepositoryTable_LinkTypeProvider","RepositoryTable_ChipListProvider","RepositoryTable_BooleanTypeProvider","RepositoryTable_ArrayLengthProvider","defaultFilters","filters","filteringState","onFiltersChange","objectSpread","defaultSorting","sorting","sortingState","onSortingChange","defaultCurrentPage","pageSize","searchState","onValueChange","columnExtensions","showSortingControls","showFilterSelector","hiddenColumnNames","columnVisibilityState","onHiddenColumnNamesChange","Repos","components_RepositoryTable","Topics","tags","flatMap","repo","topics","reduce","acc","el","defineProperty","data","entries","slicedToArray","topicName","topicCount","direction","Licenses","licenseNickname","license","licenseCount","Languages","languages","language","languageCount","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","drawerOpen","ifLoggedOut","bind","assertThisInitialized","ifLoggedIn","ifRepositories","setState","child","loggedIn","_this2","classes","CssBaseline","react_router_dom","className","AppBar","Toolbar","IconButton","menuButton","color","aria-label","onClick","toggleDrawer","Menu_default","grow","Button","startLogIn","refresh","Drawer","open","onClose","onKeyDown","List","ListItem","button","to","process","ListItemText","primary","content","appBarSpacer","components_LogIn","react_router","exact","path","component","queryParams","qs","parse","location","search","JSON","loadRepositories","loadUser","root","flexGrow","marginLeft","marginRight","mixins","toolbar","padding","spacing","height","overflow","description","getColumnName","getColumnType","dataType","dataSource","getColumnFragment","fragment","query","endCursor","concat","values","column","init","watchInit","watchStartLogIn","startLoadRepos","watchLoadRepositories","watchRefresh","startLoadUser","watchLoadUser","rootSaga","octokit","Octokit","authURL","regenerator_default","wrap","_context","prev","next","window","substring","access_token","put","stop","_marked","_context2","takeEvery","_marked2","authProxyUrl","_context3","redirect_uri","origin","pathname","scope","stringify","_marked3","_context4","_marked4","accessToken","user","repos","_context5","select","sent","graphql","headers","authorization","accept","t0","viewer","nodes","id","nameWithOnwer","nameWithOwner","repositoryTopics","node","topic","stars","stargazers","totalCount","l","primaryLanguage","isPrivate","isArchived","owner","isFork","licenseInfo","nickname","vulnerabilityAlerts","filter","issueCount","issues","pullRequestCount","pullRequests","pageInfo","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","_context9","auth","users","getAuthenticated","activity","checkStarringRepo","starRepo","_marked9","_context10","_marked10","_context11","all","_marked11","initialState","reducer","arguments","undefined","action","toConsumableArray","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","sagas","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.936a2805.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nclass LogIn extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Typography variant=\"display1\">\n          Log in!\n        </Typography>\n        <Typography paragraph={true}>\n          Please log in with GitHub to start organizing your repositories.\n        </Typography>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default LogIn;\n","import React from 'react';\nimport { connect } from 'react-redux';\n// import PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\n// import { connect } from 'react-redux';\nimport { Grid, Table, TableHeaderRow, TableFilterRow, Toolbar, SearchPanel, ColumnChooser, TableColumnVisibility, PagingPanel } from '@devexpress/dx-react-grid-material-ui';\nimport { FilteringState, IntegratedFiltering, SearchState, SortingState, IntegratedSorting, PagingState, IntegratedPaging } from '@devexpress/dx-react-grid';\nimport { DataTypeProvider } from '@devexpress/dx-react-grid';\n\nconst styles = theme => ({});\n\nconst DateTypeProvider = props => (\n  <DataTypeProvider\n    formatterComponent={({value}) => value.toLocaleDateString()}\n    {...props}\n  />\n);\n\nconst LinkTypeProvider = props => (\n  <DataTypeProvider\n    formatterComponent={({value:{href, title}}) => (<a href={href}>{title}</a>)}\n    {...props}\n  />\n);\n\nconst ChipListProvider = props => (\n  <DataTypeProvider\n    formatterComponent={({value}) => (value ? <>\n      {value.map((v) => (<Chip style={{margin: \"3px\"}} key={v} label={v}/>))}\n  </> : null)}\n  {...props}\n  />\n);\n\nconst BooleanTypeProvider = props => (\n  <DataTypeProvider\n    formatterComponent={({value}) => (<Chip label={value ? \"True\" : \"False\"} />)}\n    {...props}\n  />\n);\n\nconst ArrayLengthProvider = props => (\n  <DataTypeProvider\n    formatterComponent={({value}) => value.length}\n    {...props}\n  />\n);\n\nconst tableColumnExtensions = [\n  { columnName: 'topics', wordWrapEnabled: true },\n  { columnName: 'description', wordWrapEnabled: true },\n];\n\nfunction RepositoryTable({repositories, gridState, setGridState}) {\n  function setFilteringState(filteringState) {\n    setGridState({...gridState, filteringState});\n  }\n\n  function setSortingState(sortingState) {\n    setGridState({...gridState, sortingState});\n  }\n\n  function setSearchState(searchState) {\n    setGridState({...gridState, searchState});\n  }\n\n  function setColumnVisibilityState(columnVisibilityState) {\n    setGridState({...gridState, columnVisibilityState});\n  }\n\n  return (\n    <Paper>\n      <Grid\n        columns={[{\n          name: 'name',\n          title: 'Name',\n          getCellValue: row => ({\n            href: row.url,\n            title: row.name\n          })\n        },{\n          name: 'description',\n          title: 'Description'\n        },{\n          name: 'createdAt',\n          title: 'Created At',\n          getCellValue: row => new Date(row.createdAt)\n        },{\n          name: 'topics',\n          title: 'Topics',\n        },{\n          name: 'stars',\n          title: 'Stars'\n        },{\n          name: 'language',\n          title: 'Language'\n        },{\n          name: 'owner',\n          title: 'Owner'\n        },{\n          name: 'isPrivate',\n          title: 'Private',\n        },{\n          name: 'isArchived',\n          title: 'Archived',\n        },{\n          name: 'isFork',\n          title: 'Fork',\n        },{\n          name: 'licenseNickname',\n          title: 'License'\n        },{\n          name: 'vulnerabilityAlerts',\n          title: 'Vulnerability Alerts'\n        },{\n          name: 'collaborators',\n          title: 'Collaborators',\n          getCellValue: row => row.collaborators && row.collaborators.map(collaborator => collaborator.login)\n        },{\n          name: 'issueCount',\n          title: 'Open Issue Count'\n        },{\n          name: 'pullRequestCount',\n          title: 'Open Pull Request Count'\n        }]}\n    rows={repositories}>\n    <DateTypeProvider\n    for={['createdAt']}\n  />\n    <LinkTypeProvider\n      for={['name']}\n    />\n    <ChipListProvider\n      for={['topics', 'collaborators']}\n    />\n    <BooleanTypeProvider\n      for={['isPrivate', 'isArchived', 'isFork']}\n    />\n    <ArrayLengthProvider\n      for={['vulnerabilityAlerts']}\n    />\n    <FilteringState\n      defaultFilters={[]}\n      filters={gridState.filteringState}\n      onFiltersChange={setFilteringState}\n    />\n    <SortingState\n      defaultSorting={[]}\n      sorting={gridState.sortingState}\n      onSortingChange={setSortingState}\n    />\n    <PagingState\n      defaultCurrentPage={0}\n      pageSize={40}\n    />\n    <SearchState\n      value={gridState.searchState}\n      onValueChange={setSearchState}\n    />\n    <IntegratedFiltering/>\n    <IntegratedSorting/>\n    <IntegratedPaging/>\n    <Table columnExtensions={tableColumnExtensions}/>\n    <TableHeaderRow showSortingControls />\n    <TableFilterRow showFilterSelector />\n    <TableColumnVisibility\n      hiddenColumnNames={gridState.columnVisibilityState}\n      onHiddenColumnNamesChange={setColumnVisibilityState}\n    />\n    <Toolbar/>\n    <SearchPanel />\n    <ColumnChooser />\n    <PagingPanel />\n  </Grid>\n</Paper>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  gridState: state.gridState\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setGridState: gridState => dispatch({\n    type: \"SET_GRID_STATE\",\n    gridState\n  })\n})\n\nexport default\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )(withStyles(styles)(RepositoryTable));\n","import React from 'react';\nimport RepositoryTable from './RepositoryTable';\n\nexport default function Repos(props) {\n  return (<>\n    <RepositoryTable\n      repositories={props.repositories}/>\n  </>);\n}\n","import React from 'react';\nimport { Grid, Table, TableHeaderRow } from '@devexpress/dx-react-grid-material-ui';\nimport {\n    SortingState,\n    IntegratedSorting,\n} from '@devexpress/dx-react-grid';\nimport Paper from '@material-ui/core/Paper';\n\nconst prepareTags = repositories => repositories\n      .flatMap(repo => repo.topics)\n      .reduce((acc, el) => ({\n          ...acc,\n          [el]: acc[el] ? acc[el] + 1 : 1\n      }), {});\n\nexport default (props) => {\n  const tags = prepareTags(props.repositories);\n  const data = Object.entries(tags).map(([key, value]) => ({\n    topicName: key,\n    topicCount: value\n  }));\n  return (<Paper>\n    <Grid\n      columns={[{\n        name: 'topicName',\n        title: 'Topic Name'\n      },{\n        name: 'topicCount',\n        title: 'Topic Count'\n      }]}\n      rows={data}>\n      <SortingState\n        defaultSorting={[{ columnName: 'topicCount', direction: 'desc' }]}\n      />\n      <IntegratedSorting />\n      <Table />\n      <TableHeaderRow showSortingControls />\n    </Grid>\n  </Paper>);\n}\n","import React from 'react';\nimport { Grid, Table, TableHeaderRow } from '@devexpress/dx-react-grid-material-ui';\nimport {\n    SortingState,\n    IntegratedSorting,\n} from '@devexpress/dx-react-grid';\nimport Paper from '@material-ui/core/Paper';\n\nconst prepareTags = repositories => repositories\n      .map(repo => repo.licenseNickname)\n      .reduce((acc, el) => ({\n          ...acc,\n          [el]: acc[el] ? acc[el] + 1 : 1\n      }), {});\n\nexport default (props) => {\n  const tags = prepareTags(props.repositories);\n  const data = Object.entries(tags).map(([key, value]) => ({\n    license: key,\n    licenseCount: value\n  }));\n  return (<Paper>\n    <Grid\n      columns={[{\n        name: 'license',\n        title: 'License'\n      },{\n        name: 'licenseCount',\n        title: 'License Count'\n      }]}\n      rows={data}>\n      <SortingState\n        defaultSorting={[{ columnName: 'licenseCount', direction: 'desc' }]}\n      />\n      <IntegratedSorting />\n      <Table />\n      <TableHeaderRow showSortingControls />\n    </Grid>\n  </Paper>);\n}\n","import React from 'react';\nimport { Grid, Table, TableHeaderRow } from '@devexpress/dx-react-grid-material-ui';\nimport {\n    SortingState,\n    IntegratedSorting,\n} from '@devexpress/dx-react-grid';\nimport Paper from '@material-ui/core/Paper';\n\nconst prepareLanguages = repositories => repositories\n      .map(repo => repo.language)\n      .reduce((acc, el) => ({\n          ...acc,\n          [el]: acc[el] ? acc[el] + 1 : 1\n      }), {});\n\nexport default (props) => {\n  const languages = prepareLanguages(props.repositories);\n  const data = Object.entries(languages).map(([key, value]) => ({\n    language: key,\n    languageCount: value\n  }));\n  return (<Paper>\n    <Grid\n      columns={[{\n        name: 'language',\n        title: 'Language'\n      },{\n        name: 'languageCount',\n        title: 'Count'\n      }]}\n      rows={data}>\n      <SortingState\n        defaultSorting={[{ columnName: 'languageCount', direction: 'desc' }]}\n      />\n      <IntegratedSorting />\n      <Table />\n      <TableHeaderRow showSortingControls />\n    </Grid>\n  </Paper>);\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { connect } from 'react-redux';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport qs from 'query-string';\n\nimport LogIn from './components/LogIn.js';\nimport Repos from './components/Repos.js';\nimport Topics from './components/Topics.js'\nimport Licenses from './components/Licenses.js'\nimport Languages from './components/Languages.js'\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    height: '100vh',\n    overflow: 'auto',\n  },\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      drawerOpen: false\n    };\n\n    this.ifLoggedOut = this.ifLoggedOut.bind(this);\n    this.ifLoggedIn = this.ifLoggedIn.bind(this);\n    this.ifRepositories = this.ifRepositories.bind(this);\n  }\n\n  toggleDrawer(value) {\n    this.setState(state => ({\n      ...state,\n      drawerOpen: value ? value : !state.drawerOpen\n    }));\n  }\n\n  ifRepositories(child) {\n    if (this.props.repositories) {\n      return child;\n    }\n    return null\n  }\n\n  ifLoggedOut(child) {\n    if(!this.props.loggedIn) {\n      return child;\n    }\n    return null;\n  }\n\n  ifLoggedIn(child) {\n    if(this.props.loggedIn) {\n      return child;\n    }\n    return null;\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <React.Fragment>\n        <CssBaseline/>\n        <Router>\n        <div className=\"App\">\n          <AppBar>\n            <Toolbar>\n              {this.ifLoggedIn(\n                <IconButton\n                  className={classes.menuButton}\n                  color=\"inherit\"\n                  aria-label=\"Menu\"\n                  onClick={() => this.toggleDrawer()}\n                      >\n                  <MenuIcon />\n                </IconButton>\n              )}\n              <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                GitHub Repo Organizer\n              </Typography>\n              {this.ifLoggedOut(\n                 <Button onClick={this.props.startLogIn} color=\"inherit\">Login</Button>\n              )}\n              {this.ifLoggedIn(\n                <Button onClick={this.props.refresh} color=\"inherit\">Refresh</Button>\n              )}\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            open={this.state.drawerOpen}\n            onClose={() => this.toggleDrawer(false)}\n          >\n            <div\n              onClick={() => this.toggleDrawer(false)}\n              onKeyDown={() => this.toggleDrawer(false)}>\n              <List>\n                <ListItem button>\n                  <Link to={process.env.PUBLIC_URL + \"/\"}>\n                    <ListItemText primary=\"Repositories\" />\n                  </Link>\n                </ListItem>\n                <ListItem button>\n                  <Link to={process.env.PUBLIC_URL + \"/topics\"}>\n                    <ListItemText primary=\"Topics\" />\n                  </Link>\n                </ListItem>\n                <ListItem button>\n                  <Link to={process.env.PUBLIC_URL + \"/licenses\"}>\n                    <ListItemText primary=\"Licenses\" />\n                  </Link>\n                </ListItem>\n                <ListItem button>\n                  <Link to={process.env.PUBLIC_URL + \"/languages\"}>\n                    <ListItemText primary=\"Languages\" />\n                  </Link>\n                </ListItem>\n              </List>\n            </div>\n          </Drawer>\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            {this.ifLoggedOut(<LogIn/>)}\n            {this.ifLoggedIn(\n            <Switch>\n              <Route\n                  exact\n                  path={process.env.PUBLIC_URL + \"/\"}\n              component={(props) => {\n                  const queryParams = qs.parse(props.location.search);\n                if (queryParams.gridState) {\n                  this.props.setGridState(\n                    JSON.parse(queryParams.gridState)\n                  );\n                }\n                return (<Repos\n                  queryParams={queryParams}\n                  repositories={this.props.repositories || []}\n                />)\n              }}\n              />\n              <Route exact path={process.env.PUBLIC_URL + \"/topics\"} component={() => (\n                  <Topics repositories={this.props.repositories}/>\n              )}/>\n              <Route exact path={process.env.PUBLIC_URL + \"/licenses\"} component={() => (\n                  <Licenses repositories={this.props.repositories}/>\n              )}/>\n              <Route exact path={process.env.PUBLIC_URL + \"/languages\"} component={() => (\n                  <Languages repositories={this.props.repositories}/>\n              )}/>\n            </Switch>\n            )}\n            </main>\n          </div>\n        </Router>\n      </React.Fragment>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  loggedIn: state.loggedIn,\n  repositories: state.repositories\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  startLogIn: () => dispatch({type: 'START_LOG_IN'}),\n  refresh: () => dispatch({type: 'REFRESH_REPOSITORIES'}),\n  loadRepositories: () => dispatch({type: 'START_LOAD_REPOSITORIES'}),\n  loadUser: () => dispatch({type: 'START_LOAD_USER'}),\n  setGridState: (gridState) => dispatch({\n    type: 'SET_GRID_STATE',\n    gridState\n  })\n});\n\nexport default\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(withStyles(styles)(App));\n","import description from './description';\nimport name from './name';\n\nexport default {\n  description,\n  name\n};\n","export default {\n  getColumnName: () => \"description\",\n  getColumnType: () => ({\n    dataType: \"string\",\n    dataSource: \"GitHubGraphQL\"\n  }),\n  getColumnFragment: () => ({\n    name: 'description',\n    fragment: 'fragment description on Repository { description } '\n  })\n};\n","export default {\n  getColumnName: () => \"name\",\n  getColumnType: () => ({\n    dataType: \"string\",\n    dataSource: \"GitHubGraphQL\"\n  }),\n  getColumnFragment: () => ({\n    name: 'name',\n    fragment: 'fragment name on Repository { name } '\n  })\n};\n","import columns from '../columns';\n\nconst query = (endCursor) => `query {\n    viewer {\n      repositories (first:100${endCursor ? \", after:\\\"\" + endCursor + '\"': ''}) {\n        pageInfo {\n          endCursor\n        }\n        totalCount\n        nodes {\n          id\n          ${\n          Object.values(columns).map(column => `...${column.getColumnFragment().name}\\n`)\n          }\n          ...createdAt\n          ...repositoryTopics\n          ...stargazers\n          ...primaryLanguage\n          ...private\n          ...archived\n          ...issues\n          ...pullRequestCount\n          ...owner\n          ...nameWithOwner\n          ...url\n          ...fork\n          ...licenses\n          ...vulnerabilityAlerts\n          ...collaborators\n        }\n      }\n    }\n  }\n\n${\n  Object.values(columns).map(column => column.getColumnFragment().fragment)\n}\n\nfragment createdAt on Repository {\n  createdAt\n}\n\nfragment repositoryTopics on Repository {\n  repositoryTopics(first:100) {\n    nodes {\n      topic {\n        id\n        name\n      }\n    }\n  }\n}\n\nfragment stargazers on Repository {\n  stargazers {\n    totalCount\n  }\n}\n\nfragment primaryLanguage on Repository {\n  primaryLanguage {\n    name\n  }\n}\n\nfragment private on Repository {\n  isPrivate\n}\n\nfragment archived on Repository {\n  isArchived\n}\n\nfragment issues on Repository {\n  issues (states: OPEN) {\n    totalCount\n  }\n}\n\nfragment pullRequestCount on Repository {\n  pullRequests (states: OPEN) {\n    totalCount\n  }\n}\n\nfragment owner on Repository {\n  owner {\n    login\n  }\n}\n\nfragment nameWithOwner on Repository {\n  nameWithOwner\n}\n\nfragment url on Repository {\n  url\n}\n\nfragment fork on Repository {\n  isFork\n}\n\nfragment licenses on Repository {\n  licenseInfo {\n    name\n    nickname\n  }\n}\n\nfragment vulnerabilityAlerts on Repository {\n  vulnerabilityAlerts (first:50){\n    nodes {\n      packageName\n      vulnerableManifestFilename\n      vulnerableRequirements\n      securityAdvisory {\n        description\n        summary\n      }\n    }\n  }\n}\n\nfragment collaborators on Repository {\n  collaborators (first: 50){\n    nodes {\n      name\n      login\n    }\n  }\n}\n`\n\nexport default query;\n","import {\n  put,\n  takeEvery,\n  all,\n  select,\n  call\n} from 'redux-saga/effects';\nimport qs from 'querystring';\nimport Octokit from '@octokit/rest';\n// const graphql = require('@octokit/graphql');\nimport graphql from '@octokit/graphql';\nimport query from './gitHubGraphQlQuery';\n\nlet octokit = new Octokit();\n\nconst authURL = 'https://github-auth-backend-hugh.glitch.me/start_auth';\n\nexport function* init() {\n  // get from local storage or get from url\n  const query = qs.parse(window.location.search.substring(1));\n\n  if (query.access_token) {\n    yield put({\n      type: 'SET_ACCESS_TOKEN',\n      access_token: query.access_token\n    });\n    yield startLoadUser();\n  }\n}\n\nexport function* watchInit() {\n  yield takeEvery('INIT', init);\n}\n\nexport function* startLogIn() {\n  const query = {\n    'redirect_uri': window.location.origin + window.location.pathname,\n    'scope': ['repo']\n  };\n\n  const authProxyUrl = `${authURL}?${qs.stringify(query)}`;\n\n  yield window.location = authProxyUrl;\n}\n\nexport function* watchStartLogIn() {\n  yield takeEvery('START_LOG_IN', startLogIn);\n}\n\nexport function* startLoadRepos(endCursor) {\n  const accessToken = yield select(state => state.accessToken);\n  const user = yield select(state => state.user.login);\n\n  let data;\n\n  try {\n    data = yield call(() => graphql({\n      query: query(endCursor),\n      headers: {\n        authorization: `token ${accessToken}`,\n        accept: 'application/vnd.github.vixen-preview+json'\n      }\n    }));\n  } catch (error) {\n    data = error.data\n  }\n\n  // TODO handle when error is null\n\n  const repos = data.viewer.repositories.nodes.map(repo => ({\n    id: repo.id,\n    name: repo.name,\n    nameWithOnwer: repo.nameWithOwner,\n    description: repo.description,\n    createdAt: repo.createdAt,\n    topics: repo.repositoryTopics.nodes.map(node => node.topic.name),\n    stars: repo.stargazers.totalCount,\n    language: (l => l && l.name)(repo.primaryLanguage),\n    isPrivate: repo.isPrivate,\n    isArchived: repo.isArchived,\n    url: repo.url,\n    owner: repo.owner.login,\n    isFork: repo.isFork,\n    licenseNickname: repo.licenseInfo && (repo.licenseInfo.nickname || repo.licenseInfo.name),\n    vulnerabilityAlerts: repo.vulnerabilityAlerts.nodes,\n    collaborators: repo.collaborators && repo.collaborators.nodes.filter(a => a.login !== user),\n    issueCount: repo.issues.totalCount,\n    pullRequestCount: repo.pullRequests.totalCount\n  }));\n\n  yield put({type: 'SET_REPOSITORIES', repositories: repos});\n\n  const repoCount = yield select(state => state.repositories.length);\n  if (repoCount < data.viewer.repositories.totalCount) {\n    yield startLoadRepos(data.viewer.repositories.pageInfo.endCursor);\n  }\n}\n\nexport function* watchLoadRepositories() {\n  yield takeEvery('START_LOAD_REPOSITORIES', startLoadRepos);\n}\n\nfunction* refresh() {\n  yield put({type: 'DELETE_REPOSITORIES'});\n  yield startLoadRepos();\n}\n\nexport function* watchRefresh() {\n  yield takeEvery('REFRESH_REPOSITORIES', refresh);\n}\n\nexport function* startLoadUser() {\n  const accessToken = yield select(state => state.accessToken);\n\n  octokit = new Octokit({\n    auth: `token ${accessToken}`\n  });\n\n  const repo = {\n    owner: 'hughrawlinson',\n    repo: 'github-repo-organizer'\n  };\n\n  const {data} = yield call(() => octokit.users.getAuthenticated());\n  if (data.login !== 'hughrawlinson') {\n    try {\n      yield call(() => octokit.activity.checkStarringRepo(repo));\n    } catch (e) {\n      yield call(() => octokit.activity.starRepo(repo));\n    }\n  }\n  yield put({type: 'SET_USER', user: data});\n  yield startLoadRepos();\n}\n\nexport function* watchLoadUser() {\n  yield takeEvery('START_LOAD_USER', startLoadUser);\n}\nexport default function* rootSaga() {\n  yield all([\n    watchInit(),\n    watchStartLogIn(),\n    watchLoadRepositories(),\n    watchLoadUser(),\n    watchRefresh()\n  ]);\n}\n","const initialState = {\n  loggedIn: false,\n  gridState: {\n    filteringState: [],\n    sortingState: [],\n    searchState: \"\",\n    columnVisibilityState: [\n      'isPrivate',\n      'isArchived',\n      'isFork',\n      'owner',\n      'licenseNickname',\n      'vulnerabilityAlerts',\n      'collaborators',\n      'issueCount'\n    ]\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch(action.type) {\n    case 'SET_ACCESS_TOKEN':\n      return {\n        ...state,\n        accessToken: action.access_token,\n        loggedIn: true\n      };\n    case 'SET_REPOSITORIES':\n      return {\n        ...state,\n        repositories: [\n          ...(state.repositories || []),\n          ...action.repositories\n        ]\n      };\n    case 'DELETE_REPOSITORIES':\n      return {\n        ...state,\n        repositories: []\n      };\n    case 'SET_USER':\n      return {\n        ...state,\n        user: action.user\n      };\n    case 'SET_GRID_STATE':\n      return {\n        ...state,\n        gridState: action.gridState\n      }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport sagas from './sagas'\nimport { Provider } from 'react-redux';\nimport reducer from './reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(sagaMiddleware)))\nsagaMiddleware.run(sagas);\nstore.dispatch({type: \"INIT\"})\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n"],"sourceRoot":""}