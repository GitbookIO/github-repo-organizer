{"version":3,"sources":["components/LogIn.js","components/RepositoryTable.js","components/Repos.js","components/Topics.js","components/Licenses.js","components/Languages.js","App.js","sagas/index.js","reducers/index.js","index.js"],"names":["LogIn","react_default","a","createElement","Fragment","Typography","variant","paragraph","Component","DateTypeProvider","props","dx_react_grid_es","Object","assign","formatterComponent","_ref","value","toLocaleDateString","LinkTypeProvider","_ref2","_ref2$value","href","title","ChipListProvider","_ref3","map","v","Chip","style","margin","key","label","BooleanTypeProvider","_ref4","ArrayLengthProvider","_ref5","length","tableColumnExtensions","columnName","wordWrapEnabled","connect","state","gridState","dispatch","setGridState","type","withStyles","theme","_ref6","repositories","Paper","dx_react_grid_material_ui_es","columns","name","getCellValue","row","url","Date","createdAt","collaborators","collaborator","login","rows","RepositoryTable_DateTypeProvider","for","RepositoryTable_LinkTypeProvider","RepositoryTable_ChipListProvider","RepositoryTable_BooleanTypeProvider","RepositoryTable_ArrayLengthProvider","defaultFilters","filters","filteringState","onFiltersChange","objectSpread","defaultSorting","sorting","sortingState","onSortingChange","defaultCurrentPage","pageSize","searchState","onValueChange","columnExtensions","showSortingControls","showFilterSelector","hiddenColumnNames","columnVisibilityState","onHiddenColumnNamesChange","Repos","components_RepositoryTable","queryParams","Topics","tags","flatMap","repo","topics","reduce","acc","el","defineProperty","data","entries","slicedToArray","topicName","topicCount","direction","Licenses","licenseNickname","license","licenseCount","Languages","languages","language","languageCount","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","drawerOpen","ifLoggedOut","bind","assertThisInitialized","ifLoggedIn","ifRepositories","setState","child","loggedIn","_this2","classes","CssBaseline","react_router_dom","className","AppBar","Toolbar","IconButton","menuButton","color","aria-label","onClick","toggleDrawer","Menu_default","grow","Button","startLogIn","refresh","Drawer","open","onClose","onKeyDown","List","ListItem","button","to","process","ListItemText","primary","content","appBarSpacer","components_LogIn","react_router","exact","path","component","qs","parse","location","search","loadRepositories","loadUser","root","flexGrow","marginLeft","marginRight","mixins","toolbar","padding","spacing","height","overflow","init","watchInit","watchStartLogIn","startLoadRepos","watchLoadRepositories","watchRefresh","startLoadUser","watchLoadUser","rootSaga","octokit","Octokit","authURL","query","regenerator_default","wrap","_context","prev","next","window","substring","access_token","put","stop","_marked","_context2","takeEvery","_marked2","authProxyUrl","_context3","redirect_uri","origin","pathname","scope","concat","stringify","_marked3","_context4","_marked4","endCursor","accessToken","user","repos","_context5","select","sent","graphql","headers","authorization","accept","t0","viewer","nodes","id","nameWithOnwer","nameWithOwner","description","repositoryTopics","node","topic","stars","stargazers","totalCount","l","primaryLanguage","isPrivate","isArchived","owner","isFork","licenseInfo","nickname","vulnerabilityAlerts","filter","issueCount","issues","pageInfo","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","_context9","auth","users","getAuthenticated","activity","checkStarringRepo","starRepo","_marked9","_context10","_marked10","_context11","all","_marked11","initialState","reducer","arguments","undefined","action","toConsumableArray","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","sagas","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e4dc0720.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nclass LogIn extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Typography variant=\"display1\">\n          Log in!\n        </Typography>\n        <Typography paragraph={true}>\n          Please log in with GitHub to start organizing your repositories.\n        </Typography>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default LogIn;\n","import React from 'react';\nimport { connect } from 'react-redux';\n// import PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\n// import { connect } from 'react-redux';\nimport { Grid, Table, TableHeaderRow, TableFilterRow, Toolbar, SearchPanel, ColumnChooser, TableColumnVisibility, PagingPanel } from '@devexpress/dx-react-grid-material-ui';\nimport { FilteringState, IntegratedFiltering, SearchState, SortingState, IntegratedSorting, PagingState, IntegratedPaging } from '@devexpress/dx-react-grid';\nimport { DataTypeProvider } from '@devexpress/dx-react-grid';\n\nconst styles = theme => ({});\n\nconst DateTypeProvider = props => (\n  <DataTypeProvider\n    formatterComponent={({value}) => value.toLocaleDateString()}\n    {...props}\n  />\n);\n\nconst LinkTypeProvider = props => (\n  <DataTypeProvider\n    formatterComponent={({value:{href, title}}) => (<a href={href}>{title}</a>)}\n    {...props}\n  />\n);\n\nconst ChipListProvider = props => (\n  <DataTypeProvider\n    formatterComponent={({value}) => (value ? <>\n      {value.map((v) => (<Chip style={{margin: \"3px\"}} key={v} label={v}/>))}\n  </> : null)}\n  {...props}\n  />\n);\n\nconst BooleanTypeProvider = props => (\n  <DataTypeProvider\n    formatterComponent={({value}) => (<Chip label={value ? \"True\" : \"False\"} />)}\n    {...props}\n  />\n);\n\nconst ArrayLengthProvider = props => (\n  <DataTypeProvider\n    formatterComponent={({value}) => value.length}\n    {...props}\n  />\n);\n\nconst tableColumnExtensions = [\n  { columnName: 'topics', wordWrapEnabled: true },\n  { columnName: 'description', wordWrapEnabled: true },\n];\n\nfunction RepositoryTable({repositories, gridState, setGridState}) {\n  function setFilteringState(filteringState) {\n    setGridState({...gridState, filteringState});\n  }\n\n  function setSortingState(sortingState) {\n    setGridState({...gridState, sortingState});\n  }\n\n  function setSearchState(searchState) {\n    setGridState({...gridState, searchState});\n  }\n\n  function setColumnVisibilityState(columnVisibilityState) {\n    setGridState({...gridState, columnVisibilityState});\n  }\n\n  return (\n    <Paper>\n      <Grid\n        columns={[{\n          name: 'name',\n          title: 'Name',\n          getCellValue: row => ({\n            href: row.url,\n            title: row.name\n          })\n        },{\n          name: 'description',\n          title: 'Description'\n        },{\n          name: 'createdAt',\n          title: 'Created At',\n          getCellValue: row => new Date(row.createdAt)\n        },{\n          name: 'topics',\n          title: 'Topics',\n        },{\n          name: 'stars',\n          title: 'Stars'\n        },{\n          name: 'language',\n          title: 'Language'\n        },{\n          name: 'owner',\n          title: 'Owner'\n        },{\n          name: 'isPrivate',\n          title: 'Private',\n        },{\n          name: 'isArchived',\n          title: 'Archived',\n        },{\n          name: 'isFork',\n          title: 'Fork',\n        },{\n          name: 'licenseNickname',\n          title: 'License'\n        },{\n          name: 'vulnerabilityAlerts',\n          title: 'Vulnerability Alerts'\n        },{\n          name: 'collaborators',\n          title: 'Collaborators',\n          getCellValue: row => row.collaborators && row.collaborators.map(collaborator => collaborator.login)\n        },{\n          name: 'issueCount',\n          title: 'Open Issue Count'\n          }]}\n    rows={repositories}>\n    <DateTypeProvider\n    for={['createdAt']}\n  />\n    <LinkTypeProvider\n      for={['name']}\n    />\n    <ChipListProvider\n      for={['topics', 'collaborators']}\n    />\n    <BooleanTypeProvider\n      for={['isPrivate', 'isArchived', 'isFork']}\n    />\n    <ArrayLengthProvider\n      for={['vulnerabilityAlerts']}\n    />\n    <FilteringState\n      defaultFilters={[]}\n      filters={gridState.filteringState}\n      onFiltersChange={setFilteringState}\n    />\n    <SortingState\n      defaultSorting={[]}\n      sorting={gridState.sortingState}\n      onSortingChange={setSortingState}\n    />\n    <PagingState\n      defaultCurrentPage={0}\n      pageSize={40}\n    />\n    <SearchState\n      value={gridState.searchState}\n      onValueChange={setSearchState}\n    />\n    <IntegratedFiltering/>\n    <IntegratedSorting/>\n    <IntegratedPaging/>\n    <Table columnExtensions={tableColumnExtensions}/>\n    <TableHeaderRow showSortingControls />\n    <TableFilterRow showFilterSelector />\n    <TableColumnVisibility\n      hiddenColumnNames={gridState.columnVisibilityState}\n      onHiddenColumnNamesChange={setColumnVisibilityState}\n    />\n    <Toolbar/>\n    <SearchPanel />\n    <ColumnChooser />\n    <PagingPanel />\n  </Grid>\n</Paper>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  gridState: state.gridState\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setGridState: gridState => dispatch({\n    type: \"SET_GRID_STATE\",\n    gridState\n  })\n})\n\nexport default\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )(withStyles(styles)(RepositoryTable));\n","import React from 'react';\nimport RepositoryTable from './RepositoryTable';\n\nexport default function Repos(props) {\n  return (<>\n    <RepositoryTable\n      queryParams={props.queryParams}\n      repositories={props.repositories}/>\n  </>);\n}\n","import React from 'react';\nimport { Grid, Table, TableHeaderRow } from '@devexpress/dx-react-grid-material-ui';\nimport {\n    SortingState,\n    IntegratedSorting,\n} from '@devexpress/dx-react-grid';\nimport Paper from '@material-ui/core/Paper';\n\nconst prepareTags = repositories => repositories\n      .flatMap(repo => repo.topics)\n      .reduce((acc, el) => ({\n          ...acc,\n          [el]: acc[el] ? acc[el] + 1 : 1\n      }), {});\n\nexport default (props) => {\n  const tags = prepareTags(props.repositories);\n  const data = Object.entries(tags).map(([key, value]) => ({\n    topicName: key,\n    topicCount: value\n  }));\n  return (<Paper>\n    <Grid\n      columns={[{\n        name: 'topicName',\n        title: 'Topic Name'\n      },{\n        name: 'topicCount',\n        title: 'Topic Count'\n      }]}\n      rows={data}>\n      <SortingState\n        defaultSorting={[{ columnName: 'topicCount', direction: 'desc' }]}\n      />\n      <IntegratedSorting />\n      <Table />\n      <TableHeaderRow showSortingControls />\n    </Grid>\n  </Paper>);\n}\n","import React from 'react';\nimport { Grid, Table, TableHeaderRow } from '@devexpress/dx-react-grid-material-ui';\nimport {\n    SortingState,\n    IntegratedSorting,\n} from '@devexpress/dx-react-grid';\nimport Paper from '@material-ui/core/Paper';\n\nconst prepareTags = repositories => repositories\n      .map(repo => repo.licenseNickname)\n      .reduce((acc, el) => ({\n          ...acc,\n          [el]: acc[el] ? acc[el] + 1 : 1\n      }), {});\n\nexport default (props) => {\n  const tags = prepareTags(props.repositories);\n  const data = Object.entries(tags).map(([key, value]) => ({\n    license: key,\n    licenseCount: value\n  }));\n  return (<Paper>\n    <Grid\n      columns={[{\n        name: 'license',\n        title: 'License'\n      },{\n        name: 'licenseCount',\n        title: 'License Count'\n      }]}\n      rows={data}>\n      <SortingState\n        defaultSorting={[{ columnName: 'licenseCount', direction: 'desc' }]}\n      />\n      <IntegratedSorting />\n      <Table />\n      <TableHeaderRow showSortingControls />\n    </Grid>\n  </Paper>);\n}\n","import React from 'react';\nimport { Grid, Table, TableHeaderRow } from '@devexpress/dx-react-grid-material-ui';\nimport {\n    SortingState,\n    IntegratedSorting,\n} from '@devexpress/dx-react-grid';\nimport Paper from '@material-ui/core/Paper';\n\nconst prepareLanguages = repositories => repositories\n      .map(repo => repo.language)\n      .reduce((acc, el) => ({\n          ...acc,\n          [el]: acc[el] ? acc[el] + 1 : 1\n      }), {});\n\nexport default (props) => {\n  const languages = prepareLanguages(props.repositories);\n  const data = Object.entries(languages).map(([key, value]) => ({\n    language: key,\n    languageCount: value\n  }));\n  return (<Paper>\n    <Grid\n      columns={[{\n        name: 'language',\n        title: 'Language'\n      },{\n        name: 'languageCount',\n        title: 'Count'\n      }]}\n      rows={data}>\n      <SortingState\n        defaultSorting={[{ columnName: 'languageCount', direction: 'desc' }]}\n      />\n      <IntegratedSorting />\n      <Table />\n      <TableHeaderRow showSortingControls />\n    </Grid>\n  </Paper>);\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { connect } from 'react-redux';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport qs from 'query-string';\n\nimport LogIn from './components/LogIn.js';\nimport Repos from './components/Repos.js';\nimport Topics from './components/Topics.js'\nimport Licenses from './components/Licenses.js'\nimport Languages from './components/Languages.js'\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    height: '100vh',\n    overflow: 'auto',\n  },\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      drawerOpen: false\n    };\n\n    this.ifLoggedOut = this.ifLoggedOut.bind(this);\n    this.ifLoggedIn = this.ifLoggedIn.bind(this);\n    this.ifRepositories = this.ifRepositories.bind(this);\n  }\n\n  toggleDrawer(value) {\n    this.setState(state => ({\n      ...state,\n      drawerOpen: value ? value : !state.drawerOpen\n    }));\n  }\n\n  ifRepositories(child) {\n    if (this.props.repositories) {\n      return child;\n    }\n    return null\n  }\n\n  ifLoggedOut(child) {\n    if(!this.props.loggedIn) {\n      return child;\n    }\n    return null;\n  }\n\n  ifLoggedIn(child) {\n    if(this.props.loggedIn) {\n      return child;\n    }\n    return null;\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <React.Fragment>\n        <CssBaseline/>\n        <Router>\n        <div className=\"App\">\n          <AppBar>\n            <Toolbar>\n              {this.ifLoggedIn(\n                <IconButton\n                  className={classes.menuButton}\n                  color=\"inherit\"\n                  aria-label=\"Menu\"\n                  onClick={() => this.toggleDrawer()}\n                      >\n                  <MenuIcon />\n                </IconButton>\n              )}\n              <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                GitHub Repo Organizer\n              </Typography>\n              {this.ifLoggedOut(\n                 <Button onClick={this.props.startLogIn} color=\"inherit\">Login</Button>\n              )}\n              {this.ifLoggedIn(\n                <Button onClick={this.props.refresh} color=\"inherit\">Refresh</Button>\n              )}\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            open={this.state.drawerOpen}\n            onClose={() => this.toggleDrawer(false)}\n          >\n            <div\n              onClick={() => this.toggleDrawer(false)}\n              onKeyDown={() => this.toggleDrawer(false)}>\n              <List>\n                <ListItem button>\n                  <Link to={process.env.PUBLIC_URL + \"/\"}>\n                    <ListItemText primary=\"Repositories\" />\n                  </Link>\n                </ListItem>\n                <ListItem button>\n                  <Link to={process.env.PUBLIC_URL + \"/topics\"}>\n                    <ListItemText primary=\"Topics\" />\n                  </Link>\n                </ListItem>\n                <ListItem button>\n                  <Link to={process.env.PUBLIC_URL + \"/licenses\"}>\n                    <ListItemText primary=\"Licenses\" />\n                  </Link>\n                </ListItem>\n                <ListItem button>\n                  <Link to={process.env.PUBLIC_URL + \"/languages\"}>\n                    <ListItemText primary=\"Languages\" />\n                  </Link>\n                </ListItem>\n              </List>\n            </div>\n          </Drawer>\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            {this.ifLoggedOut(<LogIn/>)}\n            {this.ifLoggedIn(\n            <Switch>\n              <Route\n                  exact\n                  path={process.env.PUBLIC_URL + \"/\"}\n              component={(props) => {\n                  const queryParams = qs.parse(props.location.search);\n                return (<Repos\n                  queryParams={queryParams}\n                  repositories={this.props.repositories || []}\n                />)\n              }}\n              />\n              <Route exact path={process.env.PUBLIC_URL + \"/topics\"} component={() => (\n                  <Topics repositories={this.props.repositories}/>\n              )}/>\n              <Route exact path={process.env.PUBLIC_URL + \"/licenses\"} component={() => (\n                  <Licenses repositories={this.props.repositories}/>\n              )}/>\n              <Route exact path={process.env.PUBLIC_URL + \"/languages\"} component={() => (\n                  <Languages repositories={this.props.repositories}/>\n              )}/>\n            </Switch>\n            )}\n            </main>\n          </div>\n        </Router>\n      </React.Fragment>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  loggedIn: state.loggedIn,\n  repositories: state.repositories\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  startLogIn: () => dispatch({type: 'START_LOG_IN'}),\n  refresh: () => dispatch({type: 'REFRESH_REPOSITORIES'}),\n  loadRepositories: () => dispatch({type: 'START_LOAD_REPOSITORIES'}),\n  loadUser: () => dispatch({type: 'START_LOAD_USER'})\n});\n\nexport default\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(withStyles(styles)(App));\n","import {\n  put,\n  takeEvery,\n  all,\n  select,\n  call\n} from 'redux-saga/effects';\nimport qs from 'querystring';\nimport Octokit from '@octokit/rest';\n// const graphql = require('@octokit/graphql');\nimport graphql from '@octokit/graphql';\n\nlet octokit = new Octokit();\n\nconst authURL = 'https://github-auth-backend-hugh.glitch.me/start_auth';\n\nexport function* init() {\n  // get from local storage or get from url\n  const query = qs.parse(window.location.search.substring(1));\n\n  if (query.access_token) {\n    yield put({\n      type: 'SET_ACCESS_TOKEN',\n      access_token: query.access_token\n    });\n    yield startLoadUser();\n  }\n}\n\nexport function* watchInit() {\n  yield takeEvery('INIT', init);\n}\n\nexport function* startLogIn() {\n  const query = {\n    'redirect_uri': window.location.origin + window.location.pathname,\n    'scope': ['repo']\n  };\n\n  const authProxyUrl = `${authURL}?${qs.stringify(query)}`;\n\n  yield window.location = authProxyUrl;\n}\n\nexport function* watchStartLogIn() {\n  yield takeEvery('START_LOG_IN', startLogIn);\n}\n\nexport function* startLoadRepos(endCursor) {\n  const accessToken = yield select(state => state.accessToken);\n  const user = yield select(state => state.user.login);\n\n  const query = `query {\n    viewer {\n      repositories (first:100${endCursor ? \", after:\\\"\" + endCursor + '\"': ''}) {\n        pageInfo {\n          endCursor\n        }\n        totalCount,\n        nodes {\n          id,\n          name,\n          description,\n          createdAt,\n          repositoryTopics(first:100) {\n            nodes {\n              topic {\n                id\n                name\n              }\n            }\n          }\n          stargazers {totalCount},\n          primaryLanguage {\n            name\n          }\n          isPrivate\n          isArchived\n          issues (states: OPEN) {\n            totalCount\n          }\n          owner {\n            login\n          }\n          nameWithOwner\n          url\n          isFork\n          licenseInfo {\n            name\n            nickname\n          }\n          vulnerabilityAlerts (first:50){\n            nodes {\n              packageName\n              vulnerableManifestFilename\n              vulnerableRequirements\n              securityAdvisory {\n                description\n                summary\n              }\n            }\n          }\n          collaborators (first: 50){\n            nodes {\n              name\n              login\n            }\n          }\n        }\n      }\n    }\n  }`\n\n  let data;\n\n  try {\n    data = yield call(() => graphql({\n      query,\n      headers: {\n        authorization: `token ${accessToken}`,\n        accept: 'application/vnd.github.vixen-preview+json'\n      }\n    }));\n  } catch (error) {\n    data = error.data\n  }\n\n  // TODO handle when error is null\n\n  const repos = data.viewer.repositories.nodes.map(repo => ({\n    id: repo.id,\n    name: repo.name,\n    nameWithOnwer: repo.nameWithOwner,\n    description: repo.description,\n    createdAt: repo.createdAt,\n    topics: repo.repositoryTopics.nodes.map(node => node.topic.name),\n    stars: repo.stargazers.totalCount,\n    language: (l => l && l.name)(repo.primaryLanguage),\n    isPrivate: repo.isPrivate,\n    isArchived: repo.isArchived,\n    url: repo.url,\n    owner: repo.owner.login,\n    isFork: repo.isFork,\n    licenseNickname: repo.licenseInfo && (repo.licenseInfo.nickname || repo.licenseInfo.name),\n    vulnerabilityAlerts: repo.vulnerabilityAlerts.nodes,\n    collaborators: repo.collaborators && repo.collaborators.nodes.filter(a => a.login !== user),\n    issueCount: repo.issues.totalCount\n  }));\n\n  yield put({type: 'SET_REPOSITORIES', repositories: repos});\n\n  const repoCount = yield select(state => state.repositories.length);\n  if (repoCount < data.viewer.repositories.totalCount) {\n    yield startLoadRepos(data.viewer.repositories.pageInfo.endCursor);\n  }\n}\n\nexport function* watchLoadRepositories() {\n  yield takeEvery('START_LOAD_REPOSITORIES', startLoadRepos);\n}\n\nfunction* refresh() {\n  yield put({type: 'DELETE_REPOSITORIES'});\n  yield startLoadRepos();\n}\n\nexport function* watchRefresh() {\n  yield takeEvery('REFRESH_REPOSITORIES', refresh);\n}\n\nexport function* startLoadUser() {\n  const accessToken = yield select(state => state.accessToken);\n\n  octokit = new Octokit({\n    auth: `token ${accessToken}`\n  });\n\n  const repo = {\n    owner: 'hughrawlinson',\n    repo: 'github-repo-organizer'\n  };\n\n  const {data} = yield call(() => octokit.users.getAuthenticated());\n  if (data.login !== 'hughrawlinson') {\n    try {\n      yield call(() => octokit.activity.checkStarringRepo(repo));\n    } catch (e) {\n      yield call(() => octokit.activity.starRepo(repo));\n    }\n  }\n  yield put({type: 'SET_USER', user: data});\n  yield startLoadRepos();\n}\n\nexport function* watchLoadUser() {\n  yield takeEvery('START_LOAD_USER', startLoadUser);\n}\nexport default function* rootSaga() {\n  yield all([\n    watchInit(),\n    watchStartLogIn(),\n    watchLoadRepositories(),\n    watchLoadUser(),\n    watchRefresh()\n  ]);\n}\n","const initialState = {\n  loggedIn: false,\n  gridState: {\n    filteringState: [],\n    sortingState: [],\n    searchState: \"\",\n    columnVisibilityState: [\n      'isPrivate',\n      'isArchived',\n      'isFork',\n      'owner',\n      'licenseNickname',\n      'vulnerabilityAlerts',\n      'collaborators',\n      'issueCount'\n    ]\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch(action.type) {\n    case 'SET_ACCESS_TOKEN':\n      return {\n        ...state,\n        accessToken: action.access_token,\n        loggedIn: true\n      };\n    case 'SET_REPOSITORIES':\n      return {\n        ...state,\n        repositories: [\n          ...(state.repositories || []),\n          ...action.repositories\n        ]\n      };\n    case 'DELETE_REPOSITORIES':\n      return {\n        ...state,\n        repositories: []\n      };\n    case 'SET_USER':\n      return {\n        ...state,\n        user: action.user\n      };\n    case 'SET_GRID_STATE':\n      return {\n        ...state,\n        gridState: action.gridState\n      }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport sagas from './sagas'\nimport { Provider } from 'react-redux';\nimport reducer from './reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(sagaMiddleware)))\nsagaMiddleware.run(sagas);\nstore.dispatch({type: \"INIT\"})\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n"],"sourceRoot":""}