{"version":3,"sources":["components/LogIn.js","components/RepositoryTable.js","components/Repos.js","components/Topics.js","components/Licenses.js","components/Languages.js","App.js","sagas/index.js","reducers/index.js","index.js"],"names":["LogIn","react_default","a","createElement","Fragment","Typography","variant","paragraph","Component","DateTypeProvider","props","dx_react_grid_es","Object","assign","formatterComponent","_ref","value","toLocaleDateString","LinkTypeProvider","_ref2","_ref2$value","href","title","ChipListProvider","_ref3","map","v","Chip","style","margin","key","label","BooleanTypeProvider","_ref4","ArrayLengthProvider","_ref5","length","tableColumnExtensions","columnName","wordWrapEnabled","defaultHiddenColumnNames","App","Paper","dx_react_grid_material_ui_es","columns","name","getCellValue","row","url","Date","createdAt","collaborators","collaborator","login","rows","this","repositories","RepositoryTable_DateTypeProvider","for","RepositoryTable_LinkTypeProvider","RepositoryTable_ChipListProvider","RepositoryTable_BooleanTypeProvider","RepositoryTable_ArrayLengthProvider","defaultFilters","defaultSorting","defaultCurrentPage","pageSize","columnExtensions","showSortingControls","showFilterSelector","withStyles","theme","Repos","RepositoryTable","queryParams","Topics","tags","flatMap","repo","topics","reduce","acc","el","objectSpread","defineProperty","data","entries","slicedToArray","topicName","topicCount","direction","Licenses","licenseNickname","license","licenseCount","Languages","languages","language","languageCount","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","drawerOpen","ifLoggedOut","bind","assertThisInitialized","ifLoggedIn","ifRepositories","setState","child","loggedIn","_this2","classes","CssBaseline","react_router_dom","className","AppBar","Toolbar","IconButton","menuButton","color","aria-label","onClick","toggleDrawer","Menu_default","grow","Button","startLogIn","refresh","Drawer","open","onClose","onKeyDown","List","ListItem","button","to","process","ListItemText","primary","content","appBarSpacer","components_LogIn","react_router","exact","path","component","qs","parse","location","search","connect","dispatch","type","loadRepositories","loadUser","root","flexGrow","marginLeft","marginRight","mixins","toolbar","padding","spacing","height","overflow","init","watchInit","watchStartLogIn","startLoadRepos","watchLoadRepositories","watchRefresh","startLoadUser","watchLoadUser","rootSaga","octokit","Octokit","authURL","query","regenerator_default","wrap","_context","prev","next","window","substring","access_token","put","stop","_marked","_context2","takeEvery","_marked2","authProxyUrl","_context3","redirect_uri","origin","pathname","scope","concat","stringify","_marked3","_context4","_marked4","endCursor","accessToken","user","repos","_context5","select","sent","graphql","headers","authorization","accept","t0","viewer","nodes","id","nameWithOnwer","nameWithOwner","description","repositoryTopics","node","topic","stars","stargazers","totalCount","l","primaryLanguage","isPrivate","isArchived","owner","isFork","licenseInfo","nickname","vulnerabilityAlerts","filter","issueCount","issues","pageInfo","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","_context9","auth","users","getAuthenticated","activity","checkStarringRepo","starRepo","_marked9","_context10","_marked10","_context11","all","_marked11","initialState","reducer","arguments","undefined","action","toConsumableArray","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","sagas","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.35c5fa81.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nclass LogIn extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Typography variant=\"display1\">\n          Log in!\n        </Typography>\n        <Typography paragraph={true}>\n          Please log in with GitHub to start organizing your repositories.\n        </Typography>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default LogIn;\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\n// import { connect } from 'react-redux';\nimport { Grid, Table, TableHeaderRow, TableFilterRow, Toolbar, SearchPanel, ColumnChooser, TableColumnVisibility, PagingPanel } from '@devexpress/dx-react-grid-material-ui';\nimport { FilteringState, IntegratedFiltering, SearchState, SortingState, IntegratedSorting, PagingState, IntegratedPaging } from '@devexpress/dx-react-grid';\nimport { DataTypeProvider } from '@devexpress/dx-react-grid';\n\nconst styles = theme => ({});\n\nconst DateTypeProvider = props => (\n  <DataTypeProvider\n    formatterComponent={({value}) => value.toLocaleDateString()}\n    {...props}\n  />\n);\n\nconst LinkTypeProvider = props => (\n  <DataTypeProvider\n    formatterComponent={({value:{href, title}}) => (<a href={href}>{title}</a>)}\n    {...props}\n  />\n);\n\nconst ChipListProvider = props => (\n  <DataTypeProvider\n    formatterComponent={({value}) => (value ? <>\n      {value.map((v) => (<Chip style={{margin: \"3px\"}} key={v} label={v}/>))}\n    </> : null)}\n    {...props}\n  />\n);\n\nconst BooleanTypeProvider = props => (\n  <DataTypeProvider\n    formatterComponent={({value}) => (<Chip label={value ? \"True\" : \"False\"} />)}\n    {...props}\n  />\n);\n\nconst ArrayLengthProvider = props => (\n  <DataTypeProvider\n    formatterComponent={({value}) => value.length}\n    {...props}\n  />\n);\n\nconst tableColumnExtensions = [\n  { columnName: 'topics', wordWrapEnabled: true },\n  { columnName: 'description', wordWrapEnabled: true },\n];\n\nconst defaultHiddenColumnNames = [\n  'isPrivate',\n  'isArchived',\n  'isFork',\n  'owner',\n  'licenseNickname',\n  'vulnerabilityAlerts',\n  'collaborators',\n  'issueCount'\n];\n\nclass App extends Component {\n  render() {\n    // const { classes } = this.props;\n    return (\n      <Paper>\n        <Grid\n          columns={[{\n              name: 'name',\n              title: 'Name',\n              getCellValue: row => ({\n                href: row.url,\n                title: row.name\n              })\n          },{\n              name: 'description',\n              title: 'Description'\n          },{\n              name: 'createdAt',\n              title: 'Created At',\n              getCellValue: row => new Date(row.createdAt)\n          },{\n              name: 'topics',\n              title: 'Topics',\n          },{\n              name: 'stars',\n              title: 'Stars'\n          },{\n              name: 'language',\n              title: 'Language'\n          },{\n              name: 'owner',\n              title: 'Owner'\n          },{\n              name: 'isPrivate',\n              title: 'Private',\n          },{\n              name: 'isArchived',\n              title: 'Archived',\n          },{\n              name: 'isFork',\n              title: 'Fork',\n          },{\n              name: 'licenseNickname',\n              title: 'License'\n          },{\n              name: 'vulnerabilityAlerts',\n              title: 'Vulnerability Alerts'\n          },{\n              name: 'collaborators',\n              title: 'Collaborators',\n              getCellValue: row => row.collaborators && row.collaborators.map(collaborator => collaborator.login)\n          },{\n              name: 'issueCount',\n              title: 'Open Issue Count'\n          }]}\n          rows={this.props.repositories}>\n          <DateTypeProvider\n            for={['createdAt']}\n          />\n          <LinkTypeProvider\n            for={['name']}\n          />\n          <ChipListProvider\n            for={['topics', 'collaborators']}\n          />\n          <BooleanTypeProvider\n            for={['isPrivate', 'isArchived', 'isFork']}\n          />\n          <ArrayLengthProvider\n            for={['vulnerabilityAlerts']}\n          />\n          <FilteringState\n            defaultFilters={[]}\n          />\n          <SortingState\n            defaultSorting={[]}\n          />\n          <PagingState\n            defaultCurrentPage={0}\n            pageSize={40}\n          />\n          <SearchState />\n          <IntegratedFiltering/>\n          <IntegratedSorting/>\n          <IntegratedPaging/>\n          <Table columnExtensions={tableColumnExtensions}/>\n          <TableHeaderRow showSortingControls />\n          <TableFilterRow showFilterSelector />\n          <TableColumnVisibility defaultHiddenColumnNames={defaultHiddenColumnNames} />\n          <Toolbar/>\n          <SearchPanel />\n          <ColumnChooser />\n          <PagingPanel />\n        </Grid>\n      </Paper>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","import React from 'react';\nimport RepositoryTable from './RepositoryTable';\n\nexport default (props) => {\n  return (<>\n    <RepositoryTable\n      queryParams={props.queryParams}\n      repositories={props.repositories}/>\n  </>);\n}\n","import React from 'react';\nimport { Grid, Table, TableHeaderRow } from '@devexpress/dx-react-grid-material-ui';\nimport {\n    SortingState,\n    IntegratedSorting,\n} from '@devexpress/dx-react-grid';\nimport Paper from '@material-ui/core/Paper';\n\nconst prepareTags = repositories => repositories\n      .flatMap(repo => repo.topics)\n      .reduce((acc, el) => ({\n          ...acc,\n          [el]: acc[el] ? acc[el] + 1 : 1\n      }), {});\n\nexport default (props) => {\n  const tags = prepareTags(props.repositories);\n  const data = Object.entries(tags).map(([key, value]) => ({\n    topicName: key,\n    topicCount: value\n  }));\n  return (<Paper>\n    <Grid\n      columns={[{\n        name: 'topicName',\n        title: 'Topic Name'\n      },{\n        name: 'topicCount',\n        title: 'Topic Count'\n      }]}\n      rows={data}>\n      <SortingState\n        defaultSorting={[{ columnName: 'topicCount', direction: 'desc' }]}\n      />\n      <IntegratedSorting />\n      <Table />\n      <TableHeaderRow showSortingControls />\n    </Grid>\n  </Paper>);\n}\n","import React from 'react';\nimport { Grid, Table, TableHeaderRow } from '@devexpress/dx-react-grid-material-ui';\nimport {\n    SortingState,\n    IntegratedSorting,\n} from '@devexpress/dx-react-grid';\nimport Paper from '@material-ui/core/Paper';\n\nconst prepareTags = repositories => repositories\n      .map(repo => repo.licenseNickname)\n      .reduce((acc, el) => ({\n          ...acc,\n          [el]: acc[el] ? acc[el] + 1 : 1\n      }), {});\n\nexport default (props) => {\n  const tags = prepareTags(props.repositories);\n  const data = Object.entries(tags).map(([key, value]) => ({\n    license: key,\n    licenseCount: value\n  }));\n  return (<Paper>\n    <Grid\n      columns={[{\n        name: 'license',\n        title: 'License'\n      },{\n        name: 'licenseCount',\n        title: 'License Count'\n      }]}\n      rows={data}>\n      <SortingState\n        defaultSorting={[{ columnName: 'licenseCount', direction: 'desc' }]}\n      />\n      <IntegratedSorting />\n      <Table />\n      <TableHeaderRow showSortingControls />\n    </Grid>\n  </Paper>);\n}\n","import React from 'react';\nimport { Grid, Table, TableHeaderRow } from '@devexpress/dx-react-grid-material-ui';\nimport {\n    SortingState,\n    IntegratedSorting,\n} from '@devexpress/dx-react-grid';\nimport Paper from '@material-ui/core/Paper';\n\nconst prepareLanguages = repositories => repositories\n      .map(repo => repo.language)\n      .reduce((acc, el) => ({\n          ...acc,\n          [el]: acc[el] ? acc[el] + 1 : 1\n      }), {});\n\nexport default (props) => {\n  const languages = prepareLanguages(props.repositories);\n  const data = Object.entries(languages).map(([key, value]) => ({\n    language: key,\n    languageCount: value\n  }));\n  return (<Paper>\n    <Grid\n      columns={[{\n        name: 'language',\n        title: 'Language'\n      },{\n        name: 'languageCount',\n        title: 'Count'\n      }]}\n      rows={data}>\n      <SortingState\n        defaultSorting={[{ columnName: 'languageCount', direction: 'desc' }]}\n      />\n      <IntegratedSorting />\n      <Table />\n      <TableHeaderRow showSortingControls />\n    </Grid>\n  </Paper>);\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { connect } from 'react-redux';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport qs from 'query-string';\n\nimport LogIn from './components/LogIn.js';\nimport Repos from './components/Repos.js';\nimport Topics from './components/Topics.js'\nimport Licenses from './components/Licenses.js'\nimport Languages from './components/Languages.js'\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    height: '100vh',\n    overflow: 'auto',\n  },\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      drawerOpen: false\n    };\n\n    this.ifLoggedOut = this.ifLoggedOut.bind(this);\n    this.ifLoggedIn = this.ifLoggedIn.bind(this);\n    this.ifRepositories = this.ifRepositories.bind(this);\n  }\n\n  toggleDrawer(value) {\n    this.setState(state => ({\n      ...state,\n      drawerOpen: value ? value : !state.drawerOpen\n    }));\n  }\n\n  ifRepositories(child) {\n    if (this.props.repositories) {\n      return child;\n    }\n    return null\n  }\n\n  ifLoggedOut(child) {\n    if(!this.props.loggedIn) {\n      return child;\n    }\n    return null;\n  }\n\n  ifLoggedIn(child) {\n    if(this.props.loggedIn) {\n      return child;\n    }\n    return null;\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <React.Fragment>\n        <CssBaseline/>\n        <Router>\n        <div className=\"App\">\n          <AppBar>\n            <Toolbar>\n              {this.ifLoggedIn(\n                <IconButton\n                  className={classes.menuButton}\n                  color=\"inherit\"\n                  aria-label=\"Menu\"\n                  onClick={() => this.toggleDrawer()}\n                      >\n                  <MenuIcon />\n                </IconButton>\n              )}\n              <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                GitHub Repo Organizer\n              </Typography>\n              {this.ifLoggedOut(\n                 <Button onClick={this.props.startLogIn} color=\"inherit\">Login</Button>\n              )}\n              {this.ifLoggedIn(\n                <Button onClick={this.props.refresh} color=\"inherit\">Refresh</Button>\n              )}\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            open={this.state.drawerOpen}\n            onClose={() => this.toggleDrawer(false)}\n          >\n            <div\n              onClick={() => this.toggleDrawer(false)}\n              onKeyDown={() => this.toggleDrawer(false)}>\n              <List>\n                <ListItem button>\n                  <Link to={process.env.PUBLIC_URL + \"/\"}>\n                    <ListItemText primary=\"Repositories\" />\n                  </Link>\n                </ListItem>\n                <ListItem button>\n                  <Link to={process.env.PUBLIC_URL + \"/topics\"}>\n                    <ListItemText primary=\"Topics\" />\n                  </Link>\n                </ListItem>\n                <ListItem button>\n                  <Link to={process.env.PUBLIC_URL + \"/licenses\"}>\n                    <ListItemText primary=\"Licenses\" />\n                  </Link>\n                </ListItem>\n                <ListItem button>\n                  <Link to={process.env.PUBLIC_URL + \"/languages\"}>\n                    <ListItemText primary=\"Languages\" />\n                  </Link>\n                </ListItem>\n              </List>\n            </div>\n          </Drawer>\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            {this.ifLoggedOut(<LogIn/>)}\n            {this.ifRepositories(\n            <Switch>\n              <Route\n                  exact\n                  path={process.env.PUBLIC_URL + \"/\"}\n              component={(props) => {\n                  const queryParams = qs.parse(props.location.search);\n                return (<Repos\n                  queryParams={queryParams}\n                  repositories={this.props.repositories}\n                />)\n              }}\n              />\n              <Route exact path={process.env.PUBLIC_URL + \"/topics\"} component={() => (\n                  <Topics repositories={this.props.repositories}/>\n              )}/>\n              <Route exact path={process.env.PUBLIC_URL + \"/licenses\"} component={() => (\n                  <Licenses repositories={this.props.repositories}/>\n              )}/>\n              <Route exact path={process.env.PUBLIC_URL + \"/languages\"} component={() => (\n                  <Languages repositories={this.props.repositories}/>\n              )}/>\n            </Switch>\n            )}\n            </main>\n          </div>\n        </Router>\n      </React.Fragment>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  loggedIn: state.loggedIn,\n  repositories: state.repositories\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  startLogIn: () => dispatch({type: 'START_LOG_IN'}),\n  refresh: () => dispatch({type: 'REFRESH_REPOSITORIES'}),\n  loadRepositories: () => dispatch({type: 'START_LOAD_REPOSITORIES'}),\n  loadUser: () => dispatch({type: 'START_LOAD_USER'})\n});\n\nexport default\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(withStyles(styles)(App));\n","import {\n  put,\n  takeEvery,\n  all,\n  select,\n  call\n} from 'redux-saga/effects';\nimport qs from 'querystring';\nimport Octokit from '@octokit/rest';\n// const graphql = require('@octokit/graphql');\nimport graphql from '@octokit/graphql';\n\nlet octokit = new Octokit();\n\nconst authURL = 'https://github-auth-backend-hugh.glitch.me/start_auth';\n\nexport function* init() {\n  // get from local storage or get from url\n  const query = qs.parse(window.location.search.substring(1));\n\n  if (query.access_token) {\n    yield put({\n      type: 'SET_ACCESS_TOKEN',\n      access_token: query.access_token\n    });\n    yield startLoadUser();\n  }\n}\n\nexport function* watchInit() {\n  yield takeEvery('INIT', init);\n}\n\nexport function* startLogIn() {\n  const query = {\n    'redirect_uri': window.location.origin + window.location.pathname,\n    'scope': ['repo']\n  };\n\n  const authProxyUrl = `${authURL}?${qs.stringify(query)}`;\n\n  yield window.location = authProxyUrl;\n}\n\nexport function* watchStartLogIn() {\n  yield takeEvery('START_LOG_IN', startLogIn);\n}\n\nexport function* startLoadRepos(endCursor) {\n  const accessToken = yield select(state => state.accessToken);\n  const user = yield select(state => state.user.login);\n\n  const query = `query {\n    viewer {\n      repositories (first:100${endCursor ? \", after:\\\"\" + endCursor + '\"': ''}) {\n        pageInfo {\n          endCursor\n        }\n        totalCount,\n        nodes {\n          id,\n          name,\n          description,\n          createdAt,\n          repositoryTopics(first:100) {\n            nodes {\n              topic {\n                id\n                name\n              }\n            }\n          }\n          stargazers {totalCount},\n          primaryLanguage {\n            name\n          }\n          isPrivate\n          isArchived\n          issues (states: OPEN) {\n            totalCount\n          }\n          owner {\n            login\n          }\n          nameWithOwner\n          url\n          isFork\n          licenseInfo {\n            name\n            nickname\n          }\n          vulnerabilityAlerts (first:50){\n            nodes {\n              packageName\n              vulnerableManifestFilename\n              vulnerableRequirements\n              securityAdvisory {\n                description\n                summary\n              }\n            }\n          }\n          collaborators (first: 50){\n            nodes {\n              name\n              login\n            }\n          }\n        }\n      }\n    }\n  }`\n\n  let data;\n\n  try {\n    data = yield call(() => graphql({\n      query,\n      headers: {\n        authorization: `token ${accessToken}`,\n        accept: 'application/vnd.github.vixen-preview+json'\n      }\n    }));\n  } catch (error) {\n    data = error.data\n  }\n\n  // TODO handle when error is null\n\n  const repos = data.viewer.repositories.nodes.map(repo => ({\n    id: repo.id,\n    name: repo.name,\n    nameWithOnwer: repo.nameWithOwner,\n    description: repo.description,\n    createdAt: repo.createdAt,\n    topics: repo.repositoryTopics.nodes.map(node => node.topic.name),\n    stars: repo.stargazers.totalCount,\n    language: (l => l && l.name)(repo.primaryLanguage),\n    isPrivate: repo.isPrivate,\n    isArchived: repo.isArchived,\n    url: repo.url,\n    owner: repo.owner.login,\n    isFork: repo.isFork,\n    licenseNickname: repo.licenseInfo && (repo.licenseInfo.nickname || repo.licenseInfo.name),\n    vulnerabilityAlerts: repo.vulnerabilityAlerts.nodes,\n    collaborators: repo.collaborators && repo.collaborators.nodes.filter(a => a.login !== user),\n    issueCount: repo.issues.totalCount\n  }));\n\n  yield put({type: 'SET_REPOSITORIES', repositories: repos});\n\n  const repoCount = yield select(state => state.repositories.length);\n  if (repoCount < data.viewer.repositories.totalCount) {\n    yield startLoadRepos(data.viewer.repositories.pageInfo.endCursor);\n  }\n}\n\nexport function* watchLoadRepositories() {\n  yield takeEvery('START_LOAD_REPOSITORIES', startLoadRepos);\n}\n\nfunction* refresh() {\n  yield put({type: 'DELETE_REPOSITORIES'});\n  yield startLoadRepos();\n}\n\nexport function* watchRefresh() {\n  yield takeEvery('REFRESH_REPOSITORIES', refresh);\n}\n\nexport function* startLoadUser() {\n  const accessToken = yield select(state => state.accessToken);\n\n  octokit = new Octokit({\n    auth: `token ${accessToken}`\n  });\n\n  const repo = {\n    owner: 'hughrawlinson',\n    repo: 'github-repo-organizer'\n  };\n\n  const {data} = yield call(() => octokit.users.getAuthenticated());\n  if (data.login !== 'hughrawlinson') {\n    try {\n      yield call(() => octokit.activity.checkStarringRepo(repo));\n    } catch (e) {\n      yield call(() => octokit.activity.starRepo(repo));\n    }\n  }\n  yield put({type: 'SET_USER', user: data});\n  yield startLoadRepos();\n}\n\nexport function* watchLoadUser() {\n  yield takeEvery('START_LOAD_USER', startLoadUser);\n}\nexport default function* rootSaga() {\n  yield all([\n    watchInit(),\n    watchStartLogIn(),\n    watchLoadRepositories(),\n    watchLoadUser(),\n    watchRefresh()\n  ]);\n}\n","const initialState = {\n  loggedIn: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch(action.type) {\n    case 'SET_ACCESS_TOKEN':\n      return {\n        ...state,\n        accessToken: action.access_token,\n        loggedIn: true\n      };\n    case 'SET_REPOSITORIES':\n      return {\n        ...state,\n        repositories: [\n          ...(state.repositories || []),\n          ...action.repositories\n        ]\n      };\n    case 'DELETE_REPOSITORIES':\n      return {\n        ...state,\n        repositories: []\n      };\n    case 'SET_USER':\n      return {\n        ...state,\n        user: action.user\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport sagas from './sagas'\nimport { Provider } from 'react-redux';\nimport reducer from './reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(sagaMiddleware)))\nsagaMiddleware.run(sagas);\nstore.dispatch({type: \"INIT\"})\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n"],"sourceRoot":""}