{"version":3,"sources":["components/LogIn.js","components/RepositoryTable.js","components/Topics.js","App.js","sagas/index.js","reducers/index.js","index.js"],"names":["LogIn","react_default","a","createElement","Fragment","Typography_default","variant","paragraph","Component","defaultHiddenColumnNames","App","Paper_default","dx_react_grid_material_ui_es","columns","name","title","getCellValue","row","href","url","topics","join","isPrivate","isArchived","isFork","rows","this","props","repositories","dx_react_grid_es","defaultFilters","defaultSorting","showSortingControls","showFilterSelector","withStyles","theme","Topics","tags","flatMap","repo","reduce","acc","el","Object","objectSpread","defineProperty","data","entries","map","_ref","_ref2","slicedToArray","topicName","topicCount","console","log","columnName","direction","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","ifLoggedOut","bind","assertThisInitialized","ifLoggedIn","ifRepositories","child","loggedIn","_this2","classes","CssBaseline_default","className","AppBar_default","Toolbar_default","IconButton_default","menuButton","color","aria-label","Menu_default","grow","Button_default","onClick","startLogIn","content","appBarSpacer","components_LogIn","BrowserRouter","Switch","Route","exact","path","process","component","queryParams","qs","parse","location","search","RepositoryTable","connect","state","dispatch","type","loadRepositories","loadUser","root","flexGrow","marginLeft","marginRight","mixins","toolbar","padding","spacing","unit","height","overflow","init","watchInit","watchStartLogIn","startLoadRepos","watchLoadRepositories","startLoadUser","watchLoadUser","rootSaga","octokit","Octokit","authURL","query","regenerator_default","wrap","_context","prev","next","window","substring","access_token","put","stop","_marked","_context2","takeEvery","_marked2","authProxyUrl","_context3","redirect_uri","origin","pathname","scope","concat","stringify","_marked3","_context4","_marked4","endCursor","accessToken","github","repos","_context5","select","sent","GitHub","token","viewer","nodes","id","nameWithOwner","description","createdAt","repositoryTopics","node","topic","stars","stargazers","totalCount","language","l","primaryLanguage","owner","login","licenseNickname","licenseInfo","nickname","length","pageInfo","_marked5","_context6","_marked6","_context7","authenticate","users","get","activity","checkStarringRepo","t0","starRepo","user","_marked7","_context8","_marked8","_context9","all","_marked9","initialState","reducer","arguments","undefined","action","toConsumableArray","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","sagas","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5e6101f9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nclass LogIn extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Typography variant=\"display1\">\n          Log in!\n        </Typography>\n        <Typography paragraph={true}>\n          Please log in with GitHub to start organizing your repositories.\n        </Typography>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default LogIn;\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n// import { connect } from 'react-redux';\nimport { Grid, Table, TableHeaderRow, TableFilterRow, Toolbar, SearchPanel, ColumnChooser, TableColumnVisibility } from '@devexpress/dx-react-grid-material-ui';\nimport { FilteringState, IntegratedFiltering, SearchState, SortingState, IntegratedSorting } from '@devexpress/dx-react-grid';\n\nconst styles = theme => ({});\n\nconst defaultHiddenColumnNames = ['isPrivate', 'isArchived', 'isFork'];\n\nclass App extends Component {\n  render() {\n    // const { classes } = this.props;\n    return (\n      <Paper>\n        <Grid\n          columns={[{\n              name: 'name',\n              title: 'Name',\n              getCellValue: row => (<a href={row.url}>{row.name}</a>)\n          },{\n              name: 'description',\n              title: 'Description'\n          },{\n              name: 'createdAt',\n              title: 'Created At'\n          },{\n              name: 'repositoryTopics',\n              title: 'Topics',\n              getCellValue: row => row.topics.join(', ')\n          },{\n              name: 'stars',\n              title: 'Stars'\n          },{\n              name: 'language',\n              title: 'Language'\n          },{\n              name: 'owner',\n              title: 'Owner'\n          },{\n              name: 'isPrivate',\n              title: 'Private',\n              getCellValue: row => row.isPrivate ? \"True\" : \"False\"\n          },{\n              name: 'isArchived',\n              title: 'Archived',\n              getCellValue: row => row.isArchived ? \"True\" : \"False\"\n          },{\n              name: 'isFork',\n              title: 'Fork',\n              getCellValue: row => row.isFork ? \"True\" : \"False\"\n          },{\n              name: 'licenseNickname',\n              title: 'License'\n          }]}\n          rows={this.props.repositories}>\n          <FilteringState\n            defaultFilters={[]}\n          />\n          <SortingState\n            defaultSorting={[]}\n          />\n          <SearchState />\n          <IntegratedFiltering/>\n          <IntegratedSorting/>\n          <Table/>\n          <TableHeaderRow showSortingControls />\n          <TableFilterRow showFilterSelector />\n          <TableColumnVisibility defaultHiddenColumnNames={defaultHiddenColumnNames} />\n          <Toolbar/>\n          <SearchPanel />\n          <ColumnChooser />\n        </Grid>\n      </Paper>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","import React from 'react';\nimport { Grid, Table, TableHeaderRow } from '@devexpress/dx-react-grid-material-ui';\nimport {\n    SortingState,\n    IntegratedSorting,\n} from '@devexpress/dx-react-grid';\nimport Paper from '@material-ui/core/Paper';\n\nconst prepareTags = repositories => repositories\n      .flatMap(repo => repo.topics)\n      .reduce((acc, el) => ({\n          ...acc,\n          [el]: acc[el] ? acc[el] + 1 : 1\n      }), {});\n\nexport default (props) => {\n  const tags = prepareTags(props.repositories);\n  const data = Object.entries(tags).map(([key, value]) => ({\n    topicName: key,\n    topicCount: value\n  }));\n  console.log(data);\n  return (<Paper>\n    <Grid\n      columns={[{\n        name: 'topicName',\n        title: 'Topic Name'\n      },{\n        name: 'topicCount',\n        title: 'Topic Count'\n      }]}\n      rows={data}>\n      <SortingState\n        defaultSorting={[{ columnName: 'topicCount', direction: 'desc' }]}\n      />\n      <IntegratedSorting />\n      <Table />\n      <TableHeaderRow showSortingControls />\n    </Grid>\n  </Paper>);\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { connect } from 'react-redux';\n// import { withRouter } from 'react-router-dom'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport qs from 'query-string';\n\nimport LogIn from './components/LogIn.js';\nimport RepositoryTable from './components/RepositoryTable.js'\nimport Topics from './components/Topics.js'\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto',\n  },\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.ifLoggedOut = this.ifLoggedOut.bind(this);\n    this.ifLoggedIn = this.ifLoggedIn.bind(this);\n    this.ifRepositories = this.ifRepositories.bind(this);\n  }\n\n  ifRepositories(child) {\n    if (this.props.repositories) {\n      return child;\n    }\n    return null\n  }\n\n  ifLoggedOut(child) {\n    if(!this.props.loggedIn) {\n      return child;\n    }\n    return null;\n  }\n\n  ifLoggedIn(child) {\n    if(this.props.loggedIn) {\n      return child;\n    }\n    return null;\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <React.Fragment>\n        <CssBaseline/>\n        <div className=\"App\">\n          <AppBar>\n            <Toolbar>\n              {this.ifLoggedIn(\n                 <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n                  <MenuIcon />\n                 </IconButton>\n              )}\n              <Typography variant=\"title\" color=\"inherit\" className={classes.grow}>\n                GitHub Repo Organizer\n              </Typography>\n              {this.ifLoggedOut(\n                 <Button onClick={this.props.startLogIn} color=\"inherit\">Login</Button>\n              )}\n            </Toolbar>\n          </AppBar>\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            {this.ifLoggedOut(<LogIn/>)}\n            {this.ifRepositories(\n            <Router>\n              <Switch>\n                <Route\n                    exact\n                    path={process.env.PUBLIC_URL + \"/\"}\n                component={(props) => {\n                    const queryParams = qs.parse(props.location.search);\n                    return (<RepositoryTable\n                      queryParams={queryParams}\n                      repositories={this.props.repositories}/>)\n                }}\n                />\n                <Route exact path={process.env.PUBLIC_URL + \"/topics\"} component={() => (\n                    <Topics repositories={this.props.repositories}/>\n                )}/>\n              </Switch>\n            </Router>\n            )}\n          </main>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  loggedIn: state.loggedIn,\n  repositories: state.repositories\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  startLogIn: () => dispatch({type: 'START_LOG_IN'}),\n  loadRepositories: () => dispatch({type: 'START_LOAD_REPOSITORIES'}),\n  loadUser: () => dispatch({type: 'START_LOAD_USER'})\n});\n\nexport default\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(withStyles(styles)(App));\n","import {\n  put,\n  takeEvery,\n  all,\n  select,\n  call\n} from 'redux-saga/effects';\nimport qs from 'querystring';\nimport { GitHub } from 'github-graphql-api/dist/github.js';\nimport Octokit from '@octokit/rest';\n\nconst octokit = new Octokit();\n\nconst authURL = 'https://github-auth-backend-hugh.glitch.me/start_auth';\n\nexport function* init() {\n  // get from local storage or get from url\n  const query = qs.parse(window.location.search.substring(1));\n\n  if (query.access_token) {\n    yield put({\n      type: 'SET_ACCESS_TOKEN',\n      access_token: query.access_token\n    });\n    yield startLoadUser();\n  }\n}\n\nexport function* watchInit() {\n  yield takeEvery('INIT', init);\n}\n\nexport function* startLogIn() {\n  const query = {\n    'redirect_uri': window.location.origin + window.location.pathname,\n    'scope': ['repo']\n  };\n\n  const authProxyUrl = `${authURL}?${qs.stringify(query)}`;\n\n  yield window.location = authProxyUrl;\n}\n\nexport function* watchStartLogIn() {\n  yield takeEvery('START_LOG_IN', startLogIn);\n}\n\nexport function* startLoadRepos(endCursor) {\n  const accessToken = yield select(state => state.accessToken);\n\n  const github = new GitHub({token: accessToken});\n\n  const data = yield call(() => github.query(`\n    query {\n      viewer {\n        repositories (first:100${endCursor ? \", after:\\\"\" + endCursor + '\"': ''}) {\n          pageInfo {\n            endCursor\n          }\n          totalCount,\n          nodes {\n            id,\n            name,\n            description,\n            createdAt,\n            repositoryTopics(first:100) {\n              nodes {\n                topic {\n                  id\n                  name\n                }\n              }\n            }\n            stargazers {totalCount},\n            primaryLanguage {\n              name\n            }\n            isPrivate\n            isArchived\n            owner {\n              login\n            }\n            nameWithOwner\n            url\n            isFork\n            licenseInfo {\n              name\n              nickname\n            }\n          }\n        }\n      }\n    }`));\n\n  const repos = data.viewer.repositories.nodes.map(repo => ({\n    id: repo.id,\n    name: repo.nameWithOwner,\n    description: repo.description,\n    createdAt: repo.createdAt,\n    topics: repo.repositoryTopics.nodes.map(node => node.topic.name),\n    stars: repo.stargazers.totalCount,\n    language: (l => l && l.name)(repo.primaryLanguage),\n    isPrivate: repo.isPrivate,\n    isArchived: repo.isArchived,\n    url: repo.url,\n    owner: repo.owner.login,\n    isFork: repo.isFork,\n    licenseNickname: repo.licenseInfo && (repo.licenseInfo.nickname || repo.licenseInfo.name)\n  }));\n\n  yield put({type: 'SET_REPOSITORIES', repositories: repos});\n\n  const repoCount = yield select(state => state.repositories.length);\n  if (repoCount < data.viewer.repositories.totalCount) {\n    yield startLoadRepos(data.viewer.repositories.pageInfo.endCursor);\n  }\n}\n\nexport function* watchLoadRepositories() {\n  yield takeEvery('START_LOAD_REPOSITORIES', startLoadRepos);\n}\n\nexport function* startLoadUser() {\n  const accessToken = yield select(state => state.accessToken);\n\n  octokit.authenticate({\n    type: 'oauth',\n    token: accessToken\n  });\n\n  const repo = {\n    owner: 'hughrawlinson',\n    repo: 'github-repo-organizer'\n  };\n\n  const {data} = yield call(() => octokit.users.get());\n  if (data.login !== 'hughrawlinson') {\n    try {\n      yield call(() => octokit.activity.checkStarringRepo(repo));\n    } catch {\n      yield call(() => octokit.activity.starRepo(repo));\n    }\n  }\n  yield put({type: 'SET_USER', user: data});\n  yield startLoadRepos();\n}\n\nexport function* watchLoadUser() {\n  yield takeEvery('START_LOAD_USER', startLoadUser);\n}\nexport default function* rootSaga() {\n  yield all([\n    watchInit(),\n    watchStartLogIn(),\n    watchLoadRepositories(),\n    watchLoadUser()\n  ]);\n}\n","const initialState = {\n  loggedIn: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch(action.type) {\n    case 'SET_ACCESS_TOKEN':\n      return {\n        ...state,\n        accessToken: action.access_token,\n        loggedIn: true\n      };\n    case 'SET_REPOSITORIES':\n      return {\n        ...state,\n        repositories: [\n          ...(state.repositories || []),\n          ...action.repositories\n        ]\n      };\n    case 'SET_USER':\n      return {\n        ...state,\n        user: action.user\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport sagas from './sagas'\nimport { Provider } from 'react-redux';\nimport reducer from './reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(sagaMiddleware)))\nsagaMiddleware.run(sagas);\nstore.dispatch({type: \"INIT\"})\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n"],"sourceRoot":""}