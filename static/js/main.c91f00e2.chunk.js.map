{"version":3,"sources":["components/LogIn.js","components/RepositoryTable.js","components/Topics.js","components/Licenses.js","components/Languages.js","App.js","sagas/index.js","reducers/index.js","index.js"],"names":["LogIn","react_default","a","createElement","Fragment","Typography_default","variant","paragraph","Component","DateTypeProvider","props","dx_react_grid_es","Object","assign","formatterComponent","_ref","value","toLocaleDateString","LinkTypeProvider","_ref2","_ref2$value","href","title","ChipListProvider","_ref3","map","v","Chip_default","style","margin","key","label","BooleanTypeProvider","_ref4","tableColumnExtensions","columnName","wordWrapEnabled","defaultHiddenColumnNames","App","Paper_default","dx_react_grid_material_ui_es","columns","name","getCellValue","row","url","Date","createdAt","rows","this","repositories","RepositoryTable_DateTypeProvider","for","RepositoryTable_LinkTypeProvider","RepositoryTable_ChipListProvider","RepositoryTable_BooleanTypeProvider","defaultFilters","defaultSorting","columnExtensions","showSortingControls","showFilterSelector","withStyles","theme","Topics","tags","flatMap","repo","topics","reduce","acc","el","objectSpread","defineProperty","data","entries","slicedToArray","topicName","topicCount","direction","Licenses","licenseNickname","license","licenseCount","Languages","languages","language","languageCount","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","drawerOpen","ifLoggedOut","bind","assertThisInitialized","ifLoggedIn","ifRepositories","setState","child","loggedIn","_this2","classes","CssBaseline_default","BrowserRouter","className","AppBar_default","Toolbar_default","IconButton_default","menuButton","color","aria-label","onClick","toggleDrawer","Menu_default","grow","Button_default","startLogIn","Drawer_default","open","onClose","onKeyDown","List_default","ListItem_default","button","Link","to","ListItemText_default","primary","content","appBarSpacer","components_LogIn","Switch","Route","exact","path","process","component","queryParams","qs","parse","location","search","RepositoryTable","connect","dispatch","type","loadRepositories","loadUser","root","flexGrow","marginLeft","marginRight","mixins","toolbar","padding","spacing","unit","height","overflow","init","watchInit","watchStartLogIn","startLoadRepos","watchLoadRepositories","startLoadUser","watchLoadUser","rootSaga","octokit","Octokit","authURL","query","regenerator_default","wrap","_context","prev","next","window","substring","access_token","put","stop","_marked","_context2","takeEvery","_marked2","authProxyUrl","_context3","redirect_uri","origin","pathname","scope","concat","stringify","_marked3","_context4","_marked4","endCursor","accessToken","github","repos","_context5","select","sent","GitHub","token","viewer","nodes","id","nameWithOnwer","nameWithOwner","description","repositoryTopics","node","topic","stars","stargazers","totalCount","l","primaryLanguage","isPrivate","isArchived","owner","login","isFork","licenseInfo","nickname","length","pageInfo","_marked5","_context6","_marked6","_context7","authenticate","users","get","activity","checkStarringRepo","t0","starRepo","user","_marked7","_context8","_marked8","_context9","all","_marked9","initialState","reducer","arguments","undefined","action","toConsumableArray","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","sagas","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"siBAkBeA,mLAbX,OACEC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAYI,QAAQ,YAApB,WAGAL,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAYK,WAAW,GAAvB,4EAPYC,+DCSdC,EAAmB,SAAAC,GAAK,OAC5BT,EAAAC,EAAAC,cAACQ,EAAA,EAADC,OAAAC,OAAA,CACEC,mBAAoB,SAAAC,GAAA,OAAAA,EAAEC,MAAiBC,uBACnCP,KAIFQ,EAAmB,SAAAR,GAAK,OAC5BT,EAAAC,EAAAC,cAACQ,EAAA,EAADC,OAAAC,OAAA,CACEC,mBAAoB,SAAAK,GAAA,IAAAC,EAAAD,EAAEH,MAAOK,EAATD,EAASC,KAAMC,EAAfF,EAAeE,MAAf,OAA4BrB,EAAAC,EAAAC,cAAA,KAAGkB,KAAMA,GAAOC,KAC5DZ,KAIFa,EAAmB,SAAAb,GAAK,OAC5BT,EAAAC,EAAAC,cAACQ,EAAA,EAADC,OAAAC,OAAA,CACEC,mBAAoB,SAAAU,GAAA,IAAER,EAAFQ,EAAER,MAAF,OAAcA,EAAQf,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACvCY,EAAMS,IAAI,SAACC,GAAD,OAAQzB,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,CAAM0B,MAAO,CAACC,OAAQ,OAAQC,IAAKJ,EAAGK,MAAOL,OAC5D,OACFhB,KAIFsB,GAAsB,SAAAtB,GAAK,OAC/BT,EAAAC,EAAAC,cAACQ,EAAA,EAADC,OAAAC,OAAA,CACEC,mBAAoB,SAAAmB,GAAA,IAAEjB,EAAFiB,EAAEjB,MAAF,OAAcf,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,CAAM6B,MAAOf,EAAQ,OAAS,YAC5DN,KAIFwB,GAAwB,CAC5B,CAAEC,WAAY,SAAUC,iBAAiB,GACzC,CAAED,WAAY,cAAeC,iBAAiB,IAG1CC,GAA2B,CAAC,YAAa,aAAc,SAAU,QAAS,mBAE1EC,oLAGF,OACErC,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,KACED,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CACEC,QAAS,CAAC,CACNC,KAAM,OACNpB,MAAO,OACPqB,aAAc,SAAAC,GAAG,MAAK,CACpBvB,KAAMuB,EAAIC,IACVvB,MAAOsB,EAAIF,QAEf,CACEA,KAAM,cACNpB,MAAO,eACT,CACEoB,KAAM,YACNpB,MAAO,aACPqB,aAAc,SAAAC,GAAG,OAAI,IAAIE,KAAKF,EAAIG,aACpC,CACEL,KAAM,SACNpB,MAAO,UACT,CACEoB,KAAM,QACNpB,MAAO,SACT,CACEoB,KAAM,WACNpB,MAAO,YACT,CACEoB,KAAM,QACNpB,MAAO,SACT,CACEoB,KAAM,YACNpB,MAAO,WACT,CACEoB,KAAM,aACNpB,MAAO,YACT,CACEoB,KAAM,SACNpB,MAAO,QACT,CACEoB,KAAM,kBACNpB,MAAO,YAEX0B,KAAMC,KAAKvC,MAAMwC,cACjBjD,EAAAC,EAAAC,cAACgD,EAAD,CACEC,IAAK,CAAC,eAERnD,EAAAC,EAAAC,cAACkD,EAAD,CACED,IAAK,CAAC,UAERnD,EAAAC,EAAAC,cAACmD,EAAD,CACEF,IAAK,CAAC,YAERnD,EAAAC,EAAAC,cAACoD,GAAD,CACEH,IAAK,CAAC,YAAa,aAAc,YAEnCnD,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACE6C,eAAgB,KAElBvD,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACE8C,eAAgB,KAElBxD,EAAAC,EAAAC,cAACQ,EAAA,EAAD,MACAV,EAAAC,EAAAC,cAACQ,EAAA,EAAD,MACAV,EAAAC,EAAAC,cAACQ,EAAA,EAAD,MACAV,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAOkB,iBAAkBxB,KACzBjC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAgBmB,qBAAmB,IACnC1D,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAgBoB,oBAAkB,IAClC3D,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAuBH,yBAA0BA,KACjDpC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,MACAvC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,MACAvC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,eAzEQhC,aAgFHqD,wBAvHA,SAAAC,GAAK,MAAK,IAuHVD,CAAmBvB,sBClHlCyB,GAAA,SAAgBrD,GACd,IAAMsD,EAAmBtD,EAAMwC,aAP1Be,QAAQ,SAAAC,GAAI,OAAIA,EAAKC,SACrBC,OAAO,SAACC,EAAKC,GAAN,OAAA1D,OAAA2D,EAAA,EAAA3D,CAAA,GACDyD,EADCzD,OAAA4D,GAAA,EAAA5D,CAAA,GAEH0D,EAAKD,EAAIC,GAAMD,EAAIC,GAAM,EAAI,KAC9B,IAIFG,EAAO7D,OAAO8D,QAAQV,GAAMvC,IAAI,SAAAV,GAAA,IAAAI,EAAAP,OAAA+D,GAAA,EAAA/D,CAAAG,EAAA,SAAmB,CACvD6D,UADoCzD,EAAA,GAEpC0D,WAFoC1D,EAAA,MAItC,OAAQlB,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,KACND,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CACEC,QAAS,CAAC,CACRC,KAAM,YACNpB,MAAO,cACP,CACAoB,KAAM,aACNpB,MAAO,gBAET0B,KAAMyB,GACNxE,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACE8C,eAAgB,CAAC,CAAEtB,WAAY,aAAc2C,UAAW,WAE1D7E,EAAAC,EAAAC,cAACQ,EAAA,EAAD,MACAV,EAAAC,EAAAC,cAACqC,EAAA,EAAD,MACAvC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAgBmB,qBAAmB,OCrBzCoB,GAAA,SAAgBrE,GACd,IAAMsD,EAAmBtD,EAAMwC,aAP1BzB,IAAI,SAAAyC,GAAI,OAAIA,EAAKc,kBACjBZ,OAAO,SAACC,EAAKC,GAAN,OAAA1D,OAAA2D,EAAA,EAAA3D,CAAA,GACDyD,EADCzD,OAAA4D,GAAA,EAAA5D,CAAA,GAEH0D,EAAKD,EAAIC,GAAMD,EAAIC,GAAM,EAAI,KAC9B,IAIFG,EAAO7D,OAAO8D,QAAQV,GAAMvC,IAAI,SAAAV,GAAA,IAAAI,EAAAP,OAAA+D,GAAA,EAAA/D,CAAAG,EAAA,SAAmB,CACvDkE,QADoC9D,EAAA,GAEpC+D,aAFoC/D,EAAA,MAItC,OAAQlB,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,KACND,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CACEC,QAAS,CAAC,CACRC,KAAM,UACNpB,MAAO,WACP,CACAoB,KAAM,eACNpB,MAAO,kBAET0B,KAAMyB,GACNxE,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACE8C,eAAgB,CAAC,CAAEtB,WAAY,eAAgB2C,UAAW,WAE5D7E,EAAAC,EAAAC,cAACQ,EAAA,EAAD,MACAV,EAAAC,EAAAC,cAACqC,EAAA,EAAD,MACAvC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAgBmB,qBAAmB,OCrBzCwB,GAAA,SAAgBzE,GACd,IAAM0E,EAA6B1E,EAAMwC,aAPpCzB,IAAI,SAAAyC,GAAI,OAAIA,EAAKmB,WACjBjB,OAAO,SAACC,EAAKC,GAAN,OAAA1D,OAAA2D,EAAA,EAAA3D,CAAA,GACDyD,EADCzD,OAAA4D,GAAA,EAAA5D,CAAA,GAEH0D,EAAKD,EAAIC,GAAMD,EAAIC,GAAM,EAAI,KAC9B,IAIFG,EAAO7D,OAAO8D,QAAQU,GAAW3D,IAAI,SAAAV,GAAA,IAAAI,EAAAP,OAAA+D,GAAA,EAAA/D,CAAAG,EAAA,SAAmB,CAC5DsE,SADyClE,EAAA,GAEzCmE,cAFyCnE,EAAA,MAI3C,OAAQlB,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,KACND,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CACEC,QAAS,CAAC,CACRC,KAAM,WACNpB,MAAO,YACP,CACAoB,KAAM,gBACNpB,MAAO,UAET0B,KAAMyB,GACNxE,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACE8C,eAAgB,CAAC,CAAEtB,WAAY,gBAAiB2C,UAAW,WAE7D7E,EAAAC,EAAAC,cAACQ,EAAA,EAAD,MACAV,EAAAC,EAAAC,cAACqC,EAAA,EAAD,MACAvC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAgBmB,qBAAmB,OCQnCrB,eACJ,SAAAA,EAAY5B,GAAO,IAAA6E,EAAA,OAAA3E,OAAA4E,EAAA,EAAA5E,CAAAqC,KAAAX,IACjBiD,EAAA3E,OAAA6E,EAAA,EAAA7E,CAAAqC,KAAArC,OAAA8E,EAAA,EAAA9E,CAAA0B,GAAAqD,KAAA1C,KAAMvC,KAEDkF,MAAQ,CACXC,YAAY,GAGdN,EAAKO,YAAcP,EAAKO,YAAYC,KAAjBnF,OAAAoF,EAAA,EAAApF,QAAAoF,EAAA,EAAApF,CAAA2E,KACnBA,EAAKU,WAAaV,EAAKU,WAAWF,KAAhBnF,OAAAoF,EAAA,EAAApF,QAAAoF,EAAA,EAAApF,CAAA2E,KAClBA,EAAKW,eAAiBX,EAAKW,eAAeH,KAApBnF,OAAAoF,EAAA,EAAApF,QAAAoF,EAAA,EAAApF,CAAA2E,KATLA,4EAYNvE,GACXiC,KAAKkD,SAAS,SAAAP,GAAK,OAAAhF,OAAA2D,EAAA,EAAA3D,CAAA,GACdgF,EADc,CAEjBC,WAAY7E,IAAiB4E,EAAMC,sDAIxBO,GACb,OAAInD,KAAKvC,MAAMwC,aACNkD,EAEF,yCAGGA,GACV,OAAInD,KAAKvC,MAAM2F,SAGR,KAFED,qCAKAA,GACT,OAAGnD,KAAKvC,MAAM2F,SACLD,EAEF,sCAGA,IAAAE,EAAArD,KACCsD,EAAYtD,KAAKvC,MAAjB6F,QACR,OACEtG,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAACqG,EAAAtG,EAAD,MACAD,EAAAC,EAAAC,cAACsG,EAAA,EAAD,KACAxG,EAAAC,EAAAC,cAAA,OAAKuG,UAAU,OACbzG,EAAAC,EAAAC,cAACwG,EAAAzG,EAAD,KACED,EAAAC,EAAAC,cAACyG,EAAA1G,EAAD,KACG+C,KAAKgD,WACHhG,EAAAC,EAAAC,cAAC0G,EAAA3G,EAAD,CACCwG,UAAWH,EAAQO,WACnBC,MAAM,UACNC,aAAW,OACXC,QAAS,kBAAMX,EAAKY,iBAEpBjH,EAAAC,EAAAC,cAACgH,EAAAjH,EAAD,QAGJD,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAYI,QAAQ,QAAQyG,MAAM,UAAUL,UAAWH,EAAQa,MAA/D,yBAGCnE,KAAK6C,YACH7F,EAAAC,EAAAC,cAACkH,EAAAnH,EAAD,CAAQ+G,QAAShE,KAAKvC,MAAM4G,WAAYP,MAAM,WAA9C,YAIP9G,EAAAC,EAAAC,cAACoH,EAAArH,EAAD,CACEsH,KAAMvE,KAAK2C,MAAMC,WACjB4B,QAAS,kBAAMnB,EAAKY,cAAa,KAEjCjH,EAAAC,EAAAC,cAAA,OACE8G,QAAS,kBAAMX,EAAKY,cAAa,IACjCQ,UAAW,kBAAMpB,EAAKY,cAAa,KACnCjH,EAAAC,EAAAC,cAACwH,EAAAzH,EAAD,KACED,EAAAC,EAAAC,cAACyH,EAAA1H,EAAD,CAAU2H,QAAM,GACd5H,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CAAMC,GAAG,KACP9H,EAAAC,EAAAC,cAAC6H,EAAA9H,EAAD,CAAc+H,QAAQ,mBAG1BhI,EAAAC,EAAAC,cAACyH,EAAA1H,EAAD,CAAU2H,QAAM,GACd5H,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CAAMC,GAAG,WACP9H,EAAAC,EAAAC,cAAC6H,EAAA9H,EAAD,CAAc+H,QAAQ,aAG1BhI,EAAAC,EAAAC,cAACyH,EAAA1H,EAAD,CAAU2H,QAAM,GACd5H,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CAAMC,GAAG,aACP9H,EAAAC,EAAAC,cAAC6H,EAAA9H,EAAD,CAAc+H,QAAQ,eAG1BhI,EAAAC,EAAAC,cAACyH,EAAA1H,EAAD,CAAU2H,QAAM,GACd5H,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CAAMC,GAAG,cACP9H,EAAAC,EAAAC,cAAC6H,EAAA9H,EAAD,CAAc+H,QAAQ,mBAMhChI,EAAAC,EAAAC,cAAA,QAAMuG,UAAWH,EAAQ2B,SACvBjI,EAAAC,EAAAC,cAAA,OAAKuG,UAAWH,EAAQ4B,eACvBlF,KAAK6C,YAAY7F,EAAAC,EAAAC,cAACiI,EAAD,OACjBnF,KAAKiD,eACNjG,EAAAC,EAAAC,cAACkI,EAAA,EAAD,KACEpI,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CACIC,OAAK,EACLC,KAAMC,0BACVC,UAAW,SAAChI,GACR,IAAMiI,EAAcC,IAAGC,MAAMnI,EAAMoI,SAASC,QAC5C,OAAQ9I,EAAAC,EAAAC,cAAC6I,GAAD,CACNL,YAAaA,EACbzF,aAAcoD,EAAK5F,MAAMwC,kBAG/BjD,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMC,gCAAoCC,UAAW,kBAC9DzI,EAAAC,EAAAC,cAAC4D,GAAD,CAAQb,aAAcoD,EAAK5F,MAAMwC,kBAErCjD,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMC,kCAAsCC,UAAW,kBAChEzI,EAAAC,EAAAC,cAAC4E,GAAD,CAAU7B,aAAcoD,EAAK5F,MAAMwC,kBAEvCjD,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMC,mCAAuCC,UAAW,kBACjEzI,EAAAC,EAAAC,cAACgF,GAAD,CAAWjC,aAAcoD,EAAK5F,MAAMwC,+BAzHpC1C,aAqJdyI,eAZoB,SAACrD,GAAD,MAAY,CAClCS,SAAUT,EAAMS,SAChBnD,aAAc0C,EAAM1C,eAGK,SAACgG,GAAD,MAAe,CACxC5B,WAAY,kBAAM4B,EAAS,CAACC,KAAM,kBAClCC,iBAAkB,kBAAMF,EAAS,CAACC,KAAM,6BACxCE,SAAU,kBAAMH,EAAS,CAACC,KAAM,uBAI9BF,CAGEpF,qBA5KS,SAAAC,GAAK,MAAK,CACvBwF,KAAM,CACJC,SAAU,GAEZnC,KAAM,CACJmC,SAAU,GAEZzC,WAAY,CACV0C,YAAa,GACbC,YAAa,IAEftB,aAAcrE,EAAM4F,OAAOC,QAC3BzB,QAAS,CACPqB,SAAU,EACVK,QAA8B,EAArB9F,EAAM+F,QAAQC,KACvBC,OAAQ,QACRC,SAAU,UA4JRnG,CAAmBvB,sHCrLR2H,iBAaAC,iBAIA5C,iBAWA6C,iBAIAC,iBAwEAC,iBAIAC,iBAyBAC,iBAGQC,IA5InBC,GAAU,IAAIC,KAEdC,GAAU,wDAET,SAAUV,KAAV,IAAAW,EAAA,OAAAC,GAAA3K,EAAA4K,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YAECL,EAAQhC,KAAGC,MAAMqC,OAAOpC,SAASC,OAAOoC,UAAU,KAE9CC,aAJL,CAAAL,EAAAE,KAAA,QAKH,OALGF,EAAAE,KAAA,EAKGI,aAAI,CACRlC,KAAM,mBACNiC,aAAcR,EAAMQ,eAPnB,OASH,OATGL,EAAAE,KAAA,EASGX,KATH,wBAAAS,EAAAO,SAAAC,GAAAtI,MAaA,SAAUiH,KAAV,OAAAW,GAAA3K,EAAA4K,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,OACL,OADKO,EAAAP,KAAA,EACCQ,aAAU,OAAQxB,IADnB,wBAAAuB,EAAAF,SAAAI,GAAAzI,MAIA,SAAUqE,KAAV,IAAAsD,EAAAe,EAAA,OAAAd,GAAA3K,EAAA4K,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,OAQL,OAPML,EAAQ,CACZiB,aAAgBX,OAAOpC,SAASgD,OAASZ,OAAOpC,SAASiD,SACzDC,MAAS,CAAC,SAGNL,EAND,GAAAM,OAMmBtB,GANnB,KAAAsB,OAM8BrD,KAAGsD,UAAUtB,IAN3CgB,EAAAX,KAAA,EAQCC,OAAOpC,SAAW6C,EARnB,wBAAAC,EAAAN,SAAAa,GAAAlJ,MAWA,SAAUkH,KAAV,OAAAU,GAAA3K,EAAA4K,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,OACL,OADKmB,EAAAnB,KAAA,EACCQ,aAAU,eAAgBnE,IAD3B,wBAAA8E,EAAAd,SAAAe,GAAApJ,MAIA,SAAUmH,GAAekC,GAAzB,IAAAC,EAAAC,EAAA/H,EAAAgI,EAAA,OAAA5B,GAAA3K,EAAA4K,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OACe,OADfyB,EAAAzB,KAAA,EACqB0B,aAAO,SAAA/G,GAAK,OAAIA,EAAM2G,cAD3C,OAKQ,OAJPA,EADDG,EAAAE,KAGCJ,EAAS,IAAIK,UAAO,CAACC,MAAOP,IAH7BG,EAAAzB,KAAA,EAKctF,aAAK,kBAAM6G,EAAO5B,MAAP,iEAAAqB,OAGCK,EAAY,YAAeA,EAAY,IAAK,GAH7C,8wBALzB,OAgEL,OA3DM7H,EALDiI,EAAAE,KA+CCH,EAAQhI,EAAKsI,OAAO7J,aAAa8J,MAAMvL,IAAI,SAAAyC,GAAI,MAAK,CACxD+I,GAAI/I,EAAK+I,GACTvK,KAAMwB,EAAKxB,KACXwK,cAAehJ,EAAKiJ,cACpBC,YAAalJ,EAAKkJ,YAClBrK,UAAWmB,EAAKnB,UAChBoB,OAAQD,EAAKmJ,iBAAiBL,MAAMvL,IAAI,SAAA6L,GAAI,OAAIA,EAAKC,MAAM7K,OAC3D8K,MAAOtJ,EAAKuJ,WAAWC,WACvBrI,UAAWsI,EAAkBzJ,EAAK0J,gBAAlBD,GAAKA,EAAEjL,MACvBmL,UAAW3J,EAAK2J,UAChBC,WAAY5J,EAAK4J,WACjBjL,IAAKqB,EAAKrB,IACVkL,MAAO7J,EAAK6J,MAAMC,MAClBC,OAAQ/J,EAAK+J,OACbjJ,gBAAiBd,EAAKgK,cAAgBhK,EAAKgK,YAAYC,UAAYjK,EAAKgK,YAAYxL,OANzE,IAAAiL,IAvDRjB,EAAAzB,KAAA,GAgECI,aAAI,CAAClC,KAAM,mBAAoBjG,aAAcuJ,IAhE9C,QAkEa,OAlEbC,EAAAzB,KAAA,GAkEmB0B,aAAO,SAAA/G,GAAK,OAAIA,EAAM1C,aAAakL,SAlEtD,aAAA1B,EAAAE,KAmEWnI,EAAKsI,OAAO7J,aAAawK,YAnEpC,CAAAhB,EAAAzB,KAAA,SAoEH,OApEGyB,EAAAzB,KAAA,GAoEGb,GAAe3F,EAAKsI,OAAO7J,aAAamL,SAAS/B,WApEpD,yBAAAI,EAAApB,SAAAgD,GAAArL,MAwEA,SAAUoH,KAAV,OAAAQ,GAAA3K,EAAA4K,KAAA,SAAAyD,GAAA,cAAAA,EAAAvD,KAAAuD,EAAAtD,MAAA,OACL,OADKsD,EAAAtD,KAAA,EACCQ,aAAU,0BAA2BrB,IADtC,wBAAAmE,EAAAjD,SAAAkD,GAAAvL,MAIA,SAAUqH,KAAV,IAAAiC,EAAArI,EAAAnD,EAAA0D,EAAA,OAAAoG,GAAA3K,EAAA4K,KAAA,SAAA2D,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAxD,MAAA,OACe,OADfwD,EAAAxD,KAAA,EACqB0B,aAAO,SAAA/G,GAAK,OAAIA,EAAM2G,cAD3C,OAaU,OAZTA,EADDkC,EAAA7B,KAGLnC,GAAQiE,aAAa,CACnBvF,KAAM,QACN2D,MAAOP,IAGHrI,EAAO,CACX6J,MAAO,gBACP7J,KAAM,yBAVHuK,EAAAxD,KAAA,EAagBtF,aAAK,kBAAM8E,GAAQkE,MAAMC,QAbzC,UAAA7N,EAAA0N,EAAA7B,KAcc,mBADZnI,EAbF1D,EAaE0D,MACEuJ,MAdJ,CAAAS,EAAAxD,KAAA,SAgBD,OAhBCwD,EAAAzD,KAAA,GAAAyD,EAAAxD,KAAA,GAgBKtF,aAAK,kBAAM8E,GAAQoE,SAASC,kBAAkB5K,KAhBnD,QAAAuK,EAAAxD,KAAA,iBAkBD,OAlBCwD,EAAAzD,KAAA,GAAAyD,EAAAM,GAAAN,EAAA,UAAAA,EAAAxD,KAAA,GAkBKtF,aAAK,kBAAM8E,GAAQoE,SAASG,SAAS9K,KAlB1C,QAqBL,OArBKuK,EAAAxD,KAAA,GAqBCI,aAAI,CAAClC,KAAM,WAAY8F,KAAMxK,IArB9B,QAsBL,OAtBKgK,EAAAxD,KAAA,GAsBCb,KAtBD,yBAAAqE,EAAAnD,SAAA4D,GAAAjM,KAAA,WAyBA,SAAUsH,KAAV,OAAAM,GAAA3K,EAAA4K,KAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,OACL,OADKkE,EAAAlE,KAAA,EACCQ,aAAU,kBAAmBnB,IAD9B,wBAAA6E,EAAA7D,SAAA8D,GAAAnM,MAGQ,SAAUuH,KAAV,OAAAK,GAAA3K,EAAA4K,KAAA,SAAAuE,GAAA,cAAAA,EAAArE,KAAAqE,EAAApE,MAAA,OACb,OADaoE,EAAApE,KAAA,EACPqE,aAAI,CACRpF,KACAC,KACAE,KACAE,OALW,wBAAA8E,EAAA/D,SAAAiE,GAAAtM,oBCvJTuM,GAAe,CACnBnJ,UAAU,GA6BGoJ,GA1BC,WAAkC,IAAjC7J,EAAiC8J,UAAAtB,OAAA,QAAAuB,IAAAD,UAAA,GAAAA,UAAA,GAAzBF,GAAcI,EAAWF,UAAAtB,OAAA,EAAAsB,UAAA,QAAAC,EAChD,OAAOC,EAAOzG,MACZ,IAAK,mBACH,OAAOvI,OAAA2D,EAAA,EAAA3D,CAAA,GACFgF,EADL,CAEE2G,YAAaqD,EAAOxE,aACpB/E,UAAU,IAEd,IAAK,mBACH,OAAOzF,OAAA2D,EAAA,EAAA3D,CAAA,GACFgF,EADL,CAEE1C,aAAatC,OAAAiP,GAAA,EAAAjP,CACPgF,EAAM1C,cAAgB,IADhB+I,OAAArL,OAAAiP,GAAA,EAAAjP,CAEPgP,EAAO1M,iBAGhB,IAAK,WACH,OAAOtC,OAAA2D,EAAA,EAAA3D,CAAA,GACFgF,EADL,CAEEqJ,KAAMW,EAAOX,OAEjB,QACE,OAAOrJ,ICjBPkK,GAAmB5E,OAAO6E,sCAAwCC,KAElEC,GAAiBC,eACjBC,GAAQC,aAAYX,GAASK,GAAiBO,aAAgBJ,MACpEA,GAAeK,IAAIC,IACnBJ,GAAMjH,SAAS,CAACC,KAAM,SAEtBqH,IAASC,OACPxQ,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,CAAUP,MAAOA,IACflQ,EAAAC,EAAAC,cAACwQ,GAAD,OACWC,SAASC,eAAe","file":"static/js/main.c91f00e2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nclass LogIn extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Typography variant=\"display1\">\n          Log in!\n        </Typography>\n        <Typography paragraph={true}>\n          Please log in with GitHub to start organizing your repositories.\n        </Typography>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default LogIn;\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\n// import { connect } from 'react-redux';\nimport { Grid, Table, TableHeaderRow, TableFilterRow, Toolbar, SearchPanel, ColumnChooser, TableColumnVisibility } from '@devexpress/dx-react-grid-material-ui';\nimport { FilteringState, IntegratedFiltering, SearchState, SortingState, IntegratedSorting } from '@devexpress/dx-react-grid';\nimport { DataTypeProvider } from '@devexpress/dx-react-grid';\n\nconst styles = theme => ({});\n\nconst DateTypeProvider = props => (\n  <DataTypeProvider\n    formatterComponent={({value}) => value.toLocaleDateString()}\n    {...props}\n  />\n);\n\nconst LinkTypeProvider = props => (\n  <DataTypeProvider\n    formatterComponent={({value:{href, title}}) => (<a href={href}>{title}</a>)}\n    {...props}\n  />\n);\n\nconst ChipListProvider = props => (\n  <DataTypeProvider\n    formatterComponent={({value}) => (value ? <>\n      {value.map((v) => (<Chip style={{margin: \"3px\"}} key={v} label={v}/>))}\n    </> : null)}\n    {...props}\n  />\n);\n\nconst BooleanTypeProvider = props => (\n  <DataTypeProvider\n    formatterComponent={({value}) => (<Chip label={value ? \"True\" : \"False\"} />)}\n    {...props}\n  />\n);\n\nconst tableColumnExtensions = [\n  { columnName: 'topics', wordWrapEnabled: true },\n  { columnName: 'description', wordWrapEnabled: true },\n];\n\nconst defaultHiddenColumnNames = ['isPrivate', 'isArchived', 'isFork', 'owner', 'licenseNickname'];\n\nclass App extends Component {\n  render() {\n    // const { classes } = this.props;\n    return (\n      <Paper>\n        <Grid\n          columns={[{\n              name: 'name',\n              title: 'Name',\n              getCellValue: row => ({\n                href: row.url,\n                title: row.name\n              })\n          },{\n              name: 'description',\n              title: 'Description'\n          },{\n              name: 'createdAt',\n              title: 'Created At',\n              getCellValue: row => new Date(row.createdAt)\n          },{\n              name: 'topics',\n              title: 'Topics',\n          },{\n              name: 'stars',\n              title: 'Stars'\n          },{\n              name: 'language',\n              title: 'Language'\n          },{\n              name: 'owner',\n              title: 'Owner'\n          },{\n              name: 'isPrivate',\n              title: 'Private',\n          },{\n              name: 'isArchived',\n              title: 'Archived',\n          },{\n              name: 'isFork',\n              title: 'Fork',\n          },{\n              name: 'licenseNickname',\n              title: 'License'\n          }]}\n          rows={this.props.repositories}>\n          <DateTypeProvider\n            for={['createdAt']}\n          />\n          <LinkTypeProvider\n            for={['name']}\n          />\n          <ChipListProvider\n            for={['topics']}\n          />\n          <BooleanTypeProvider\n            for={['isPrivate', 'isArchived', 'isFork']}\n          />\n          <FilteringState\n            defaultFilters={[]}\n          />\n          <SortingState\n            defaultSorting={[]}\n          />\n          <SearchState />\n          <IntegratedFiltering/>\n          <IntegratedSorting/>\n          <Table columnExtensions={tableColumnExtensions}/>\n          <TableHeaderRow showSortingControls />\n          <TableFilterRow showFilterSelector />\n          <TableColumnVisibility defaultHiddenColumnNames={defaultHiddenColumnNames} />\n          <Toolbar/>\n          <SearchPanel />\n          <ColumnChooser />\n        </Grid>\n      </Paper>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","import React from 'react';\nimport { Grid, Table, TableHeaderRow } from '@devexpress/dx-react-grid-material-ui';\nimport {\n    SortingState,\n    IntegratedSorting,\n} from '@devexpress/dx-react-grid';\nimport Paper from '@material-ui/core/Paper';\n\nconst prepareTags = repositories => repositories\n      .flatMap(repo => repo.topics)\n      .reduce((acc, el) => ({\n          ...acc,\n          [el]: acc[el] ? acc[el] + 1 : 1\n      }), {});\n\nexport default (props) => {\n  const tags = prepareTags(props.repositories);\n  const data = Object.entries(tags).map(([key, value]) => ({\n    topicName: key,\n    topicCount: value\n  }));\n  return (<Paper>\n    <Grid\n      columns={[{\n        name: 'topicName',\n        title: 'Topic Name'\n      },{\n        name: 'topicCount',\n        title: 'Topic Count'\n      }]}\n      rows={data}>\n      <SortingState\n        defaultSorting={[{ columnName: 'topicCount', direction: 'desc' }]}\n      />\n      <IntegratedSorting />\n      <Table />\n      <TableHeaderRow showSortingControls />\n    </Grid>\n  </Paper>);\n}\n","import React from 'react';\nimport { Grid, Table, TableHeaderRow } from '@devexpress/dx-react-grid-material-ui';\nimport {\n    SortingState,\n    IntegratedSorting,\n} from '@devexpress/dx-react-grid';\nimport Paper from '@material-ui/core/Paper';\n\nconst prepareTags = repositories => repositories\n      .map(repo => repo.licenseNickname)\n      .reduce((acc, el) => ({\n          ...acc,\n          [el]: acc[el] ? acc[el] + 1 : 1\n      }), {});\n\nexport default (props) => {\n  const tags = prepareTags(props.repositories);\n  const data = Object.entries(tags).map(([key, value]) => ({\n    license: key,\n    licenseCount: value\n  }));\n  return (<Paper>\n    <Grid\n      columns={[{\n        name: 'license',\n        title: 'License'\n      },{\n        name: 'licenseCount',\n        title: 'License Count'\n      }]}\n      rows={data}>\n      <SortingState\n        defaultSorting={[{ columnName: 'licenseCount', direction: 'desc' }]}\n      />\n      <IntegratedSorting />\n      <Table />\n      <TableHeaderRow showSortingControls />\n    </Grid>\n  </Paper>);\n}\n","import React from 'react';\nimport { Grid, Table, TableHeaderRow } from '@devexpress/dx-react-grid-material-ui';\nimport {\n    SortingState,\n    IntegratedSorting,\n} from '@devexpress/dx-react-grid';\nimport Paper from '@material-ui/core/Paper';\n\nconst prepareLanguages = repositories => repositories\n      .map(repo => repo.language)\n      .reduce((acc, el) => ({\n          ...acc,\n          [el]: acc[el] ? acc[el] + 1 : 1\n      }), {});\n\nexport default (props) => {\n  const languages = prepareLanguages(props.repositories);\n  const data = Object.entries(languages).map(([key, value]) => ({\n    language: key,\n    languageCount: value\n  }));\n  return (<Paper>\n    <Grid\n      columns={[{\n        name: 'language',\n        title: 'Language'\n      },{\n        name: 'languageCount',\n        title: 'Count'\n      }]}\n      rows={data}>\n      <SortingState\n        defaultSorting={[{ columnName: 'languageCount', direction: 'desc' }]}\n      />\n      <IntegratedSorting />\n      <Table />\n      <TableHeaderRow showSortingControls />\n    </Grid>\n  </Paper>);\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { connect } from 'react-redux';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport qs from 'query-string';\n\nimport LogIn from './components/LogIn.js';\nimport RepositoryTable from './components/RepositoryTable.js'\nimport Topics from './components/Topics.js'\nimport Licenses from './components/Licenses.js'\nimport Languages from './components/Languages.js'\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto',\n  },\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      drawerOpen: false\n    };\n\n    this.ifLoggedOut = this.ifLoggedOut.bind(this);\n    this.ifLoggedIn = this.ifLoggedIn.bind(this);\n    this.ifRepositories = this.ifRepositories.bind(this);\n  }\n\n  toggleDrawer(value) {\n    this.setState(state => ({\n      ...state,\n      drawerOpen: value ? value : !state.drawerOpen\n    }));\n  }\n\n  ifRepositories(child) {\n    if (this.props.repositories) {\n      return child;\n    }\n    return null\n  }\n\n  ifLoggedOut(child) {\n    if(!this.props.loggedIn) {\n      return child;\n    }\n    return null;\n  }\n\n  ifLoggedIn(child) {\n    if(this.props.loggedIn) {\n      return child;\n    }\n    return null;\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <React.Fragment>\n        <CssBaseline/>\n        <Router>\n        <div className=\"App\">\n          <AppBar>\n            <Toolbar>\n              {this.ifLoggedIn(\n                 <IconButton\n                  className={classes.menuButton}\n                  color=\"inherit\"\n                  aria-label=\"Menu\"\n                  onClick={() => this.toggleDrawer()}\n                      >\n                  <MenuIcon />\n                 </IconButton>\n              )}\n              <Typography variant=\"title\" color=\"inherit\" className={classes.grow}>\n                GitHub Repo Organizer\n              </Typography>\n              {this.ifLoggedOut(\n                 <Button onClick={this.props.startLogIn} color=\"inherit\">Login</Button>\n              )}\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            open={this.state.drawerOpen}\n            onClose={() => this.toggleDrawer(false)}\n          >\n            <div\n              onClick={() => this.toggleDrawer(false)}\n              onKeyDown={() => this.toggleDrawer(false)}>\n              <List>\n                <ListItem button>\n                  <Link to=\"/\">\n                    <ListItemText primary=\"Repositories\" />\n                  </Link>\n                </ListItem>\n                <ListItem button>\n                  <Link to=\"/topics\">\n                    <ListItemText primary=\"Topics\" />\n                  </Link>\n                </ListItem>\n                <ListItem button>\n                  <Link to=\"/licenses\">\n                    <ListItemText primary=\"Licenses\" />\n                  </Link>\n                </ListItem>\n                <ListItem button>\n                  <Link to=\"/languages\">\n                    <ListItemText primary=\"Languages\" />\n                  </Link>\n                </ListItem>\n              </List>\n            </div>\n          </Drawer>\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            {this.ifLoggedOut(<LogIn/>)}\n            {this.ifRepositories(\n            <Switch>\n              <Route\n                  exact\n                  path={process.env.PUBLIC_URL + \"/\"}\n              component={(props) => {\n                  const queryParams = qs.parse(props.location.search);\n                  return (<RepositoryTable\n                    queryParams={queryParams}\n                    repositories={this.props.repositories}/>)\n              }}\n              />\n              <Route exact path={process.env.PUBLIC_URL + \"/topics\"} component={() => (\n                  <Topics repositories={this.props.repositories}/>\n              )}/>\n              <Route exact path={process.env.PUBLIC_URL + \"/licenses\"} component={() => (\n                  <Licenses repositories={this.props.repositories}/>\n              )}/>\n              <Route exact path={process.env.PUBLIC_URL + \"/languages\"} component={() => (\n                  <Languages repositories={this.props.repositories}/>\n              )}/>\n            </Switch>\n            )}\n            </main>\n          </div>\n        </Router>\n      </React.Fragment>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  loggedIn: state.loggedIn,\n  repositories: state.repositories\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  startLogIn: () => dispatch({type: 'START_LOG_IN'}),\n  loadRepositories: () => dispatch({type: 'START_LOAD_REPOSITORIES'}),\n  loadUser: () => dispatch({type: 'START_LOAD_USER'})\n});\n\nexport default\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(withStyles(styles)(App));\n","import {\n  put,\n  takeEvery,\n  all,\n  select,\n  call\n} from 'redux-saga/effects';\nimport qs from 'querystring';\nimport { GitHub } from 'github-graphql-api/dist/github.js';\nimport Octokit from '@octokit/rest';\n\nconst octokit = new Octokit();\n\nconst authURL = 'https://github-auth-backend-hugh.glitch.me/start_auth';\n\nexport function* init() {\n  // get from local storage or get from url\n  const query = qs.parse(window.location.search.substring(1));\n\n  if (query.access_token) {\n    yield put({\n      type: 'SET_ACCESS_TOKEN',\n      access_token: query.access_token\n    });\n    yield startLoadUser();\n  }\n}\n\nexport function* watchInit() {\n  yield takeEvery('INIT', init);\n}\n\nexport function* startLogIn() {\n  const query = {\n    'redirect_uri': window.location.origin + window.location.pathname,\n    'scope': ['repo']\n  };\n\n  const authProxyUrl = `${authURL}?${qs.stringify(query)}`;\n\n  yield window.location = authProxyUrl;\n}\n\nexport function* watchStartLogIn() {\n  yield takeEvery('START_LOG_IN', startLogIn);\n}\n\nexport function* startLoadRepos(endCursor) {\n  const accessToken = yield select(state => state.accessToken);\n\n  const github = new GitHub({token: accessToken});\n\n  const data = yield call(() => github.query(`\n    query {\n      viewer {\n        repositories (first:100${endCursor ? \", after:\\\"\" + endCursor + '\"': ''}) {\n          pageInfo {\n            endCursor\n          }\n          totalCount,\n          nodes {\n            id,\n            name,\n            description,\n            createdAt,\n            repositoryTopics(first:100) {\n              nodes {\n                topic {\n                  id\n                  name\n                }\n              }\n            }\n            stargazers {totalCount},\n            primaryLanguage {\n              name\n            }\n            isPrivate\n            isArchived\n            owner {\n              login\n            }\n            nameWithOwner\n            url\n            isFork\n            licenseInfo {\n              name\n              nickname\n            }\n          }\n        }\n      }\n    }`));\n\n  const repos = data.viewer.repositories.nodes.map(repo => ({\n    id: repo.id,\n    name: repo.name,\n    nameWithOnwer: repo.nameWithOwner,\n    description: repo.description,\n    createdAt: repo.createdAt,\n    topics: repo.repositoryTopics.nodes.map(node => node.topic.name),\n    stars: repo.stargazers.totalCount,\n    language: (l => l && l.name)(repo.primaryLanguage),\n    isPrivate: repo.isPrivate,\n    isArchived: repo.isArchived,\n    url: repo.url,\n    owner: repo.owner.login,\n    isFork: repo.isFork,\n    licenseNickname: repo.licenseInfo && (repo.licenseInfo.nickname || repo.licenseInfo.name)\n  }));\n\n  yield put({type: 'SET_REPOSITORIES', repositories: repos});\n\n  const repoCount = yield select(state => state.repositories.length);\n  if (repoCount < data.viewer.repositories.totalCount) {\n    yield startLoadRepos(data.viewer.repositories.pageInfo.endCursor);\n  }\n}\n\nexport function* watchLoadRepositories() {\n  yield takeEvery('START_LOAD_REPOSITORIES', startLoadRepos);\n}\n\nexport function* startLoadUser() {\n  const accessToken = yield select(state => state.accessToken);\n\n  octokit.authenticate({\n    type: 'oauth',\n    token: accessToken\n  });\n\n  const repo = {\n    owner: 'hughrawlinson',\n    repo: 'github-repo-organizer'\n  };\n\n  const {data} = yield call(() => octokit.users.get());\n  if (data.login !== 'hughrawlinson') {\n    try {\n      yield call(() => octokit.activity.checkStarringRepo(repo));\n    } catch {\n      yield call(() => octokit.activity.starRepo(repo));\n    }\n  }\n  yield put({type: 'SET_USER', user: data});\n  yield startLoadRepos();\n}\n\nexport function* watchLoadUser() {\n  yield takeEvery('START_LOAD_USER', startLoadUser);\n}\nexport default function* rootSaga() {\n  yield all([\n    watchInit(),\n    watchStartLogIn(),\n    watchLoadRepositories(),\n    watchLoadUser()\n  ]);\n}\n","const initialState = {\n  loggedIn: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch(action.type) {\n    case 'SET_ACCESS_TOKEN':\n      return {\n        ...state,\n        accessToken: action.access_token,\n        loggedIn: true\n      };\n    case 'SET_REPOSITORIES':\n      return {\n        ...state,\n        repositories: [\n          ...(state.repositories || []),\n          ...action.repositories\n        ]\n      };\n    case 'SET_USER':\n      return {\n        ...state,\n        user: action.user\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport sagas from './sagas'\nimport { Provider } from 'react-redux';\nimport reducer from './reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(sagaMiddleware)))\nsagaMiddleware.run(sagas);\nstore.dispatch({type: \"INIT\"})\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n"],"sourceRoot":""}