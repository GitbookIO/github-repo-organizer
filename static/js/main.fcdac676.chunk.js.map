{"version":3,"sources":["features/UserLogin/useLogin.tsx","features/UserLogin/LoginStateSwitch.tsx","features/UserLogin/LoginButton.tsx","pages/LogIn.tsx","features/RepositoryTable/DataTypeProviders/DateTypeProvider.tsx","features/RepositoryTable/DataTypeProviders/LinkTypeProvider.tsx","features/RepositoryTable/DataTypeProviders/ChipListProvider.tsx","features/RepositoryTable/DataTypeProviders/ArrayLengthProvider.tsx","features/RepositoryTable/DataTypeProviders/BooleanTypeProvider.tsx","features/RepositoryTable/DataTypeProviders/CheckBoxProvider.tsx","features/RepositoryTable/DataTypeProviders/NumberProvider.tsx","features/useRepositories/gitHubGraphQlQueryResponseType.ts","features/useRepositories/gitHubGraphQlQuery.tsx","features/useRepositories/index.tsx","features/RepositoryTable/index.tsx","pages/Repos.tsx","pages/Topics.tsx","pages/Licenses.tsx","pages/Languages.tsx","features/Routes/index.tsx","features/DrawerMenu/index.tsx","features/TopNav/index.tsx","App.tsx","index.tsx"],"names":["startLoginResult","Octokit","startLogin","query","redirect_uri","window","location","origin","pathname","scope","authProxyUrl","URLSearchParams","assign","useLoginDetails","createLocalStorageStateHook","useLogin","storedLoginDetails","setStoredLoginDetails","useEffect","accessToken","search","get","cancelled","a","octokit","auth","users","getAuthenticated","user","invalidateStoredLogin","LoginStateSwitch","children","selectedLoginState","hasOwnProperty","LoginButton","props","useLoginResult","Button","onClick","LogIn","Fragment","Typography","variant","paragraph","Component","DateTypeProvider","formatterComponent","value","d","Date","toLocaleDateString","availableFilterOperations","LinkTypeProvider","href","title","ChipListProvider","map","v","Chip","style","margin","label","ArrayLengthProvider","length","BooleanTypeProvider","CheckBoxProvider","type","NumberProvider","Type","endCursor","Convert","json","val","JSON","parse","typ","r","transform","jsonToJSProps","stringify","jsToJSONProps","invalidValue","key","Error","undefined","jsonToJS","forEach","p","js","jsToJSON","getProps","transformPrimitive","transformUnion","typs","l","i","_","transformEnum","cases","indexOf","transformArray","Array","isArray","el","transformDate","isNaN","valueOf","transformObject","additional","result","Object","getOwnPropertyNames","prop","prototype","call","ref","typeMap","unionMembers","arrayItems","u","o","name","GitHubRepoQueryResponseType","Data","Viewer","Repositories","RepositoriesNode","Collaborators","CollaboratorsNode","Issues","LicenseInfo","Owner","Age","RepositoryTopics","RepositoryTopicsNode","Topic","VulnerabilityAlerts","VulnerabilityAlertsNode","SecurityVulnerability","Advisory","PageInfo","Location","Name","Login","Message","PathEnum","load","login","graphql","headers","authorization","accept","data","toGitHubRepoQueryResponseType","console","log","repos","viewer","repositories","nodes","repo","id","nameWithOwner","description","createdAt","topics","repositoryTopics","node","topic","stars","stargazers","totalCount","language","primaryLanguage","isPrivate","isArchived","url","owner","isFork","licenseNickname","licenseInfo","nickname","vulnerabilityAlerts","collaborators","filter","collaborator","issueCount","issues","pullRequestCount","pullRequests","useRepositories","useState","setRepositories","tableColumnExtensions","columnName","wordWrapEnabled","defaultVisibleColumns","RepositoryTable","filteringState","setFilteringState","sortingState","setSortingState","searchState","setSearchState","columnVisibilityState","setColumnVisibilityState","Paper","columns","getCellValue","row","rows","for","defaultFilters","filters","onFiltersChange","defaultSorting","sorting","onSortingChange","defaultCurrentPage","pageSize","onValueChange","columnExtensions","predicate","operation","reduce","acc","includes","showSortingControls","showFilterSelector","hiddenColumnNames","onHiddenColumnNamesChange","columnVisibility","ReposPage","tags","flatMap","prepareTags","entries","topicName","topicCount","direction","license","licenseCount","languages","prepareLanguages","languageCount","Router","exact","path","process","component","TopicsPage","LicensesPage","LanguagesPage","DrawerMenuContext","createContext","drawerOpen","toggleDrawer","DrawerMenuWrapper","setDrawerOpen","Provider","newState","DrawerMenuToggleButton","useContext","IconButton","DrawerMenu","Drawer","open","onClose","onKeyDown","List","ListItem","button","to","ListItemText","primary","withStyles","grow","flexGrow","menuButton","marginLeft","marginRight","classes","refreshRepositories","AppBar","Toolbar","className","color","aria-label","theme","root","appBarSpacer","mixins","toolbar","content","padding","spacing","height","overflow","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fcdac676.chunk.js","sourcesContent":["import { Octokit } from \"@octokit/rest\";\nimport { useEffect } from \"react\";\nimport { createLocalStorageStateHook } from \"use-local-storage-state\";\n\nconst authURL = \"https://github-auth-backend-hugh.glitch.me/start_auth\";\n\nexport type UnauthorizedUseLogin = {\n  startLogin: () => any;\n};\n\n// function isUnauthorizedUseLogin(login: unknown): login is UnauthorizedUseLogin {\n//   return (login as UnauthorizedUseLogin).startLogin !== undefined;\n// }\n\nconst octokit_outside = new Octokit();\n\n// type Await<T> = T extends {\n//   then(onfulfilled?: (value: infer U) => unknown): unknown;\n// }\n//   ? U\n//   : T;\n\ntype LoginDetails = {\n  accessToken: string;\n  // user: Await<ReturnType<typeof octokit_outside.users.getAuthenticated>>;\n  user: any;\n};\n\nexport type AuthorizedUseLogin = LoginDetails & {\n  invalidateStoredLogin: () => any;\n};\n\n// function isAuthorizedUseLogin(login: unknown): login is AuthorizedUseLogin {\n//   return typeof (login as AuthorizedUseLogin).accessToken === \"string\";\n// }\n\nexport type UseLogin = UnauthorizedUseLogin | AuthorizedUseLogin;\n\nconst startLoginResult = {\n  startLogin: function startLogin() {\n    const query = {\n      redirect_uri: window.location.origin + window.location.pathname,\n      scope: \"repo\",\n    };\n\n    const authProxyUrl = `${authURL}?${new URLSearchParams(query)}`;\n\n    window.location.assign(authProxyUrl);\n  },\n};\n\nconst useLoginDetails = createLocalStorageStateHook<LoginDetails | null>(\n  \"LoginDetails\",\n  null\n);\n\nexport function useLogin(): UseLogin {\n  const [storedLoginDetails, setStoredLoginDetails] = useLoginDetails();\n\n  useEffect(() => {\n    if (!storedLoginDetails) {\n      const query = new URLSearchParams(window.location.search);\n      const accessToken = query.get(\"access_token\");\n      if (accessToken) {\n        let cancelled = false;\n        (async () => {\n          const octokit = new Octokit({\n            auth: `token ${accessToken}`,\n          });\n          const user = await octokit.users.getAuthenticated();\n          if (!cancelled) {\n            setStoredLoginDetails({\n              accessToken,\n              user,\n            });\n          }\n        })();\n        return () => {\n          cancelled = true;\n        };\n      }\n    }\n  }, [setStoredLoginDetails, Octokit]);\n\n  if (storedLoginDetails) {\n    return {\n      ...storedLoginDetails,\n      invalidateStoredLogin: function () {\n        setStoredLoginDetails(null);\n      },\n    };\n  }\n\n  return startLoginResult;\n}\n\n// export { isUnauthorizedUseLogin, isAuthorizedUseLogin };\n","import { ReactNode } from \"react\";\nimport { useLogin } from \"./useLogin\";\n\ntype LoginStateSwitchProps = {\n  children: ReactNode;\n  selectedLoginState: boolean;\n};\n\nexport default function LoginStateSwitch({\n  children,\n  selectedLoginState,\n}: LoginStateSwitchProps) {\n  const login: any = useLogin();\n\n  // const loggedIn = isAuthorizedUseLogin(login);\n  const loggedIn = login.hasOwnProperty(\"accessToken\");\n\n  if (loggedIn === selectedLoginState) {\n    return <>{children}</>;\n  }\n\n  return null;\n}\n","import { Button } from \"@material-ui/core\";\nimport { ComponentProps } from \"react\";\nimport LoginStateSwitch from \"./LoginStateSwitch\";\nimport { useLogin } from \"./useLogin\";\n\nexport default function LoginButton(props: ComponentProps<typeof Button>) {\n  const useLoginResult: any = useLogin();\n  // if (isAuthorizedUseLogin(useLoginResult)) {\n  //   return null;\n  // }\n  if (useLoginResult.hasOwnProperty(\"accessToken\")) {\n    return null;\n  }\n  return (\n    <LoginStateSwitch selectedLoginState={false}>\n      <Button onClick={() => useLoginResult.startLogin()} {...props}>\n        Login\n      </Button>\n    </LoginStateSwitch>\n  );\n}\n","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nclass LogIn extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Typography variant=\"h1\">Log in!</Typography>\n        <Typography paragraph={true}>\n          Please log in with GitHub to start organizing your repositories.\n        </Typography>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default LogIn;\n","import { DataTypeProvider } from \"@devexpress/dx-react-grid\";\n\nexport default function DateTypeProvider(\n  props: React.ComponentProps<typeof DataTypeProvider>\n) {\n  return (\n    <DataTypeProvider\n      formatterComponent={({ value }) => {\n        // TODO: the type from quicktype should handle this, not sure why it's like this.\n        const d = new Date(value);\n        return <>{d.toLocaleDateString()}</>;\n      }}\n      availableFilterOperations={[\n        \"contains\",\n        \"greaterThan\",\n        \"lessThan\",\n        \"greaterThanOrEqual\",\n        \"lessThanOrEqual\",\n      ]}\n      {...props}\n    />\n  );\n}\n","import { DataTypeProvider } from \"@devexpress/dx-react-grid\";\n\nexport default function LinkTypeProvider(\n  props: React.ComponentProps<typeof DataTypeProvider>\n) {\n  return (\n    <DataTypeProvider\n      formatterComponent={({ value: { href, title } }) => (\n        <a href={href}>{title}</a>\n      )}\n      {...props}\n    />\n  );\n}\n","import { DataTypeProvider } from \"@devexpress/dx-react-grid\";\nimport { Chip } from \"@material-ui/core\";\n\nexport default function ChipListProvider(\n  props: React.ComponentProps<typeof DataTypeProvider>\n) {\n  return (\n    <DataTypeProvider\n      formatterComponent={({ value }: { value: string[] }) =>\n        value ? (\n          <>\n            {value.map((v) => (\n              <Chip style={{ margin: \"3px\" }} key={v} label={v} />\n            ))}\n          </>\n        ) : null\n      }\n      availableFilterOperations={['search', 'empty']}\n      {...props}\n    />\n  );\n}\n","import { DataTypeProvider } from \"@devexpress/dx-react-grid\";\n\nexport default function ArrayLengthProvider(\n  props: React.ComponentProps<typeof DataTypeProvider>\n) {\n  return (\n    <DataTypeProvider\n      formatterComponent={({ value }) => value.length}\n      {...props}\n    />\n  );\n}\n","import { DataTypeProvider } from \"@devexpress/dx-react-grid\";\nimport { Chip } from \"@material-ui/core\";\n\nexport default function BooleanTypeProvider(\n  props: React.ComponentProps<typeof DataTypeProvider>\n) {\n  return (\n    <DataTypeProvider\n      formatterComponent={({ value }) => (\n        <Chip label={value ? \"True\" : \"False\"} />\n      )}\n      {...props}\n    />\n  );\n}\n","import { DataTypeProvider } from \"@devexpress/dx-react-grid\";\n\nexport default function CheckBoxProvider(\n  props: React.ComponentProps<typeof DataTypeProvider>\n) {\n  return (\n    <DataTypeProvider\n      formatterComponent={({ value }) => (\n        <input type=\"checkbox\" value={value} />\n      )}\n      {...props}\n    />\n  );\n}\n","import { DataTypeProvider } from \"@devexpress/dx-react-grid\";\n\nexport default function NumberProvider(\n  props: React.ComponentProps<typeof DataTypeProvider>\n) {\n  return (\n    <DataTypeProvider\n      availableFilterOperations={[\n        \"equal\",\n        \"greaterThan\",\n        \"lessThan\",\n        \"greaterThanOrEqual\",\n        \"lessThanOrEqual\",\n      ]}\n      {...props}\n    />\n  );\n}\n","// To parse this data:\n//\n//   import { Convert, GitHubRepoQueryResponseType } from \"./file\";\n//\n//   const gitHubRepoQueryResponseType = Convert.toGitHubRepoQueryResponseType(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nexport interface GitHubRepoQueryResponseType {\n  data: Data;\n  errors: Error[];\n}\n\nexport interface Data {\n  viewer: Viewer;\n}\n\nexport interface Viewer {\n  repositories: Repositories;\n}\n\nexport interface Repositories {\n  pageInfo: PageInfo;\n  totalCount: number;\n  nodes: RepositoriesNode[];\n}\n\nexport interface RepositoriesNode {\n  id: string;\n  description: null | string;\n  name: string;\n  createdAt: Date;\n  repositoryTopics: RepositoryTopics;\n  stargazers: Issues;\n  primaryLanguage: Age | null;\n  isPrivate: boolean;\n  isArchived: boolean;\n  issues: Issues;\n  pullRequests: Issues;\n  owner: Owner;\n  nameWithOwner: string;\n  url: string;\n  isFork: boolean;\n  licenseInfo: LicenseInfo | null;\n  vulnerabilityAlerts: VulnerabilityAlerts;\n  collaborators: Collaborators | null;\n}\n\nexport interface Collaborators {\n  nodes: CollaboratorsNode[];\n}\n\nexport interface CollaboratorsNode {\n  name: string | null;\n  login: string;\n}\n\nexport interface Issues {\n  totalCount: number;\n}\n\nexport interface LicenseInfo {\n  name: string;\n  nickname: null | string;\n}\n\nexport interface Owner {\n  login: string;\n}\n\nexport interface Age {\n  name: string;\n}\n\nexport interface RepositoryTopics {\n  nodes: RepositoryTopicsNode[];\n}\n\nexport interface RepositoryTopicsNode {\n  topic: Topic;\n}\n\nexport interface Topic {\n  id: string;\n  name: string;\n}\n\nexport interface VulnerabilityAlerts {\n  nodes: VulnerabilityAlertsNode[];\n}\n\nexport interface VulnerabilityAlertsNode {\n  securityVulnerability: SecurityVulnerability;\n}\n\nexport interface SecurityVulnerability {\n  package: Age;\n  advisory: Advisory;\n}\n\nexport interface Advisory {\n  description: string;\n  summary: string;\n}\n\nexport interface PageInfo {\n  endCursor: string;\n}\n\nexport interface Error {\n  type: Type;\n  path: Array<string | number>;\n  locations: Location[];\n  message: ErrorMessage;\n}\n\nexport interface Location {\n  line: number;\n  column: number;\n}\n\nexport type ErrorMessage = string;\n\nexport enum Type {\n  Forbidden = \"FORBIDDEN\",\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n  static toGitHubRepoQueryResponseType(\n    json: string\n  ): GitHubRepoQueryResponseType {\n    return cast(JSON.parse(json), r(\"GitHubRepoQueryResponseType\"));\n  }\n\n  static gitHubRepoQueryResponseTypeToJson(\n    value: GitHubRepoQueryResponseType\n  ): string {\n    return JSON.stringify(\n      uncast(value, r(\"GitHubRepoQueryResponseType\")),\n      null,\n      2\n    );\n  }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = \"\"): never {\n  if (key) {\n    throw Error(\n      `Invalid value for key \"${key}\". Expected type ${JSON.stringify(\n        typ\n      )} but got ${JSON.stringify(val)}`\n    );\n  }\n  throw Error(\n    `Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`\n  );\n}\n\nfunction jsonToJSProps(typ: any): any {\n  if (typ.jsonToJS === undefined) {\n    const map: any = {};\n    typ.props.forEach((p: any) => (map[p.json] = { key: p.js, typ: p.typ }));\n    typ.jsonToJS = map;\n  }\n  return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n  if (typ.jsToJSON === undefined) {\n    const map: any = {};\n    typ.props.forEach((p: any) => (map[p.js] = { key: p.json, typ: p.typ }));\n    typ.jsToJSON = map;\n  }\n  return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = \"\"): any {\n  function transformPrimitive(typ: string, val: any): any {\n    if (typeof typ === typeof val) return val;\n    return invalidValue(typ, val, key);\n  }\n\n  function transformUnion(typs: any[], val: any): any {\n    // val must validate against one typ in typs\n    const l = typs.length;\n    for (let i = 0; i < l; i++) {\n      const typ = typs[i];\n      try {\n        return transform(val, typ, getProps);\n      } catch (_) {}\n    }\n    return invalidValue(typs, val);\n  }\n\n  function transformEnum(cases: string[], val: any): any {\n    if (cases.indexOf(val) !== -1) return val;\n    return invalidValue(cases, val);\n  }\n\n  function transformArray(typ: any, val: any): any {\n    // val must be an array with no invalid elements\n    if (!Array.isArray(val)) return invalidValue(\"array\", val);\n    return val.map((el) => transform(el, typ, getProps));\n  }\n\n  function transformDate(val: any): any {\n    if (val === null) {\n      return null;\n    }\n    const d = new Date(val);\n    if (isNaN(d.valueOf())) {\n      return invalidValue(\"Date\", val);\n    }\n    return d;\n  }\n\n  function transformObject(\n    props: { [k: string]: any },\n    additional: any,\n    val: any\n  ): any {\n    if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n      return invalidValue(\"object\", val);\n    }\n    const result: any = {};\n    Object.getOwnPropertyNames(props).forEach((key) => {\n      const prop = props[key];\n      const v = Object.prototype.hasOwnProperty.call(val, key)\n        ? val[key]\n        : undefined;\n      result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n    });\n    Object.getOwnPropertyNames(val).forEach((key) => {\n      if (!Object.prototype.hasOwnProperty.call(props, key)) {\n        result[key] = transform(val[key], additional, getProps, key);\n      }\n    });\n    return result;\n  }\n\n  if (typ === \"any\") return val;\n  if (typ === null) {\n    if (val === null) return val;\n    return invalidValue(typ, val);\n  }\n  if (typ === false) return invalidValue(typ, val);\n  while (typeof typ === \"object\" && typ.ref !== undefined) {\n    typ = typeMap[typ.ref];\n  }\n  if (Array.isArray(typ)) return transformEnum(typ, val);\n  if (typeof typ === \"object\") {\n    return typ.hasOwnProperty(\"unionMembers\")\n      ? transformUnion(typ.unionMembers, val)\n      : typ.hasOwnProperty(\"arrayItems\")\n      ? transformArray(typ.arrayItems, val)\n      : typ.hasOwnProperty(\"props\")\n      ? transformObject(getProps(typ), typ.additional, val)\n      : invalidValue(typ, val);\n  }\n  // Numbers can be parsed by Date but shouldn't be.\n  if (typ === Date && typeof val !== \"number\") return transformDate(val);\n  return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n  return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n  return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n  return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n  return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n  return { props, additional };\n}\n\nfunction m(additional: any) {\n  return { props: [], additional };\n}\n\nfunction r(name: string) {\n  return { ref: name };\n}\n\nconst typeMap: any = {\n  GitHubRepoQueryResponseType: o(\n    [\n      { json: \"data\", js: \"data\", typ: r(\"Data\") },\n      { json: \"errors\", js: \"errors\", typ: a(r(\"Error\")) },\n    ],\n    false\n  ),\n  Data: o([{ json: \"viewer\", js: \"viewer\", typ: r(\"Viewer\") }], false),\n  Viewer: o(\n    [{ json: \"repositories\", js: \"repositories\", typ: r(\"Repositories\") }],\n    false\n  ),\n  Repositories: o(\n    [\n      { json: \"pageInfo\", js: \"pageInfo\", typ: r(\"PageInfo\") },\n      { json: \"totalCount\", js: \"totalCount\", typ: 0 },\n      { json: \"nodes\", js: \"nodes\", typ: a(r(\"RepositoriesNode\")) },\n    ],\n    false\n  ),\n  RepositoriesNode: o(\n    [\n      { json: \"id\", js: \"id\", typ: \"\" },\n      { json: \"description\", js: \"description\", typ: u(null, \"\") },\n      { json: \"name\", js: \"name\", typ: \"\" },\n      { json: \"createdAt\", js: \"createdAt\", typ: Date },\n      {\n        json: \"repositoryTopics\",\n        js: \"repositoryTopics\",\n        typ: r(\"RepositoryTopics\"),\n      },\n      { json: \"stargazers\", js: \"stargazers\", typ: r(\"Issues\") },\n      {\n        json: \"primaryLanguage\",\n        js: \"primaryLanguage\",\n        typ: u(r(\"Age\"), null),\n      },\n      { json: \"isPrivate\", js: \"isPrivate\", typ: true },\n      { json: \"isArchived\", js: \"isArchived\", typ: true },\n      { json: \"issues\", js: \"issues\", typ: r(\"Issues\") },\n      { json: \"pullRequests\", js: \"pullRequests\", typ: r(\"Issues\") },\n      { json: \"owner\", js: \"owner\", typ: r(\"Owner\") },\n      { json: \"nameWithOwner\", js: \"nameWithOwner\", typ: \"\" },\n      { json: \"url\", js: \"url\", typ: \"\" },\n      { json: \"isFork\", js: \"isFork\", typ: true },\n      {\n        json: \"licenseInfo\",\n        js: \"licenseInfo\",\n        typ: u(r(\"LicenseInfo\"), null),\n      },\n      {\n        json: \"vulnerabilityAlerts\",\n        js: \"vulnerabilityAlerts\",\n        typ: r(\"VulnerabilityAlerts\"),\n      },\n      {\n        json: \"collaborators\",\n        js: \"collaborators\",\n        typ: u(r(\"Collaborators\"), null),\n      },\n    ],\n    false\n  ),\n  Collaborators: o(\n    [{ json: \"nodes\", js: \"nodes\", typ: a(r(\"CollaboratorsNode\")) }],\n    false\n  ),\n  CollaboratorsNode: o(\n    [\n      { json: \"name\", js: \"name\", typ: u(r(\"Name\"), null) },\n      { json: \"login\", js: \"login\", typ: \"\" },\n    ],\n    false\n  ),\n  Issues: o([{ json: \"totalCount\", js: \"totalCount\", typ: 0 }], false),\n  LicenseInfo: o(\n    [\n      { json: \"name\", js: \"name\", typ: \"\" },\n      { json: \"nickname\", js: \"nickname\", typ: u(null, \"\") },\n    ],\n    false\n  ),\n  Owner: o([{ json: \"login\", js: \"login\", typ: r(\"Login\") }], false),\n  Age: o([{ json: \"name\", js: \"name\", typ: \"\" }], false),\n  RepositoryTopics: o(\n    [{ json: \"nodes\", js: \"nodes\", typ: a(r(\"RepositoryTopicsNode\")) }],\n    false\n  ),\n  RepositoryTopicsNode: o(\n    [{ json: \"topic\", js: \"topic\", typ: r(\"Topic\") }],\n    false\n  ),\n  Topic: o(\n    [\n      { json: \"id\", js: \"id\", typ: \"\" },\n      { json: \"name\", js: \"name\", typ: \"\" },\n    ],\n    false\n  ),\n  VulnerabilityAlerts: o(\n    [{ json: \"nodes\", js: \"nodes\", typ: a(r(\"VulnerabilityAlertsNode\")) }],\n    false\n  ),\n  VulnerabilityAlertsNode: o(\n    [\n      {\n        json: \"securityVulnerability\",\n        js: \"securityVulnerability\",\n        typ: r(\"SecurityVulnerability\"),\n      },\n    ],\n    false\n  ),\n  SecurityVulnerability: o(\n    [\n      { json: \"package\", js: \"package\", typ: r(\"Age\") },\n      { json: \"advisory\", js: \"advisory\", typ: r(\"Advisory\") },\n    ],\n    false\n  ),\n  Advisory: o(\n    [\n      { json: \"description\", js: \"description\", typ: \"\" },\n      { json: \"summary\", js: \"summary\", typ: \"\" },\n    ],\n    false\n  ),\n  PageInfo: o([{ json: \"endCursor\", js: \"endCursor\", typ: \"\" }], false),\n  Error: o(\n    [\n      { json: \"type\", js: \"type\", typ: r(\"Type\") },\n      { json: \"path\", js: \"path\", typ: a(u(r(\"PathEnum\"), 0)) },\n      { json: \"locations\", js: \"locations\", typ: a(r(\"Location\")) },\n      { json: \"message\", js: \"message\", typ: r(\"Message\") },\n    ],\n    false\n  ),\n  Location: o(\n    [\n      { json: \"line\", js: \"line\", typ: 0 },\n      { json: \"column\", js: \"column\", typ: 0 },\n    ],\n    false\n  ),\n  Name: [\n    \"Axel Samuelsson\",\n    \"Edward Knapp\",\n    \"Hugh Rawlinson\",\n    \"Joe \",\n    \"Lonney\",\n    \"Maria Katsourani\",\n    \"Max Sandelin\",\n    \"Naomi Pentrel\",\n    \"Nevo Segal\",\n  ],\n  Login: [\n    \"hughrawlinson\",\n    \"joenash\",\n    \"limbero\",\n    \"meyda\",\n    \"nevosegal\",\n    \"spotify\",\n    \"themaxsandelin\",\n  ],\n  Message: [\"Must have push access to view repository collaborators.\"],\n  PathEnum: [\"collaborators\", \"nodes\", \"repositories\", \"viewer\"],\n  Type: [\"FORBIDDEN\"],\n};\n","const query = (endCursor: string) => `query {\n    viewer {\n      repositories (first:40${endCursor ? ', after:\"' + endCursor + '\"' : \"\"}) {\n        pageInfo {\n          endCursor\n        }\n        totalCount\n        nodes {\n          id\n          name\n          description\n          createdAt\n          stargazers {\n            totalCount\n          }\n          primaryLanguage {\n            name\n          }\n          isPrivate\n          isArchived\n          issues (states: OPEN) {\n            totalCount\n          }\n          pullRequests (states: OPEN) {\n            totalCount\n          }\n          owner {\n            login\n          }\n          nameWithOwner\n          url\n          isFork\n          licenseInfo {\n            name\n            nickname\n          }\n          vulnerabilityAlerts (first:50){\n            nodes {\n              securityVulnerability {\n                package {\n                  name\n                }\n                advisory {\n                  description\n                  summary\n                }\n              }\n            }\n          }\n          collaborators (first: 50){\n            nodes {\n              name\n              login\n            }\n          }\n        repositoryTopics(first:100) {\n          nodes {\n            topic {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nexport default query;\n","import { useEffect, useState } from \"react\";\nimport { useLogin } from \"../UserLogin\";\nimport { graphql } from \"@octokit/graphql\";\nimport query from \"./gitHubGraphQlQuery\";\nimport { Convert, Data } from \"./gitHubGraphQlQueryResponseType\";\nimport { Repository } from \"../RepositoryTable\";\n\nasync function load(\n  accessToken: string,\n  login: string,\n  endCursor?: string\n): Promise<[Repository[], number]> {\n  let data: Data;\n  try {\n    const result = await graphql<Data>({\n      query: query(endCursor ?? \"\"),\n      headers: {\n        authorization: `token ${accessToken}`,\n        accept: \"application/vnd.github.vixen-preview+json\",\n      },\n    });\n    data = Convert.toGitHubRepoQueryResponseType(`{ data: ${result} }`).data;\n  } catch (error) {\n    console.log(error);\n    data = error.data;\n  }\n\n  const repos: Repository[] = data.viewer.repositories.nodes.map((repo) => ({\n    id: repo.id,\n    name: repo.name,\n    nameWithOwner: repo.nameWithOwner,\n    description: repo.description,\n    createdAt: repo.createdAt,\n    topics: repo.repositoryTopics.nodes.map((node) => node.topic.name),\n    stars: repo.stargazers.totalCount,\n    language: ((l) => l && l.name)(repo.primaryLanguage),\n    isPrivate: repo.isPrivate,\n    isArchived: repo.isArchived,\n    url: repo.url,\n    owner: repo.owner.login,\n    isFork: repo.isFork,\n    licenseNickname:\n      repo.licenseInfo && (repo.licenseInfo.nickname || repo.licenseInfo.name),\n    vulnerabilityAlerts: repo.vulnerabilityAlerts.nodes,\n    collaborators:\n      repo.collaborators &&\n      repo.collaborators.nodes\n        .filter((a) => a.login !== login)\n        .map((collaborator) => collaborator.login),\n    issueCount: repo.issues.totalCount,\n    pullRequestCount: repo.pullRequests.totalCount,\n  }));\n\n  return [repos, data.viewer.repositories.totalCount];\n}\n\nexport function useRepositories(): [Repository[], () => any] {\n  const login: any = useLogin();\n  const [repositories, setRepositories] = useState<Repository[]>([]);\n  useEffect(() => {\n    let cancelled = false;\n    (async () => {\n      if (login.hasOwnProperty(\"accessToken\")) {\n        const [repos, totalCount] = await load(\n          login.accessToken,\n          login.user.login\n        );\n\n        // if (repos.length < totalCount) {\n        //   yield startLoadRepos(\n        //     data.viewer.repositories.pageInfo.endCursor,\n        //     action\n        //   );\n        // }\n        if (!cancelled) {\n          setRepositories(repos);\n        }\n      }\n    })();\n    return () => {\n      cancelled = true;\n    };\n  }, []);\n  return [repositories, () => setRepositories([])];\n}\n","import Paper from \"@material-ui/core/Paper\";\nimport {\n  Grid,\n  Table,\n  TableHeaderRow,\n  TableFilterRow,\n  Toolbar,\n  SearchPanel,\n  ColumnChooser,\n  TableColumnVisibility,\n  PagingPanel,\n} from \"@devexpress/dx-react-grid-material-ui\";\nimport {\n  FilteringState,\n  IntegratedFiltering,\n  SearchState,\n  SortingState,\n  IntegratedSorting,\n  PagingState,\n  IntegratedPaging,\n  Filter,\n  Sorting,\n} from \"@devexpress/dx-react-grid\";\nimport {\n  ChipListProvider,\n  DateTypeProvider,\n  LinkTypeProvider,\n  ArrayLengthProvider,\n  BooleanTypeProvider,\n  CheckBoxProvider,\n} from \"./DataTypeProviders\";\nimport NumberProvider from \"./DataTypeProviders/NumberProvider\";\nimport { useState } from \"react\";\nimport { useLogin } from \"../UserLogin\";\nimport { useRepositories } from \"../useRepositories\";\n\nconst tableColumnExtensions = [\n  { columnName: \"topics\", wordWrapEnabled: true },\n  { columnName: \"description\", wordWrapEnabled: true },\n];\n\nexport type Repository = {\n  id: string;\n  name: string;\n  nameWithOwner: string;\n  description: string | null;\n  createdAt: Date;\n  topics: string[];\n  stars: number;\n  language: string | null;\n  isPrivate: boolean;\n  isArchived: boolean;\n  url: string;\n  owner: string;\n  isFork: boolean;\n  licenseNickname: string | null;\n  vulnerabilityAlerts: unknown[];\n  collaborators: string[] | null;\n  issueCount: number;\n  pullRequestCount: number;\n};\n\nconst defaultVisibleColumns = [\n  \"isPrivate\",\n  \"isArchived\",\n  \"isFork\",\n  \"owner\",\n  \"licenseNickname\",\n  \"vulnerabilityAlerts\",\n  \"collaborators\",\n  \"issueCount\",\n];\n\nexport default function RepositoryTable() {\n  const [filteringState, setFilteringState] = useState<Filter[]>([]);\n  const [sortingState, setSortingState] = useState<Sorting[]>([]);\n  const [searchState, setSearchState] = useState<string>(\"\");\n  const [columnVisibilityState, setColumnVisibilityState] = useState<string[]>(\n    defaultVisibleColumns\n  );\n  const [repositories] = useRepositories();\n\n  return (\n    <Paper>\n      <Grid\n        columns={[\n          {\n            name: \"selected\",\n            title: \"Selected\",\n            getCellValue: (row) => false,\n          },\n          {\n            name: \"name\",\n            title: \"Name\",\n            getCellValue: (row) => ({\n              href: row.url,\n              title: row.name,\n            }),\n          },\n          {\n            name: \"description\",\n            title: \"Description\",\n          },\n          {\n            name: \"createdAt\",\n            title: \"Created At\",\n          },\n          {\n            name: \"topics\",\n            title: \"Topics\",\n          },\n          {\n            name: \"stars\",\n            title: \"Stars\",\n          },\n          {\n            name: \"language\",\n            title: \"Language\",\n          },\n          {\n            name: \"owner\",\n            title: \"Owner\",\n          },\n          {\n            name: \"isPrivate\",\n            title: \"Private\",\n          },\n          {\n            name: \"isArchived\",\n            title: \"Archived\",\n          },\n          {\n            name: \"isFork\",\n            title: \"Fork\",\n          },\n          {\n            name: \"licenseNickname\",\n            title: \"License\",\n          },\n          {\n            name: \"vulnerabilityAlerts\",\n            title: \"Vulnerability Alerts\",\n          },\n          {\n            name: \"collaborators\",\n            title: \"Collaborators\",\n          },\n          {\n            name: \"issueCount\",\n            title: \"Open Issue Count\",\n          },\n          {\n            name: \"pullRequestCount\",\n            title: \"Open Pull Request Count\",\n          },\n        ]}\n        rows={repositories}\n      >\n        <DateTypeProvider for={[\"createdAt\"]} />\n        <LinkTypeProvider for={[\"name\"]} />\n        <ChipListProvider for={[\"topics\", \"collaborators\"]} />\n        <BooleanTypeProvider for={[\"isPrivate\", \"isArchived\", \"isFork\"]} />\n        <ArrayLengthProvider for={[\"vulnerabilityAlerts\"]} />\n        <CheckBoxProvider for={[\"selected\"]} />\n        <NumberProvider for={[\"stars\", \"pullRequestCount\", \"issueCount\"]} />\n        <FilteringState\n          defaultFilters={[]}\n          filters={filteringState}\n          onFiltersChange={(filters) => setFilteringState(filters)}\n        />\n        <SortingState\n          defaultSorting={[]}\n          sorting={sortingState}\n          onSortingChange={(sorting) => setSortingState(sorting)}\n        />\n        <PagingState defaultCurrentPage={0} pageSize={40} />\n        <SearchState\n          value={searchState}\n          onValueChange={(search) => setSearchState(search)}\n        />\n        <IntegratedFiltering\n          columnExtensions={[\n            {\n              columnName: \"topics\",\n              predicate: (_, filter, row) =>\n                filter.operation === \"empty\"\n                  ? row.topics.length === 0\n                  : row.topics.reduce(\n                      (acc: boolean, el: string) =>\n                        (filter.value && el.includes(filter.value)) || acc,\n                      false\n                    ),\n            },\n            {\n              columnName: \"collaborators\",\n              predicate: (_, filter, row) =>\n                filter.operation === \"empty\"\n                  ? row.collaborators.length === 0\n                  : row.collaborators?.reduce(\n                      (acc: boolean, el: string) =>\n                        (filter.value && el.includes(filter.value)) || acc,\n                      false\n                    ),\n            },\n          ]}\n        />\n        <IntegratedSorting />\n        <IntegratedPaging />\n        <Table columnExtensions={tableColumnExtensions} />\n        <TableHeaderRow showSortingControls />\n        <TableFilterRow showFilterSelector />\n        <TableColumnVisibility\n          hiddenColumnNames={columnVisibilityState}\n          onHiddenColumnNamesChange={(columnVisibility) =>\n            setColumnVisibilityState(columnVisibility)\n          }\n        />\n        <Toolbar />\n        <SearchPanel />\n        <ColumnChooser />\n        <PagingPanel />\n      </Grid>\n    </Paper>\n  );\n}\n","import RepositoryTable from \"../features/RepositoryTable\";\n\nexport default function ReposPage() {\n  return (\n    <>\n      <RepositoryTable />\n    </>\n  );\n}\n","import {\n  Grid,\n  Table,\n  TableHeaderRow,\n} from \"@devexpress/dx-react-grid-material-ui\";\nimport { SortingState, IntegratedSorting } from \"@devexpress/dx-react-grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useRepositories } from \"../features/useRepositories\";\n\ninterface Repository {\n  topics: string[];\n}\n\nconst prepareTags = (repositories: Repository[]) => {\n  const emptyAccumulator: { [key: string]: number } = {};\n  return repositories\n    .flatMap((repo) => repo.topics)\n    .reduce(\n      (acc, el) => ({\n        ...acc,\n        [el]: acc[el] ? acc[el] + 1 : 1,\n      }),\n      emptyAccumulator\n    );\n};\n\nexport default () => {\n  const [repositories] = useRepositories();\n  if (!repositories) {\n    return <p>Loading</p>;\n  }\n  const tags = prepareTags(repositories);\n  const data = Object.entries(tags).map(([key, value]) => ({\n    topicName: key,\n    topicCount: value,\n  }));\n  return (\n    <Paper>\n      <Grid\n        columns={[\n          {\n            name: \"topicName\",\n            title: \"Topic Name\",\n          },\n          {\n            name: \"topicCount\",\n            title: \"Topic Count\",\n          },\n        ]}\n        rows={data}\n      >\n        <SortingState\n          defaultSorting={[{ columnName: \"topicCount\", direction: \"desc\" }]}\n        />\n        <IntegratedSorting />\n        <Table />\n        <TableHeaderRow showSortingControls />\n      </Grid>\n    </Paper>\n  );\n};\n","import {\n  Grid,\n  Table,\n  TableHeaderRow,\n} from \"@devexpress/dx-react-grid-material-ui\";\nimport { SortingState, IntegratedSorting } from \"@devexpress/dx-react-grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useRepositories } from \"../features/useRepositories\";\n\ninterface Repository {\n  licenseNickname: string | null;\n}\n\nconst prepareTags = (repositories: Repository[]) => {\n  const emptyAccumulator: { [key: string]: number } = {};\n  return repositories\n    .map((repo) => repo.licenseNickname)\n    .reduce(\n      (acc, el) => ({\n        ...acc,\n        [el || \"null\"]: acc[el || \"null\"] ? acc[el || \"null\"] + 1 : 1,\n      }),\n      emptyAccumulator\n    );\n};\n\ntype LicensesProps = {\n  repositories?: Repository[];\n};\n\nexport default () => {\n  const [repositories] = useRepositories();\n  const tags = prepareTags(repositories);\n  const data = Object.entries(tags).map(([key, value]) => ({\n    license: key,\n    licenseCount: value,\n  }));\n  return (\n    <Paper>\n      <Grid\n        columns={[\n          {\n            name: \"license\",\n            title: \"License\",\n          },\n          {\n            name: \"licenseCount\",\n            title: \"License Count\",\n          },\n        ]}\n        rows={data}\n      >\n        <SortingState\n          defaultSorting={[{ columnName: \"licenseCount\", direction: \"desc\" }]}\n        />\n        <IntegratedSorting />\n        <Table />\n        <TableHeaderRow showSortingControls />\n      </Grid>\n    </Paper>\n  );\n};\n","import {\n  Grid,\n  Table,\n  TableHeaderRow,\n} from \"@devexpress/dx-react-grid-material-ui\";\nimport { SortingState, IntegratedSorting } from \"@devexpress/dx-react-grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useRepositories } from \"../features/useRepositories\";\n\ninterface Repository {\n  language: string | null;\n}\n\nconst prepareLanguages = (repositories: Repository[]) => {\n  const emptyAccumulator: { [key: string]: number } = {};\n  return repositories\n    .map((repo) => repo.language)\n    .reduce(\n      (acc, el) => ({\n        ...acc,\n        [el || \"null\"]: acc[el || \"null\"] ? acc[el || \"null\"] + 1 : 1,\n      }),\n      emptyAccumulator\n    );\n};\n\nexport default () => {\n  const [repositories] = useRepositories();\n  if (!repositories) {\n    return <p>Loading</p>;\n  }\n  const languages = prepareLanguages(repositories);\n  const data = Object.entries(languages).map(([key, value]) => ({\n    language: key,\n    languageCount: value,\n  }));\n  return (\n    <Paper>\n      <Grid\n        columns={[\n          {\n            name: \"language\",\n            title: \"Language\",\n          },\n          {\n            name: \"languageCount\",\n            title: \"Count\",\n          },\n        ]}\n        rows={data}\n      >\n        <SortingState\n          defaultSorting={[{ columnName: \"languageCount\", direction: \"desc\" }]}\n        />\n        <IntegratedSorting />\n        <Table />\n        <TableHeaderRow showSortingControls />\n      </Grid>\n    </Paper>\n  );\n};\n","import { Route, Switch } from \"react-router-dom\";\nimport { LoginStateSwitch } from \"../UserLogin\";\nimport LogInPage from \"../../pages/LogIn\";\nimport ReposPage from \"../../pages/Repos\";\nimport TopicsPage from \"../../pages/Topics\";\nimport LicensesPage from \"../../pages/Licenses\";\nimport LanguagesPage from \"../../pages/Languages\";\n\nexport default function Router() {\n  return (\n    <>\n      <LoginStateSwitch selectedLoginState={false}>\n        <LogInPage />\n      </LoginStateSwitch>\n      <LoginStateSwitch selectedLoginState={true}>\n        <Switch>\n          <Route\n            exact\n            path={process.env.PUBLIC_URL + \"/\"}\n            component={ReposPage}\n          />\n          <Route\n            exact\n            path={process.env.PUBLIC_URL + \"/topics\"}\n            component={TopicsPage}\n          />\n          <Route\n            exact\n            path={process.env.PUBLIC_URL + \"/licenses\"}\n            component={LicensesPage}\n          />\n          <Route\n            exact\n            path={process.env.PUBLIC_URL + \"/languages\"}\n            component={LanguagesPage}\n          />\n        </Switch>\n      </LoginStateSwitch>\n    </>\n  );\n}\n","import {\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { createContext, ReactNode, useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst DrawerMenuContext = createContext({\n  drawerOpen: false,\n  toggleDrawer: (_?: boolean) => {},\n});\n\ntype DrawerMenuWrapperProps = {\n  children: ReactNode;\n};\n\nexport function DrawerMenuWrapper({ children }: DrawerMenuWrapperProps) {\n  const [drawerOpen, setDrawerOpen] = useState(false);\n\n  function toggleDrawer(newState?: boolean) {\n    if (typeof newState === \"undefined\") {\n      setDrawerOpen(!drawerOpen);\n      return;\n    } else {\n      setDrawerOpen(newState);\n    }\n  }\n\n  return (\n    <DrawerMenuContext.Provider value={{ drawerOpen, toggleDrawer }}>\n      {children}\n    </DrawerMenuContext.Provider>\n  );\n}\n\nexport function DrawerMenuToggleButton(\n  props: React.ComponentProps<typeof IconButton>\n) {\n  const { toggleDrawer } = useContext(DrawerMenuContext);\n  return (\n    <IconButton onClick={() => toggleDrawer()} {...props}>\n      <MenuIcon />\n    </IconButton>\n  );\n}\n\nexport function DrawerMenu() {\n  const { drawerOpen, toggleDrawer } = useContext(DrawerMenuContext);\n  return (\n    <Drawer open={drawerOpen} onClose={() => toggleDrawer(false)}>\n      <div\n        onClick={() => toggleDrawer(false)}\n        onKeyDown={() => toggleDrawer(false)}\n      >\n        <List>\n          <ListItem button>\n            <Link to={process.env.PUBLIC_URL + \"/\"}>\n              <ListItemText primary=\"Repositories\" />\n            </Link>\n          </ListItem>\n          <ListItem button>\n            <Link to={process.env.PUBLIC_URL + \"/topics\"}>\n              <ListItemText primary=\"Topics\" />\n            </Link>\n          </ListItem>\n          <ListItem button>\n            <Link to={process.env.PUBLIC_URL + \"/licenses\"}>\n              <ListItemText primary=\"Licenses\" />\n            </Link>\n          </ListItem>\n          <ListItem button>\n            <Link to={process.env.PUBLIC_URL + \"/languages\"}>\n              <ListItemText primary=\"Languages\" />\n            </Link>\n          </ListItem>\n        </List>\n      </div>\n    </Drawer>\n  );\n}\n","import { useLogin, LoginButton, LoginStateSwitch } from \"../UserLogin\";\nimport { useRepositories } from \"../useRepositories\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  withStyles,\n  WithStyles,\n} from \"@material-ui/core\";\nimport { DrawerMenuToggleButton } from \"../DrawerMenu\";\n\nconst styles = () => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n});\n\nfunction TopNav({ classes }: WithStyles<typeof styles>) {\n  const login: any = useLogin();\n  const [_, refreshRepositories] = useRepositories();\n\n  const creds: { accessToken: string; login: string } = {\n    accessToken: login.accessToken,\n    login: login.user.login,\n  };\n\n  return (\n    <AppBar>\n      <Toolbar>\n        <LoginStateSwitch selectedLoginState={true}>\n          <DrawerMenuToggleButton\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"Menu\"\n          />\n        </LoginStateSwitch>\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n          GitHub Repo Organizer\n        </Typography>\n        <LoginButton color=\"inherit\" />\n        <LoginStateSwitch selectedLoginState={true}>\n          <Button onClick={() => refreshRepositories()} color=\"inherit\">\n            Refresh\n          </Button>\n        </LoginStateSwitch>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default withStyles(styles)(TopNav);\n","import { Theme, WithStyles, withStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport Routes from \"./features/Routes\";\nimport { DrawerMenuWrapper, DrawerMenu } from \"./features/DrawerMenu\";\nimport TopNav from \"./features/TopNav\";\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n});\n\nfunction App({ classes }: WithStyles<typeof styles>) {\n  return (\n    <DrawerMenuWrapper>\n      <CssBaseline />\n      <Router>\n        <div className=\"App\">\n          <TopNav />\n          <DrawerMenu />\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <Routes />\n          </main>\n        </div>\n      </Router>\n    </DrawerMenuWrapper>\n  );\n}\n\nexport default withStyles(styles)(App);\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}